// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#ifndef PROTOBUF_messages_2eproto__INCLUDED
#define PROTOBUF_messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace upscaledb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_messages_2eproto();
void protobuf_AssignDesc_messages_2eproto();
void protobuf_ShutdownFile_messages_2eproto();

class ProtoWrapper;
class ConnectRequest;
class ConnectReply;
class DisconnectRequest;
class DisconnectReply;
class EnvGetParametersRequest;
class EnvGetParametersReply;
class EnvGetDatabaseNamesRequest;
class EnvGetDatabaseNamesReply;
class EnvRenameRequest;
class EnvRenameReply;
class EnvFlushRequest;
class EnvFlushReply;
class EnvCreateDbRequest;
class EnvCreateDbReply;
class EnvOpenDbRequest;
class EnvOpenDbReply;
class EnvEraseDbRequest;
class EnvEraseDbReply;
class DbCloseRequest;
class DbCloseReply;
class DbGetParametersRequest;
class DbGetParametersReply;
class TxnBeginRequest;
class TxnBeginReply;
class TxnCommitRequest;
class TxnCommitReply;
class TxnAbortRequest;
class TxnAbortReply;
class DbCheckIntegrityRequest;
class DbCheckIntegrityReply;
class DbCountRequest;
class DbCountReply;
class Key;
class Record;
class DbInsertRequest;
class DbInsertReply;
class DbEraseRequest;
class DbEraseReply;
class DbFindRequest;
class DbFindReply;
class CursorCreateRequest;
class CursorCreateReply;
class CursorCloneRequest;
class CursorCloneReply;
class CursorCloseRequest;
class CursorCloseReply;
class CursorInsertRequest;
class CursorInsertReply;
class CursorEraseRequest;
class CursorEraseReply;
class CursorGetRecordCountRequest;
class CursorGetRecordCountReply;
class CursorGetRecordSizeRequest;
class CursorGetRecordSizeReply;
class CursorGetDuplicatePositionRequest;
class CursorGetDuplicatePositionReply;
class CursorOverwriteRequest;
class CursorOverwriteReply;
class CursorMoveRequest;
class CursorMoveReply;

enum ProtoWrapper_Type {
  ProtoWrapper_Type_CONNECT_REQUEST = 10,
  ProtoWrapper_Type_CONNECT_REPLY = 11,
  ProtoWrapper_Type_DISCONNECT_REQUEST = 12,
  ProtoWrapper_Type_DISCONNECT_REPLY = 13,
  ProtoWrapper_Type_ENV_RENAME_REQUEST = 20,
  ProtoWrapper_Type_ENV_RENAME_REPLY = 21,
  ProtoWrapper_Type_ENV_GET_PARAMETERS_REQUEST = 30,
  ProtoWrapper_Type_ENV_GET_PARAMETERS_REPLY = 31,
  ProtoWrapper_Type_ENV_GET_DATABASE_NAMES_REQUEST = 40,
  ProtoWrapper_Type_ENV_GET_DATABASE_NAMES_REPLY = 41,
  ProtoWrapper_Type_ENV_FLUSH_REQUEST = 50,
  ProtoWrapper_Type_ENV_FLUSH_REPLY = 51,
  ProtoWrapper_Type_ENV_CREATE_DB_REQUEST = 60,
  ProtoWrapper_Type_ENV_CREATE_DB_REPLY = 61,
  ProtoWrapper_Type_ENV_OPEN_DB_REQUEST = 70,
  ProtoWrapper_Type_ENV_OPEN_DB_REPLY = 71,
  ProtoWrapper_Type_ENV_ERASE_DB_REQUEST = 80,
  ProtoWrapper_Type_ENV_ERASE_DB_REPLY = 81,
  ProtoWrapper_Type_DB_CLOSE_REQUEST = 90,
  ProtoWrapper_Type_DB_CLOSE_REPLY = 91,
  ProtoWrapper_Type_DB_GET_PARAMETERS_REQUEST = 100,
  ProtoWrapper_Type_DB_GET_PARAMETERS_REPLY = 101,
  ProtoWrapper_Type_TXN_BEGIN_REQUEST = 120,
  ProtoWrapper_Type_TXN_BEGIN_REPLY = 121,
  ProtoWrapper_Type_TXN_COMMIT_REQUEST = 130,
  ProtoWrapper_Type_TXN_COMMIT_REPLY = 131,
  ProtoWrapper_Type_TXN_ABORT_REQUEST = 140,
  ProtoWrapper_Type_TXN_ABORT_REPLY = 141,
  ProtoWrapper_Type_DB_CHECK_INTEGRITY_REQUEST = 150,
  ProtoWrapper_Type_DB_CHECK_INTEGRITY_REPLY = 151,
  ProtoWrapper_Type_DB_GET_KEY_COUNT_REQUEST = 160,
  ProtoWrapper_Type_DB_GET_KEY_COUNT_REPLY = 161,
  ProtoWrapper_Type_DB_INSERT_REQUEST = 170,
  ProtoWrapper_Type_DB_INSERT_REPLY = 171,
  ProtoWrapper_Type_DB_ERASE_REQUEST = 180,
  ProtoWrapper_Type_DB_ERASE_REPLY = 181,
  ProtoWrapper_Type_DB_FIND_REQUEST = 190,
  ProtoWrapper_Type_DB_FIND_REPLY = 191,
  ProtoWrapper_Type_CURSOR_CREATE_REQUEST = 200,
  ProtoWrapper_Type_CURSOR_CREATE_REPLY = 201,
  ProtoWrapper_Type_CURSOR_CLONE_REQUEST = 210,
  ProtoWrapper_Type_CURSOR_CLONE_REPLY = 211,
  ProtoWrapper_Type_CURSOR_CLOSE_REQUEST = 220,
  ProtoWrapper_Type_CURSOR_CLOSE_REPLY = 221,
  ProtoWrapper_Type_CURSOR_INSERT_REQUEST = 230,
  ProtoWrapper_Type_CURSOR_INSERT_REPLY = 231,
  ProtoWrapper_Type_CURSOR_ERASE_REQUEST = 240,
  ProtoWrapper_Type_CURSOR_ERASE_REPLY = 241,
  ProtoWrapper_Type_CURSOR_GET_RECORD_COUNT_REQUEST = 260,
  ProtoWrapper_Type_CURSOR_GET_RECORD_COUNT_REPLY = 261,
  ProtoWrapper_Type_CURSOR_GET_DUPLICATE_POSITION_REQUEST = 262,
  ProtoWrapper_Type_CURSOR_GET_DUPLICATE_POSITION_REPLY = 263,
  ProtoWrapper_Type_CURSOR_GET_RECORD_SIZE_REQUEST = 264,
  ProtoWrapper_Type_CURSOR_GET_RECORD_SIZE_REPLY = 265,
  ProtoWrapper_Type_CURSOR_OVERWRITE_REQUEST = 270,
  ProtoWrapper_Type_CURSOR_OVERWRITE_REPLY = 271,
  ProtoWrapper_Type_CURSOR_MOVE_REQUEST = 280,
  ProtoWrapper_Type_CURSOR_MOVE_REPLY = 281
};
bool ProtoWrapper_Type_IsValid(int value);
const ProtoWrapper_Type ProtoWrapper_Type_Type_MIN = ProtoWrapper_Type_CONNECT_REQUEST;
const ProtoWrapper_Type ProtoWrapper_Type_Type_MAX = ProtoWrapper_Type_CURSOR_MOVE_REPLY;
const int ProtoWrapper_Type_Type_ARRAYSIZE = ProtoWrapper_Type_Type_MAX + 1;

// ===================================================================

class ProtoWrapper : public ::google::protobuf::MessageLite {
 public:
  ProtoWrapper();
  virtual ~ProtoWrapper();

  ProtoWrapper(const ProtoWrapper& from);

  inline ProtoWrapper& operator=(const ProtoWrapper& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ProtoWrapper& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ProtoWrapper* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ProtoWrapper* other);

  // implements Message ----------------------------------------------

  ProtoWrapper* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ProtoWrapper& from);
  void MergeFrom(const ProtoWrapper& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef ProtoWrapper_Type Type;
  static const Type CONNECT_REQUEST = ProtoWrapper_Type_CONNECT_REQUEST;
  static const Type CONNECT_REPLY = ProtoWrapper_Type_CONNECT_REPLY;
  static const Type DISCONNECT_REQUEST = ProtoWrapper_Type_DISCONNECT_REQUEST;
  static const Type DISCONNECT_REPLY = ProtoWrapper_Type_DISCONNECT_REPLY;
  static const Type ENV_RENAME_REQUEST = ProtoWrapper_Type_ENV_RENAME_REQUEST;
  static const Type ENV_RENAME_REPLY = ProtoWrapper_Type_ENV_RENAME_REPLY;
  static const Type ENV_GET_PARAMETERS_REQUEST = ProtoWrapper_Type_ENV_GET_PARAMETERS_REQUEST;
  static const Type ENV_GET_PARAMETERS_REPLY = ProtoWrapper_Type_ENV_GET_PARAMETERS_REPLY;
  static const Type ENV_GET_DATABASE_NAMES_REQUEST = ProtoWrapper_Type_ENV_GET_DATABASE_NAMES_REQUEST;
  static const Type ENV_GET_DATABASE_NAMES_REPLY = ProtoWrapper_Type_ENV_GET_DATABASE_NAMES_REPLY;
  static const Type ENV_FLUSH_REQUEST = ProtoWrapper_Type_ENV_FLUSH_REQUEST;
  static const Type ENV_FLUSH_REPLY = ProtoWrapper_Type_ENV_FLUSH_REPLY;
  static const Type ENV_CREATE_DB_REQUEST = ProtoWrapper_Type_ENV_CREATE_DB_REQUEST;
  static const Type ENV_CREATE_DB_REPLY = ProtoWrapper_Type_ENV_CREATE_DB_REPLY;
  static const Type ENV_OPEN_DB_REQUEST = ProtoWrapper_Type_ENV_OPEN_DB_REQUEST;
  static const Type ENV_OPEN_DB_REPLY = ProtoWrapper_Type_ENV_OPEN_DB_REPLY;
  static const Type ENV_ERASE_DB_REQUEST = ProtoWrapper_Type_ENV_ERASE_DB_REQUEST;
  static const Type ENV_ERASE_DB_REPLY = ProtoWrapper_Type_ENV_ERASE_DB_REPLY;
  static const Type DB_CLOSE_REQUEST = ProtoWrapper_Type_DB_CLOSE_REQUEST;
  static const Type DB_CLOSE_REPLY = ProtoWrapper_Type_DB_CLOSE_REPLY;
  static const Type DB_GET_PARAMETERS_REQUEST = ProtoWrapper_Type_DB_GET_PARAMETERS_REQUEST;
  static const Type DB_GET_PARAMETERS_REPLY = ProtoWrapper_Type_DB_GET_PARAMETERS_REPLY;
  static const Type TXN_BEGIN_REQUEST = ProtoWrapper_Type_TXN_BEGIN_REQUEST;
  static const Type TXN_BEGIN_REPLY = ProtoWrapper_Type_TXN_BEGIN_REPLY;
  static const Type TXN_COMMIT_REQUEST = ProtoWrapper_Type_TXN_COMMIT_REQUEST;
  static const Type TXN_COMMIT_REPLY = ProtoWrapper_Type_TXN_COMMIT_REPLY;
  static const Type TXN_ABORT_REQUEST = ProtoWrapper_Type_TXN_ABORT_REQUEST;
  static const Type TXN_ABORT_REPLY = ProtoWrapper_Type_TXN_ABORT_REPLY;
  static const Type DB_CHECK_INTEGRITY_REQUEST = ProtoWrapper_Type_DB_CHECK_INTEGRITY_REQUEST;
  static const Type DB_CHECK_INTEGRITY_REPLY = ProtoWrapper_Type_DB_CHECK_INTEGRITY_REPLY;
  static const Type DB_GET_KEY_COUNT_REQUEST = ProtoWrapper_Type_DB_GET_KEY_COUNT_REQUEST;
  static const Type DB_GET_KEY_COUNT_REPLY = ProtoWrapper_Type_DB_GET_KEY_COUNT_REPLY;
  static const Type DB_INSERT_REQUEST = ProtoWrapper_Type_DB_INSERT_REQUEST;
  static const Type DB_INSERT_REPLY = ProtoWrapper_Type_DB_INSERT_REPLY;
  static const Type DB_ERASE_REQUEST = ProtoWrapper_Type_DB_ERASE_REQUEST;
  static const Type DB_ERASE_REPLY = ProtoWrapper_Type_DB_ERASE_REPLY;
  static const Type DB_FIND_REQUEST = ProtoWrapper_Type_DB_FIND_REQUEST;
  static const Type DB_FIND_REPLY = ProtoWrapper_Type_DB_FIND_REPLY;
  static const Type CURSOR_CREATE_REQUEST = ProtoWrapper_Type_CURSOR_CREATE_REQUEST;
  static const Type CURSOR_CREATE_REPLY = ProtoWrapper_Type_CURSOR_CREATE_REPLY;
  static const Type CURSOR_CLONE_REQUEST = ProtoWrapper_Type_CURSOR_CLONE_REQUEST;
  static const Type CURSOR_CLONE_REPLY = ProtoWrapper_Type_CURSOR_CLONE_REPLY;
  static const Type CURSOR_CLOSE_REQUEST = ProtoWrapper_Type_CURSOR_CLOSE_REQUEST;
  static const Type CURSOR_CLOSE_REPLY = ProtoWrapper_Type_CURSOR_CLOSE_REPLY;
  static const Type CURSOR_INSERT_REQUEST = ProtoWrapper_Type_CURSOR_INSERT_REQUEST;
  static const Type CURSOR_INSERT_REPLY = ProtoWrapper_Type_CURSOR_INSERT_REPLY;
  static const Type CURSOR_ERASE_REQUEST = ProtoWrapper_Type_CURSOR_ERASE_REQUEST;
  static const Type CURSOR_ERASE_REPLY = ProtoWrapper_Type_CURSOR_ERASE_REPLY;
  static const Type CURSOR_GET_RECORD_COUNT_REQUEST = ProtoWrapper_Type_CURSOR_GET_RECORD_COUNT_REQUEST;
  static const Type CURSOR_GET_RECORD_COUNT_REPLY = ProtoWrapper_Type_CURSOR_GET_RECORD_COUNT_REPLY;
  static const Type CURSOR_GET_DUPLICATE_POSITION_REQUEST = ProtoWrapper_Type_CURSOR_GET_DUPLICATE_POSITION_REQUEST;
  static const Type CURSOR_GET_DUPLICATE_POSITION_REPLY = ProtoWrapper_Type_CURSOR_GET_DUPLICATE_POSITION_REPLY;
  static const Type CURSOR_GET_RECORD_SIZE_REQUEST = ProtoWrapper_Type_CURSOR_GET_RECORD_SIZE_REQUEST;
  static const Type CURSOR_GET_RECORD_SIZE_REPLY = ProtoWrapper_Type_CURSOR_GET_RECORD_SIZE_REPLY;
  static const Type CURSOR_OVERWRITE_REQUEST = ProtoWrapper_Type_CURSOR_OVERWRITE_REQUEST;
  static const Type CURSOR_OVERWRITE_REPLY = ProtoWrapper_Type_CURSOR_OVERWRITE_REPLY;
  static const Type CURSOR_MOVE_REQUEST = ProtoWrapper_Type_CURSOR_MOVE_REQUEST;
  static const Type CURSOR_MOVE_REPLY = ProtoWrapper_Type_CURSOR_MOVE_REPLY;
  static inline bool Type_IsValid(int value) {
    return ProtoWrapper_Type_IsValid(value);
  }
  static const Type Type_MIN =
    ProtoWrapper_Type_Type_MIN;
  static const Type Type_MAX =
    ProtoWrapper_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    ProtoWrapper_Type_Type_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // required .upscaledb.ProtoWrapper.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::upscaledb::ProtoWrapper_Type type() const;
  inline void set_type(::upscaledb::ProtoWrapper_Type value);

  // optional .upscaledb.ConnectRequest connect_request = 10;
  inline bool has_connect_request() const;
  inline void clear_connect_request();
  static const int kConnectRequestFieldNumber = 10;
  inline const ::upscaledb::ConnectRequest& connect_request() const;
  inline ::upscaledb::ConnectRequest* mutable_connect_request();
  inline ::upscaledb::ConnectRequest* release_connect_request();
  inline void set_allocated_connect_request(::upscaledb::ConnectRequest* connect_request);

  // optional .upscaledb.ConnectReply connect_reply = 11;
  inline bool has_connect_reply() const;
  inline void clear_connect_reply();
  static const int kConnectReplyFieldNumber = 11;
  inline const ::upscaledb::ConnectReply& connect_reply() const;
  inline ::upscaledb::ConnectReply* mutable_connect_reply();
  inline ::upscaledb::ConnectReply* release_connect_reply();
  inline void set_allocated_connect_reply(::upscaledb::ConnectReply* connect_reply);

  // optional .upscaledb.DisconnectRequest disconnect_request = 12;
  inline bool has_disconnect_request() const;
  inline void clear_disconnect_request();
  static const int kDisconnectRequestFieldNumber = 12;
  inline const ::upscaledb::DisconnectRequest& disconnect_request() const;
  inline ::upscaledb::DisconnectRequest* mutable_disconnect_request();
  inline ::upscaledb::DisconnectRequest* release_disconnect_request();
  inline void set_allocated_disconnect_request(::upscaledb::DisconnectRequest* disconnect_request);

  // optional .upscaledb.DisconnectReply disconnect_reply = 13;
  inline bool has_disconnect_reply() const;
  inline void clear_disconnect_reply();
  static const int kDisconnectReplyFieldNumber = 13;
  inline const ::upscaledb::DisconnectReply& disconnect_reply() const;
  inline ::upscaledb::DisconnectReply* mutable_disconnect_reply();
  inline ::upscaledb::DisconnectReply* release_disconnect_reply();
  inline void set_allocated_disconnect_reply(::upscaledb::DisconnectReply* disconnect_reply);

  // optional .upscaledb.EnvRenameRequest env_rename_request = 20;
  inline bool has_env_rename_request() const;
  inline void clear_env_rename_request();
  static const int kEnvRenameRequestFieldNumber = 20;
  inline const ::upscaledb::EnvRenameRequest& env_rename_request() const;
  inline ::upscaledb::EnvRenameRequest* mutable_env_rename_request();
  inline ::upscaledb::EnvRenameRequest* release_env_rename_request();
  inline void set_allocated_env_rename_request(::upscaledb::EnvRenameRequest* env_rename_request);

  // optional .upscaledb.EnvRenameReply env_rename_reply = 21;
  inline bool has_env_rename_reply() const;
  inline void clear_env_rename_reply();
  static const int kEnvRenameReplyFieldNumber = 21;
  inline const ::upscaledb::EnvRenameReply& env_rename_reply() const;
  inline ::upscaledb::EnvRenameReply* mutable_env_rename_reply();
  inline ::upscaledb::EnvRenameReply* release_env_rename_reply();
  inline void set_allocated_env_rename_reply(::upscaledb::EnvRenameReply* env_rename_reply);

  // optional .upscaledb.EnvGetParametersRequest env_get_parameters_request = 30;
  inline bool has_env_get_parameters_request() const;
  inline void clear_env_get_parameters_request();
  static const int kEnvGetParametersRequestFieldNumber = 30;
  inline const ::upscaledb::EnvGetParametersRequest& env_get_parameters_request() const;
  inline ::upscaledb::EnvGetParametersRequest* mutable_env_get_parameters_request();
  inline ::upscaledb::EnvGetParametersRequest* release_env_get_parameters_request();
  inline void set_allocated_env_get_parameters_request(::upscaledb::EnvGetParametersRequest* env_get_parameters_request);

  // optional .upscaledb.EnvGetParametersReply env_get_parameters_reply = 31;
  inline bool has_env_get_parameters_reply() const;
  inline void clear_env_get_parameters_reply();
  static const int kEnvGetParametersReplyFieldNumber = 31;
  inline const ::upscaledb::EnvGetParametersReply& env_get_parameters_reply() const;
  inline ::upscaledb::EnvGetParametersReply* mutable_env_get_parameters_reply();
  inline ::upscaledb::EnvGetParametersReply* release_env_get_parameters_reply();
  inline void set_allocated_env_get_parameters_reply(::upscaledb::EnvGetParametersReply* env_get_parameters_reply);

  // optional .upscaledb.EnvGetDatabaseNamesRequest env_get_database_names_request = 40;
  inline bool has_env_get_database_names_request() const;
  inline void clear_env_get_database_names_request();
  static const int kEnvGetDatabaseNamesRequestFieldNumber = 40;
  inline const ::upscaledb::EnvGetDatabaseNamesRequest& env_get_database_names_request() const;
  inline ::upscaledb::EnvGetDatabaseNamesRequest* mutable_env_get_database_names_request();
  inline ::upscaledb::EnvGetDatabaseNamesRequest* release_env_get_database_names_request();
  inline void set_allocated_env_get_database_names_request(::upscaledb::EnvGetDatabaseNamesRequest* env_get_database_names_request);

  // optional .upscaledb.EnvGetDatabaseNamesReply env_get_database_names_reply = 41;
  inline bool has_env_get_database_names_reply() const;
  inline void clear_env_get_database_names_reply();
  static const int kEnvGetDatabaseNamesReplyFieldNumber = 41;
  inline const ::upscaledb::EnvGetDatabaseNamesReply& env_get_database_names_reply() const;
  inline ::upscaledb::EnvGetDatabaseNamesReply* mutable_env_get_database_names_reply();
  inline ::upscaledb::EnvGetDatabaseNamesReply* release_env_get_database_names_reply();
  inline void set_allocated_env_get_database_names_reply(::upscaledb::EnvGetDatabaseNamesReply* env_get_database_names_reply);

  // optional .upscaledb.EnvFlushRequest env_flush_request = 50;
  inline bool has_env_flush_request() const;
  inline void clear_env_flush_request();
  static const int kEnvFlushRequestFieldNumber = 50;
  inline const ::upscaledb::EnvFlushRequest& env_flush_request() const;
  inline ::upscaledb::EnvFlushRequest* mutable_env_flush_request();
  inline ::upscaledb::EnvFlushRequest* release_env_flush_request();
  inline void set_allocated_env_flush_request(::upscaledb::EnvFlushRequest* env_flush_request);

  // optional .upscaledb.EnvFlushReply env_flush_reply = 51;
  inline bool has_env_flush_reply() const;
  inline void clear_env_flush_reply();
  static const int kEnvFlushReplyFieldNumber = 51;
  inline const ::upscaledb::EnvFlushReply& env_flush_reply() const;
  inline ::upscaledb::EnvFlushReply* mutable_env_flush_reply();
  inline ::upscaledb::EnvFlushReply* release_env_flush_reply();
  inline void set_allocated_env_flush_reply(::upscaledb::EnvFlushReply* env_flush_reply);

  // optional .upscaledb.EnvCreateDbRequest env_create_db_request = 60;
  inline bool has_env_create_db_request() const;
  inline void clear_env_create_db_request();
  static const int kEnvCreateDbRequestFieldNumber = 60;
  inline const ::upscaledb::EnvCreateDbRequest& env_create_db_request() const;
  inline ::upscaledb::EnvCreateDbRequest* mutable_env_create_db_request();
  inline ::upscaledb::EnvCreateDbRequest* release_env_create_db_request();
  inline void set_allocated_env_create_db_request(::upscaledb::EnvCreateDbRequest* env_create_db_request);

  // optional .upscaledb.EnvCreateDbReply env_create_db_reply = 61;
  inline bool has_env_create_db_reply() const;
  inline void clear_env_create_db_reply();
  static const int kEnvCreateDbReplyFieldNumber = 61;
  inline const ::upscaledb::EnvCreateDbReply& env_create_db_reply() const;
  inline ::upscaledb::EnvCreateDbReply* mutable_env_create_db_reply();
  inline ::upscaledb::EnvCreateDbReply* release_env_create_db_reply();
  inline void set_allocated_env_create_db_reply(::upscaledb::EnvCreateDbReply* env_create_db_reply);

  // optional .upscaledb.EnvOpenDbRequest env_open_db_request = 70;
  inline bool has_env_open_db_request() const;
  inline void clear_env_open_db_request();
  static const int kEnvOpenDbRequestFieldNumber = 70;
  inline const ::upscaledb::EnvOpenDbRequest& env_open_db_request() const;
  inline ::upscaledb::EnvOpenDbRequest* mutable_env_open_db_request();
  inline ::upscaledb::EnvOpenDbRequest* release_env_open_db_request();
  inline void set_allocated_env_open_db_request(::upscaledb::EnvOpenDbRequest* env_open_db_request);

  // optional .upscaledb.EnvOpenDbReply env_open_db_reply = 71;
  inline bool has_env_open_db_reply() const;
  inline void clear_env_open_db_reply();
  static const int kEnvOpenDbReplyFieldNumber = 71;
  inline const ::upscaledb::EnvOpenDbReply& env_open_db_reply() const;
  inline ::upscaledb::EnvOpenDbReply* mutable_env_open_db_reply();
  inline ::upscaledb::EnvOpenDbReply* release_env_open_db_reply();
  inline void set_allocated_env_open_db_reply(::upscaledb::EnvOpenDbReply* env_open_db_reply);

  // optional .upscaledb.EnvEraseDbRequest env_erase_db_request = 80;
  inline bool has_env_erase_db_request() const;
  inline void clear_env_erase_db_request();
  static const int kEnvEraseDbRequestFieldNumber = 80;
  inline const ::upscaledb::EnvEraseDbRequest& env_erase_db_request() const;
  inline ::upscaledb::EnvEraseDbRequest* mutable_env_erase_db_request();
  inline ::upscaledb::EnvEraseDbRequest* release_env_erase_db_request();
  inline void set_allocated_env_erase_db_request(::upscaledb::EnvEraseDbRequest* env_erase_db_request);

  // optional .upscaledb.EnvEraseDbReply env_erase_db_reply = 81;
  inline bool has_env_erase_db_reply() const;
  inline void clear_env_erase_db_reply();
  static const int kEnvEraseDbReplyFieldNumber = 81;
  inline const ::upscaledb::EnvEraseDbReply& env_erase_db_reply() const;
  inline ::upscaledb::EnvEraseDbReply* mutable_env_erase_db_reply();
  inline ::upscaledb::EnvEraseDbReply* release_env_erase_db_reply();
  inline void set_allocated_env_erase_db_reply(::upscaledb::EnvEraseDbReply* env_erase_db_reply);

  // optional .upscaledb.DbCloseRequest db_close_request = 90;
  inline bool has_db_close_request() const;
  inline void clear_db_close_request();
  static const int kDbCloseRequestFieldNumber = 90;
  inline const ::upscaledb::DbCloseRequest& db_close_request() const;
  inline ::upscaledb::DbCloseRequest* mutable_db_close_request();
  inline ::upscaledb::DbCloseRequest* release_db_close_request();
  inline void set_allocated_db_close_request(::upscaledb::DbCloseRequest* db_close_request);

  // optional .upscaledb.DbCloseReply db_close_reply = 91;
  inline bool has_db_close_reply() const;
  inline void clear_db_close_reply();
  static const int kDbCloseReplyFieldNumber = 91;
  inline const ::upscaledb::DbCloseReply& db_close_reply() const;
  inline ::upscaledb::DbCloseReply* mutable_db_close_reply();
  inline ::upscaledb::DbCloseReply* release_db_close_reply();
  inline void set_allocated_db_close_reply(::upscaledb::DbCloseReply* db_close_reply);

  // optional .upscaledb.DbGetParametersRequest db_get_parameters_request = 100;
  inline bool has_db_get_parameters_request() const;
  inline void clear_db_get_parameters_request();
  static const int kDbGetParametersRequestFieldNumber = 100;
  inline const ::upscaledb::DbGetParametersRequest& db_get_parameters_request() const;
  inline ::upscaledb::DbGetParametersRequest* mutable_db_get_parameters_request();
  inline ::upscaledb::DbGetParametersRequest* release_db_get_parameters_request();
  inline void set_allocated_db_get_parameters_request(::upscaledb::DbGetParametersRequest* db_get_parameters_request);

  // optional .upscaledb.DbGetParametersReply db_get_parameters_reply = 101;
  inline bool has_db_get_parameters_reply() const;
  inline void clear_db_get_parameters_reply();
  static const int kDbGetParametersReplyFieldNumber = 101;
  inline const ::upscaledb::DbGetParametersReply& db_get_parameters_reply() const;
  inline ::upscaledb::DbGetParametersReply* mutable_db_get_parameters_reply();
  inline ::upscaledb::DbGetParametersReply* release_db_get_parameters_reply();
  inline void set_allocated_db_get_parameters_reply(::upscaledb::DbGetParametersReply* db_get_parameters_reply);

  // optional .upscaledb.TxnBeginRequest txn_begin_request = 120;
  inline bool has_txn_begin_request() const;
  inline void clear_txn_begin_request();
  static const int kTxnBeginRequestFieldNumber = 120;
  inline const ::upscaledb::TxnBeginRequest& txn_begin_request() const;
  inline ::upscaledb::TxnBeginRequest* mutable_txn_begin_request();
  inline ::upscaledb::TxnBeginRequest* release_txn_begin_request();
  inline void set_allocated_txn_begin_request(::upscaledb::TxnBeginRequest* txn_begin_request);

  // optional .upscaledb.TxnBeginReply txn_begin_reply = 121;
  inline bool has_txn_begin_reply() const;
  inline void clear_txn_begin_reply();
  static const int kTxnBeginReplyFieldNumber = 121;
  inline const ::upscaledb::TxnBeginReply& txn_begin_reply() const;
  inline ::upscaledb::TxnBeginReply* mutable_txn_begin_reply();
  inline ::upscaledb::TxnBeginReply* release_txn_begin_reply();
  inline void set_allocated_txn_begin_reply(::upscaledb::TxnBeginReply* txn_begin_reply);

  // optional .upscaledb.TxnCommitRequest txn_commit_request = 130;
  inline bool has_txn_commit_request() const;
  inline void clear_txn_commit_request();
  static const int kTxnCommitRequestFieldNumber = 130;
  inline const ::upscaledb::TxnCommitRequest& txn_commit_request() const;
  inline ::upscaledb::TxnCommitRequest* mutable_txn_commit_request();
  inline ::upscaledb::TxnCommitRequest* release_txn_commit_request();
  inline void set_allocated_txn_commit_request(::upscaledb::TxnCommitRequest* txn_commit_request);

  // optional .upscaledb.TxnCommitReply txn_commit_reply = 131;
  inline bool has_txn_commit_reply() const;
  inline void clear_txn_commit_reply();
  static const int kTxnCommitReplyFieldNumber = 131;
  inline const ::upscaledb::TxnCommitReply& txn_commit_reply() const;
  inline ::upscaledb::TxnCommitReply* mutable_txn_commit_reply();
  inline ::upscaledb::TxnCommitReply* release_txn_commit_reply();
  inline void set_allocated_txn_commit_reply(::upscaledb::TxnCommitReply* txn_commit_reply);

  // optional .upscaledb.TxnAbortRequest txn_abort_request = 140;
  inline bool has_txn_abort_request() const;
  inline void clear_txn_abort_request();
  static const int kTxnAbortRequestFieldNumber = 140;
  inline const ::upscaledb::TxnAbortRequest& txn_abort_request() const;
  inline ::upscaledb::TxnAbortRequest* mutable_txn_abort_request();
  inline ::upscaledb::TxnAbortRequest* release_txn_abort_request();
  inline void set_allocated_txn_abort_request(::upscaledb::TxnAbortRequest* txn_abort_request);

  // optional .upscaledb.TxnAbortReply txn_abort_reply = 141;
  inline bool has_txn_abort_reply() const;
  inline void clear_txn_abort_reply();
  static const int kTxnAbortReplyFieldNumber = 141;
  inline const ::upscaledb::TxnAbortReply& txn_abort_reply() const;
  inline ::upscaledb::TxnAbortReply* mutable_txn_abort_reply();
  inline ::upscaledb::TxnAbortReply* release_txn_abort_reply();
  inline void set_allocated_txn_abort_reply(::upscaledb::TxnAbortReply* txn_abort_reply);

  // optional .upscaledb.DbCheckIntegrityRequest db_check_integrity_request = 150;
  inline bool has_db_check_integrity_request() const;
  inline void clear_db_check_integrity_request();
  static const int kDbCheckIntegrityRequestFieldNumber = 150;
  inline const ::upscaledb::DbCheckIntegrityRequest& db_check_integrity_request() const;
  inline ::upscaledb::DbCheckIntegrityRequest* mutable_db_check_integrity_request();
  inline ::upscaledb::DbCheckIntegrityRequest* release_db_check_integrity_request();
  inline void set_allocated_db_check_integrity_request(::upscaledb::DbCheckIntegrityRequest* db_check_integrity_request);

  // optional .upscaledb.DbCheckIntegrityReply db_check_integrity_reply = 151;
  inline bool has_db_check_integrity_reply() const;
  inline void clear_db_check_integrity_reply();
  static const int kDbCheckIntegrityReplyFieldNumber = 151;
  inline const ::upscaledb::DbCheckIntegrityReply& db_check_integrity_reply() const;
  inline ::upscaledb::DbCheckIntegrityReply* mutable_db_check_integrity_reply();
  inline ::upscaledb::DbCheckIntegrityReply* release_db_check_integrity_reply();
  inline void set_allocated_db_check_integrity_reply(::upscaledb::DbCheckIntegrityReply* db_check_integrity_reply);

  // optional .upscaledb.DbCountRequest db_count_request = 160;
  inline bool has_db_count_request() const;
  inline void clear_db_count_request();
  static const int kDbCountRequestFieldNumber = 160;
  inline const ::upscaledb::DbCountRequest& db_count_request() const;
  inline ::upscaledb::DbCountRequest* mutable_db_count_request();
  inline ::upscaledb::DbCountRequest* release_db_count_request();
  inline void set_allocated_db_count_request(::upscaledb::DbCountRequest* db_count_request);

  // optional .upscaledb.DbCountReply db_count_reply = 161;
  inline bool has_db_count_reply() const;
  inline void clear_db_count_reply();
  static const int kDbCountReplyFieldNumber = 161;
  inline const ::upscaledb::DbCountReply& db_count_reply() const;
  inline ::upscaledb::DbCountReply* mutable_db_count_reply();
  inline ::upscaledb::DbCountReply* release_db_count_reply();
  inline void set_allocated_db_count_reply(::upscaledb::DbCountReply* db_count_reply);

  // optional .upscaledb.DbInsertRequest db_insert_request = 170;
  inline bool has_db_insert_request() const;
  inline void clear_db_insert_request();
  static const int kDbInsertRequestFieldNumber = 170;
  inline const ::upscaledb::DbInsertRequest& db_insert_request() const;
  inline ::upscaledb::DbInsertRequest* mutable_db_insert_request();
  inline ::upscaledb::DbInsertRequest* release_db_insert_request();
  inline void set_allocated_db_insert_request(::upscaledb::DbInsertRequest* db_insert_request);

  // optional .upscaledb.DbInsertReply db_insert_reply = 171;
  inline bool has_db_insert_reply() const;
  inline void clear_db_insert_reply();
  static const int kDbInsertReplyFieldNumber = 171;
  inline const ::upscaledb::DbInsertReply& db_insert_reply() const;
  inline ::upscaledb::DbInsertReply* mutable_db_insert_reply();
  inline ::upscaledb::DbInsertReply* release_db_insert_reply();
  inline void set_allocated_db_insert_reply(::upscaledb::DbInsertReply* db_insert_reply);

  // optional .upscaledb.DbEraseRequest db_erase_request = 180;
  inline bool has_db_erase_request() const;
  inline void clear_db_erase_request();
  static const int kDbEraseRequestFieldNumber = 180;
  inline const ::upscaledb::DbEraseRequest& db_erase_request() const;
  inline ::upscaledb::DbEraseRequest* mutable_db_erase_request();
  inline ::upscaledb::DbEraseRequest* release_db_erase_request();
  inline void set_allocated_db_erase_request(::upscaledb::DbEraseRequest* db_erase_request);

  // optional .upscaledb.DbEraseReply db_erase_reply = 181;
  inline bool has_db_erase_reply() const;
  inline void clear_db_erase_reply();
  static const int kDbEraseReplyFieldNumber = 181;
  inline const ::upscaledb::DbEraseReply& db_erase_reply() const;
  inline ::upscaledb::DbEraseReply* mutable_db_erase_reply();
  inline ::upscaledb::DbEraseReply* release_db_erase_reply();
  inline void set_allocated_db_erase_reply(::upscaledb::DbEraseReply* db_erase_reply);

  // optional .upscaledb.DbFindRequest db_find_request = 190;
  inline bool has_db_find_request() const;
  inline void clear_db_find_request();
  static const int kDbFindRequestFieldNumber = 190;
  inline const ::upscaledb::DbFindRequest& db_find_request() const;
  inline ::upscaledb::DbFindRequest* mutable_db_find_request();
  inline ::upscaledb::DbFindRequest* release_db_find_request();
  inline void set_allocated_db_find_request(::upscaledb::DbFindRequest* db_find_request);

  // optional .upscaledb.DbFindReply db_find_reply = 191;
  inline bool has_db_find_reply() const;
  inline void clear_db_find_reply();
  static const int kDbFindReplyFieldNumber = 191;
  inline const ::upscaledb::DbFindReply& db_find_reply() const;
  inline ::upscaledb::DbFindReply* mutable_db_find_reply();
  inline ::upscaledb::DbFindReply* release_db_find_reply();
  inline void set_allocated_db_find_reply(::upscaledb::DbFindReply* db_find_reply);

  // optional .upscaledb.CursorCreateRequest cursor_create_request = 200;
  inline bool has_cursor_create_request() const;
  inline void clear_cursor_create_request();
  static const int kCursorCreateRequestFieldNumber = 200;
  inline const ::upscaledb::CursorCreateRequest& cursor_create_request() const;
  inline ::upscaledb::CursorCreateRequest* mutable_cursor_create_request();
  inline ::upscaledb::CursorCreateRequest* release_cursor_create_request();
  inline void set_allocated_cursor_create_request(::upscaledb::CursorCreateRequest* cursor_create_request);

  // optional .upscaledb.CursorCreateReply cursor_create_reply = 201;
  inline bool has_cursor_create_reply() const;
  inline void clear_cursor_create_reply();
  static const int kCursorCreateReplyFieldNumber = 201;
  inline const ::upscaledb::CursorCreateReply& cursor_create_reply() const;
  inline ::upscaledb::CursorCreateReply* mutable_cursor_create_reply();
  inline ::upscaledb::CursorCreateReply* release_cursor_create_reply();
  inline void set_allocated_cursor_create_reply(::upscaledb::CursorCreateReply* cursor_create_reply);

  // optional .upscaledb.CursorCloneRequest cursor_clone_request = 210;
  inline bool has_cursor_clone_request() const;
  inline void clear_cursor_clone_request();
  static const int kCursorCloneRequestFieldNumber = 210;
  inline const ::upscaledb::CursorCloneRequest& cursor_clone_request() const;
  inline ::upscaledb::CursorCloneRequest* mutable_cursor_clone_request();
  inline ::upscaledb::CursorCloneRequest* release_cursor_clone_request();
  inline void set_allocated_cursor_clone_request(::upscaledb::CursorCloneRequest* cursor_clone_request);

  // optional .upscaledb.CursorCloneReply cursor_clone_reply = 211;
  inline bool has_cursor_clone_reply() const;
  inline void clear_cursor_clone_reply();
  static const int kCursorCloneReplyFieldNumber = 211;
  inline const ::upscaledb::CursorCloneReply& cursor_clone_reply() const;
  inline ::upscaledb::CursorCloneReply* mutable_cursor_clone_reply();
  inline ::upscaledb::CursorCloneReply* release_cursor_clone_reply();
  inline void set_allocated_cursor_clone_reply(::upscaledb::CursorCloneReply* cursor_clone_reply);

  // optional .upscaledb.CursorCloseRequest cursor_close_request = 220;
  inline bool has_cursor_close_request() const;
  inline void clear_cursor_close_request();
  static const int kCursorCloseRequestFieldNumber = 220;
  inline const ::upscaledb::CursorCloseRequest& cursor_close_request() const;
  inline ::upscaledb::CursorCloseRequest* mutable_cursor_close_request();
  inline ::upscaledb::CursorCloseRequest* release_cursor_close_request();
  inline void set_allocated_cursor_close_request(::upscaledb::CursorCloseRequest* cursor_close_request);

  // optional .upscaledb.CursorCloseReply cursor_close_reply = 221;
  inline bool has_cursor_close_reply() const;
  inline void clear_cursor_close_reply();
  static const int kCursorCloseReplyFieldNumber = 221;
  inline const ::upscaledb::CursorCloseReply& cursor_close_reply() const;
  inline ::upscaledb::CursorCloseReply* mutable_cursor_close_reply();
  inline ::upscaledb::CursorCloseReply* release_cursor_close_reply();
  inline void set_allocated_cursor_close_reply(::upscaledb::CursorCloseReply* cursor_close_reply);

  // optional .upscaledb.CursorInsertRequest cursor_insert_request = 230;
  inline bool has_cursor_insert_request() const;
  inline void clear_cursor_insert_request();
  static const int kCursorInsertRequestFieldNumber = 230;
  inline const ::upscaledb::CursorInsertRequest& cursor_insert_request() const;
  inline ::upscaledb::CursorInsertRequest* mutable_cursor_insert_request();
  inline ::upscaledb::CursorInsertRequest* release_cursor_insert_request();
  inline void set_allocated_cursor_insert_request(::upscaledb::CursorInsertRequest* cursor_insert_request);

  // optional .upscaledb.CursorInsertReply cursor_insert_reply = 231;
  inline bool has_cursor_insert_reply() const;
  inline void clear_cursor_insert_reply();
  static const int kCursorInsertReplyFieldNumber = 231;
  inline const ::upscaledb::CursorInsertReply& cursor_insert_reply() const;
  inline ::upscaledb::CursorInsertReply* mutable_cursor_insert_reply();
  inline ::upscaledb::CursorInsertReply* release_cursor_insert_reply();
  inline void set_allocated_cursor_insert_reply(::upscaledb::CursorInsertReply* cursor_insert_reply);

  // optional .upscaledb.CursorEraseRequest cursor_erase_request = 240;
  inline bool has_cursor_erase_request() const;
  inline void clear_cursor_erase_request();
  static const int kCursorEraseRequestFieldNumber = 240;
  inline const ::upscaledb::CursorEraseRequest& cursor_erase_request() const;
  inline ::upscaledb::CursorEraseRequest* mutable_cursor_erase_request();
  inline ::upscaledb::CursorEraseRequest* release_cursor_erase_request();
  inline void set_allocated_cursor_erase_request(::upscaledb::CursorEraseRequest* cursor_erase_request);

  // optional .upscaledb.CursorEraseReply cursor_erase_reply = 241;
  inline bool has_cursor_erase_reply() const;
  inline void clear_cursor_erase_reply();
  static const int kCursorEraseReplyFieldNumber = 241;
  inline const ::upscaledb::CursorEraseReply& cursor_erase_reply() const;
  inline ::upscaledb::CursorEraseReply* mutable_cursor_erase_reply();
  inline ::upscaledb::CursorEraseReply* release_cursor_erase_reply();
  inline void set_allocated_cursor_erase_reply(::upscaledb::CursorEraseReply* cursor_erase_reply);

  // optional .upscaledb.CursorGetRecordCountRequest cursor_get_record_count_request = 260;
  inline bool has_cursor_get_record_count_request() const;
  inline void clear_cursor_get_record_count_request();
  static const int kCursorGetRecordCountRequestFieldNumber = 260;
  inline const ::upscaledb::CursorGetRecordCountRequest& cursor_get_record_count_request() const;
  inline ::upscaledb::CursorGetRecordCountRequest* mutable_cursor_get_record_count_request();
  inline ::upscaledb::CursorGetRecordCountRequest* release_cursor_get_record_count_request();
  inline void set_allocated_cursor_get_record_count_request(::upscaledb::CursorGetRecordCountRequest* cursor_get_record_count_request);

  // optional .upscaledb.CursorGetRecordCountReply cursor_get_record_count_reply = 261;
  inline bool has_cursor_get_record_count_reply() const;
  inline void clear_cursor_get_record_count_reply();
  static const int kCursorGetRecordCountReplyFieldNumber = 261;
  inline const ::upscaledb::CursorGetRecordCountReply& cursor_get_record_count_reply() const;
  inline ::upscaledb::CursorGetRecordCountReply* mutable_cursor_get_record_count_reply();
  inline ::upscaledb::CursorGetRecordCountReply* release_cursor_get_record_count_reply();
  inline void set_allocated_cursor_get_record_count_reply(::upscaledb::CursorGetRecordCountReply* cursor_get_record_count_reply);

  // optional .upscaledb.CursorGetDuplicatePositionRequest cursor_get_duplicate_position_request = 262;
  inline bool has_cursor_get_duplicate_position_request() const;
  inline void clear_cursor_get_duplicate_position_request();
  static const int kCursorGetDuplicatePositionRequestFieldNumber = 262;
  inline const ::upscaledb::CursorGetDuplicatePositionRequest& cursor_get_duplicate_position_request() const;
  inline ::upscaledb::CursorGetDuplicatePositionRequest* mutable_cursor_get_duplicate_position_request();
  inline ::upscaledb::CursorGetDuplicatePositionRequest* release_cursor_get_duplicate_position_request();
  inline void set_allocated_cursor_get_duplicate_position_request(::upscaledb::CursorGetDuplicatePositionRequest* cursor_get_duplicate_position_request);

  // optional .upscaledb.CursorGetDuplicatePositionReply cursor_get_duplicate_position_reply = 263;
  inline bool has_cursor_get_duplicate_position_reply() const;
  inline void clear_cursor_get_duplicate_position_reply();
  static const int kCursorGetDuplicatePositionReplyFieldNumber = 263;
  inline const ::upscaledb::CursorGetDuplicatePositionReply& cursor_get_duplicate_position_reply() const;
  inline ::upscaledb::CursorGetDuplicatePositionReply* mutable_cursor_get_duplicate_position_reply();
  inline ::upscaledb::CursorGetDuplicatePositionReply* release_cursor_get_duplicate_position_reply();
  inline void set_allocated_cursor_get_duplicate_position_reply(::upscaledb::CursorGetDuplicatePositionReply* cursor_get_duplicate_position_reply);

  // optional .upscaledb.CursorGetRecordSizeRequest cursor_get_record_size_request = 264;
  inline bool has_cursor_get_record_size_request() const;
  inline void clear_cursor_get_record_size_request();
  static const int kCursorGetRecordSizeRequestFieldNumber = 264;
  inline const ::upscaledb::CursorGetRecordSizeRequest& cursor_get_record_size_request() const;
  inline ::upscaledb::CursorGetRecordSizeRequest* mutable_cursor_get_record_size_request();
  inline ::upscaledb::CursorGetRecordSizeRequest* release_cursor_get_record_size_request();
  inline void set_allocated_cursor_get_record_size_request(::upscaledb::CursorGetRecordSizeRequest* cursor_get_record_size_request);

  // optional .upscaledb.CursorGetRecordSizeReply cursor_get_record_size_reply = 265;
  inline bool has_cursor_get_record_size_reply() const;
  inline void clear_cursor_get_record_size_reply();
  static const int kCursorGetRecordSizeReplyFieldNumber = 265;
  inline const ::upscaledb::CursorGetRecordSizeReply& cursor_get_record_size_reply() const;
  inline ::upscaledb::CursorGetRecordSizeReply* mutable_cursor_get_record_size_reply();
  inline ::upscaledb::CursorGetRecordSizeReply* release_cursor_get_record_size_reply();
  inline void set_allocated_cursor_get_record_size_reply(::upscaledb::CursorGetRecordSizeReply* cursor_get_record_size_reply);

  // optional .upscaledb.CursorOverwriteRequest cursor_overwrite_request = 270;
  inline bool has_cursor_overwrite_request() const;
  inline void clear_cursor_overwrite_request();
  static const int kCursorOverwriteRequestFieldNumber = 270;
  inline const ::upscaledb::CursorOverwriteRequest& cursor_overwrite_request() const;
  inline ::upscaledb::CursorOverwriteRequest* mutable_cursor_overwrite_request();
  inline ::upscaledb::CursorOverwriteRequest* release_cursor_overwrite_request();
  inline void set_allocated_cursor_overwrite_request(::upscaledb::CursorOverwriteRequest* cursor_overwrite_request);

  // optional .upscaledb.CursorOverwriteReply cursor_overwrite_reply = 271;
  inline bool has_cursor_overwrite_reply() const;
  inline void clear_cursor_overwrite_reply();
  static const int kCursorOverwriteReplyFieldNumber = 271;
  inline const ::upscaledb::CursorOverwriteReply& cursor_overwrite_reply() const;
  inline ::upscaledb::CursorOverwriteReply* mutable_cursor_overwrite_reply();
  inline ::upscaledb::CursorOverwriteReply* release_cursor_overwrite_reply();
  inline void set_allocated_cursor_overwrite_reply(::upscaledb::CursorOverwriteReply* cursor_overwrite_reply);

  // optional .upscaledb.CursorMoveRequest cursor_move_request = 280;
  inline bool has_cursor_move_request() const;
  inline void clear_cursor_move_request();
  static const int kCursorMoveRequestFieldNumber = 280;
  inline const ::upscaledb::CursorMoveRequest& cursor_move_request() const;
  inline ::upscaledb::CursorMoveRequest* mutable_cursor_move_request();
  inline ::upscaledb::CursorMoveRequest* release_cursor_move_request();
  inline void set_allocated_cursor_move_request(::upscaledb::CursorMoveRequest* cursor_move_request);

  // optional .upscaledb.CursorMoveReply cursor_move_reply = 281;
  inline bool has_cursor_move_reply() const;
  inline void clear_cursor_move_reply();
  static const int kCursorMoveReplyFieldNumber = 281;
  inline const ::upscaledb::CursorMoveReply& cursor_move_reply() const;
  inline ::upscaledb::CursorMoveReply* mutable_cursor_move_reply();
  inline ::upscaledb::CursorMoveReply* release_cursor_move_reply();
  inline void set_allocated_cursor_move_reply(::upscaledb::CursorMoveReply* cursor_move_reply);

  // @@protoc_insertion_point(class_scope:upscaledb.ProtoWrapper)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_connect_request();
  inline void clear_has_connect_request();
  inline void set_has_connect_reply();
  inline void clear_has_connect_reply();
  inline void set_has_disconnect_request();
  inline void clear_has_disconnect_request();
  inline void set_has_disconnect_reply();
  inline void clear_has_disconnect_reply();
  inline void set_has_env_rename_request();
  inline void clear_has_env_rename_request();
  inline void set_has_env_rename_reply();
  inline void clear_has_env_rename_reply();
  inline void set_has_env_get_parameters_request();
  inline void clear_has_env_get_parameters_request();
  inline void set_has_env_get_parameters_reply();
  inline void clear_has_env_get_parameters_reply();
  inline void set_has_env_get_database_names_request();
  inline void clear_has_env_get_database_names_request();
  inline void set_has_env_get_database_names_reply();
  inline void clear_has_env_get_database_names_reply();
  inline void set_has_env_flush_request();
  inline void clear_has_env_flush_request();
  inline void set_has_env_flush_reply();
  inline void clear_has_env_flush_reply();
  inline void set_has_env_create_db_request();
  inline void clear_has_env_create_db_request();
  inline void set_has_env_create_db_reply();
  inline void clear_has_env_create_db_reply();
  inline void set_has_env_open_db_request();
  inline void clear_has_env_open_db_request();
  inline void set_has_env_open_db_reply();
  inline void clear_has_env_open_db_reply();
  inline void set_has_env_erase_db_request();
  inline void clear_has_env_erase_db_request();
  inline void set_has_env_erase_db_reply();
  inline void clear_has_env_erase_db_reply();
  inline void set_has_db_close_request();
  inline void clear_has_db_close_request();
  inline void set_has_db_close_reply();
  inline void clear_has_db_close_reply();
  inline void set_has_db_get_parameters_request();
  inline void clear_has_db_get_parameters_request();
  inline void set_has_db_get_parameters_reply();
  inline void clear_has_db_get_parameters_reply();
  inline void set_has_txn_begin_request();
  inline void clear_has_txn_begin_request();
  inline void set_has_txn_begin_reply();
  inline void clear_has_txn_begin_reply();
  inline void set_has_txn_commit_request();
  inline void clear_has_txn_commit_request();
  inline void set_has_txn_commit_reply();
  inline void clear_has_txn_commit_reply();
  inline void set_has_txn_abort_request();
  inline void clear_has_txn_abort_request();
  inline void set_has_txn_abort_reply();
  inline void clear_has_txn_abort_reply();
  inline void set_has_db_check_integrity_request();
  inline void clear_has_db_check_integrity_request();
  inline void set_has_db_check_integrity_reply();
  inline void clear_has_db_check_integrity_reply();
  inline void set_has_db_count_request();
  inline void clear_has_db_count_request();
  inline void set_has_db_count_reply();
  inline void clear_has_db_count_reply();
  inline void set_has_db_insert_request();
  inline void clear_has_db_insert_request();
  inline void set_has_db_insert_reply();
  inline void clear_has_db_insert_reply();
  inline void set_has_db_erase_request();
  inline void clear_has_db_erase_request();
  inline void set_has_db_erase_reply();
  inline void clear_has_db_erase_reply();
  inline void set_has_db_find_request();
  inline void clear_has_db_find_request();
  inline void set_has_db_find_reply();
  inline void clear_has_db_find_reply();
  inline void set_has_cursor_create_request();
  inline void clear_has_cursor_create_request();
  inline void set_has_cursor_create_reply();
  inline void clear_has_cursor_create_reply();
  inline void set_has_cursor_clone_request();
  inline void clear_has_cursor_clone_request();
  inline void set_has_cursor_clone_reply();
  inline void clear_has_cursor_clone_reply();
  inline void set_has_cursor_close_request();
  inline void clear_has_cursor_close_request();
  inline void set_has_cursor_close_reply();
  inline void clear_has_cursor_close_reply();
  inline void set_has_cursor_insert_request();
  inline void clear_has_cursor_insert_request();
  inline void set_has_cursor_insert_reply();
  inline void clear_has_cursor_insert_reply();
  inline void set_has_cursor_erase_request();
  inline void clear_has_cursor_erase_request();
  inline void set_has_cursor_erase_reply();
  inline void clear_has_cursor_erase_reply();
  inline void set_has_cursor_get_record_count_request();
  inline void clear_has_cursor_get_record_count_request();
  inline void set_has_cursor_get_record_count_reply();
  inline void clear_has_cursor_get_record_count_reply();
  inline void set_has_cursor_get_duplicate_position_request();
  inline void clear_has_cursor_get_duplicate_position_request();
  inline void set_has_cursor_get_duplicate_position_reply();
  inline void clear_has_cursor_get_duplicate_position_reply();
  inline void set_has_cursor_get_record_size_request();
  inline void clear_has_cursor_get_record_size_request();
  inline void set_has_cursor_get_record_size_reply();
  inline void clear_has_cursor_get_record_size_reply();
  inline void set_has_cursor_overwrite_request();
  inline void clear_has_cursor_overwrite_request();
  inline void set_has_cursor_overwrite_reply();
  inline void clear_has_cursor_overwrite_reply();
  inline void set_has_cursor_move_request();
  inline void clear_has_cursor_move_request();
  inline void set_has_cursor_move_reply();
  inline void clear_has_cursor_move_reply();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::upscaledb::ConnectRequest* connect_request_;
  ::upscaledb::ConnectReply* connect_reply_;
  ::upscaledb::DisconnectRequest* disconnect_request_;
  ::upscaledb::DisconnectReply* disconnect_reply_;
  ::upscaledb::EnvRenameRequest* env_rename_request_;
  ::upscaledb::EnvRenameReply* env_rename_reply_;
  ::upscaledb::EnvGetParametersRequest* env_get_parameters_request_;
  ::upscaledb::EnvGetParametersReply* env_get_parameters_reply_;
  ::upscaledb::EnvGetDatabaseNamesRequest* env_get_database_names_request_;
  ::upscaledb::EnvGetDatabaseNamesReply* env_get_database_names_reply_;
  ::upscaledb::EnvFlushRequest* env_flush_request_;
  ::upscaledb::EnvFlushReply* env_flush_reply_;
  ::upscaledb::EnvCreateDbRequest* env_create_db_request_;
  ::upscaledb::EnvCreateDbReply* env_create_db_reply_;
  ::upscaledb::EnvOpenDbRequest* env_open_db_request_;
  ::upscaledb::EnvOpenDbReply* env_open_db_reply_;
  ::upscaledb::EnvEraseDbRequest* env_erase_db_request_;
  ::upscaledb::EnvEraseDbReply* env_erase_db_reply_;
  ::upscaledb::DbCloseRequest* db_close_request_;
  ::upscaledb::DbCloseReply* db_close_reply_;
  ::upscaledb::DbGetParametersRequest* db_get_parameters_request_;
  ::upscaledb::DbGetParametersReply* db_get_parameters_reply_;
  ::upscaledb::TxnBeginRequest* txn_begin_request_;
  ::upscaledb::TxnBeginReply* txn_begin_reply_;
  ::upscaledb::TxnCommitRequest* txn_commit_request_;
  ::upscaledb::TxnCommitReply* txn_commit_reply_;
  ::upscaledb::TxnAbortRequest* txn_abort_request_;
  ::upscaledb::TxnAbortReply* txn_abort_reply_;
  ::upscaledb::DbCheckIntegrityRequest* db_check_integrity_request_;
  ::upscaledb::DbCheckIntegrityReply* db_check_integrity_reply_;
  ::upscaledb::DbCountRequest* db_count_request_;
  ::upscaledb::DbCountReply* db_count_reply_;
  ::upscaledb::DbInsertRequest* db_insert_request_;
  ::upscaledb::DbInsertReply* db_insert_reply_;
  ::upscaledb::DbEraseRequest* db_erase_request_;
  ::upscaledb::DbEraseReply* db_erase_reply_;
  ::upscaledb::DbFindRequest* db_find_request_;
  ::upscaledb::DbFindReply* db_find_reply_;
  ::upscaledb::CursorCreateRequest* cursor_create_request_;
  ::upscaledb::CursorCreateReply* cursor_create_reply_;
  ::upscaledb::CursorCloneRequest* cursor_clone_request_;
  ::upscaledb::CursorCloneReply* cursor_clone_reply_;
  ::upscaledb::CursorCloseRequest* cursor_close_request_;
  ::upscaledb::CursorCloseReply* cursor_close_reply_;
  ::upscaledb::CursorInsertRequest* cursor_insert_request_;
  ::upscaledb::CursorInsertReply* cursor_insert_reply_;
  ::upscaledb::CursorEraseRequest* cursor_erase_request_;
  ::upscaledb::CursorEraseReply* cursor_erase_reply_;
  ::upscaledb::CursorGetRecordCountRequest* cursor_get_record_count_request_;
  ::upscaledb::CursorGetRecordCountReply* cursor_get_record_count_reply_;
  ::upscaledb::CursorGetDuplicatePositionRequest* cursor_get_duplicate_position_request_;
  ::upscaledb::CursorGetDuplicatePositionReply* cursor_get_duplicate_position_reply_;
  ::upscaledb::CursorGetRecordSizeRequest* cursor_get_record_size_request_;
  ::upscaledb::CursorGetRecordSizeReply* cursor_get_record_size_reply_;
  ::upscaledb::CursorOverwriteRequest* cursor_overwrite_request_;
  ::upscaledb::CursorOverwriteReply* cursor_overwrite_reply_;
  ::upscaledb::CursorMoveRequest* cursor_move_request_;
  ::upscaledb::CursorMoveReply* cursor_move_reply_;
  int type_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static ProtoWrapper* default_instance_;
};
// -------------------------------------------------------------------

class ConnectRequest : public ::google::protobuf::MessageLite {
 public:
  ConnectRequest();
  virtual ~ConnectRequest();

  ConnectRequest(const ConnectRequest& from);

  inline ConnectRequest& operator=(const ConnectRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ConnectRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ConnectRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ConnectRequest* other);

  // implements Message ----------------------------------------------

  ConnectRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ConnectRequest& from);
  void MergeFrom(const ConnectRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string path = 1;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  inline void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:upscaledb.ConnectRequest)
 private:
  inline void set_has_path();
  inline void clear_has_path();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* path_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static ConnectRequest* default_instance_;
};
// -------------------------------------------------------------------

class ConnectReply : public ::google::protobuf::MessageLite {
 public:
  ConnectReply();
  virtual ~ConnectReply();

  ConnectReply(const ConnectReply& from);

  inline ConnectReply& operator=(const ConnectReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ConnectReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ConnectReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ConnectReply* other);

  // implements Message ----------------------------------------------

  ConnectReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ConnectReply& from);
  void MergeFrom(const ConnectReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional uint32 env_flags = 2;
  inline bool has_env_flags() const;
  inline void clear_env_flags();
  static const int kEnvFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 env_flags() const;
  inline void set_env_flags(::google::protobuf::uint32 value);

  // optional uint64 env_handle = 3;
  inline bool has_env_handle() const;
  inline void clear_env_handle();
  static const int kEnvHandleFieldNumber = 3;
  inline ::google::protobuf::uint64 env_handle() const;
  inline void set_env_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:upscaledb.ConnectReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_env_flags();
  inline void clear_has_env_flags();
  inline void set_has_env_handle();
  inline void clear_has_env_handle();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint32 env_flags_;
  ::google::protobuf::uint64 env_handle_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static ConnectReply* default_instance_;
};
// -------------------------------------------------------------------

class DisconnectRequest : public ::google::protobuf::MessageLite {
 public:
  DisconnectRequest();
  virtual ~DisconnectRequest();

  DisconnectRequest(const DisconnectRequest& from);

  inline DisconnectRequest& operator=(const DisconnectRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DisconnectRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DisconnectRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DisconnectRequest* other);

  // implements Message ----------------------------------------------

  DisconnectRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DisconnectRequest& from);
  void MergeFrom(const DisconnectRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 env_handle = 1;
  inline bool has_env_handle() const;
  inline void clear_env_handle();
  static const int kEnvHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 env_handle() const;
  inline void set_env_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:upscaledb.DisconnectRequest)
 private:
  inline void set_has_env_handle();
  inline void clear_has_env_handle();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 env_handle_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DisconnectRequest* default_instance_;
};
// -------------------------------------------------------------------

class DisconnectReply : public ::google::protobuf::MessageLite {
 public:
  DisconnectReply();
  virtual ~DisconnectReply();

  DisconnectReply(const DisconnectReply& from);

  inline DisconnectReply& operator=(const DisconnectReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DisconnectReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DisconnectReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DisconnectReply* other);

  // implements Message ----------------------------------------------

  DisconnectReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DisconnectReply& from);
  void MergeFrom(const DisconnectReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.DisconnectReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DisconnectReply* default_instance_;
};
// -------------------------------------------------------------------

class EnvGetParametersRequest : public ::google::protobuf::MessageLite {
 public:
  EnvGetParametersRequest();
  virtual ~EnvGetParametersRequest();

  EnvGetParametersRequest(const EnvGetParametersRequest& from);

  inline EnvGetParametersRequest& operator=(const EnvGetParametersRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvGetParametersRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvGetParametersRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvGetParametersRequest* other);

  // implements Message ----------------------------------------------

  EnvGetParametersRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvGetParametersRequest& from);
  void MergeFrom(const EnvGetParametersRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 env_handle = 1;
  inline bool has_env_handle() const;
  inline void clear_env_handle();
  static const int kEnvHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 env_handle() const;
  inline void set_env_handle(::google::protobuf::uint64 value);

  // repeated uint32 names = 2;
  inline int names_size() const;
  inline void clear_names();
  static const int kNamesFieldNumber = 2;
  inline ::google::protobuf::uint32 names(int index) const;
  inline void set_names(int index, ::google::protobuf::uint32 value);
  inline void add_names(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      names() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_names();

  // @@protoc_insertion_point(class_scope:upscaledb.EnvGetParametersRequest)
 private:
  inline void set_has_env_handle();
  inline void clear_has_env_handle();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 env_handle_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > names_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvGetParametersRequest* default_instance_;
};
// -------------------------------------------------------------------

class EnvGetParametersReply : public ::google::protobuf::MessageLite {
 public:
  EnvGetParametersReply();
  virtual ~EnvGetParametersReply();

  EnvGetParametersReply(const EnvGetParametersReply& from);

  inline EnvGetParametersReply& operator=(const EnvGetParametersReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvGetParametersReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvGetParametersReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvGetParametersReply* other);

  // implements Message ----------------------------------------------

  EnvGetParametersReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvGetParametersReply& from);
  void MergeFrom(const EnvGetParametersReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional uint32 cache_size = 2;
  inline bool has_cache_size() const;
  inline void clear_cache_size();
  static const int kCacheSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 cache_size() const;
  inline void set_cache_size(::google::protobuf::uint32 value);

  // optional uint32 page_size = 3;
  inline bool has_page_size() const;
  inline void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  inline ::google::protobuf::uint32 page_size() const;
  inline void set_page_size(::google::protobuf::uint32 value);

  // optional uint32 max_env_databases = 4;
  inline bool has_max_env_databases() const;
  inline void clear_max_env_databases();
  static const int kMaxEnvDatabasesFieldNumber = 4;
  inline ::google::protobuf::uint32 max_env_databases() const;
  inline void set_max_env_databases(::google::protobuf::uint32 value);

  // optional uint32 flags = 5;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 5;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // optional uint32 filemode = 6;
  inline bool has_filemode() const;
  inline void clear_filemode();
  static const int kFilemodeFieldNumber = 6;
  inline ::google::protobuf::uint32 filemode() const;
  inline void set_filemode(::google::protobuf::uint32 value);

  // optional string filename = 7;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 7;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // @@protoc_insertion_point(class_scope:upscaledb.EnvGetParametersReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_cache_size();
  inline void clear_has_cache_size();
  inline void set_has_page_size();
  inline void clear_has_page_size();
  inline void set_has_max_env_databases();
  inline void clear_has_max_env_databases();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_filemode();
  inline void clear_has_filemode();
  inline void set_has_filename();
  inline void clear_has_filename();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint32 cache_size_;
  ::google::protobuf::uint32 page_size_;
  ::google::protobuf::uint32 max_env_databases_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 filemode_;
  ::std::string* filename_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvGetParametersReply* default_instance_;
};
// -------------------------------------------------------------------

class EnvGetDatabaseNamesRequest : public ::google::protobuf::MessageLite {
 public:
  EnvGetDatabaseNamesRequest();
  virtual ~EnvGetDatabaseNamesRequest();

  EnvGetDatabaseNamesRequest(const EnvGetDatabaseNamesRequest& from);

  inline EnvGetDatabaseNamesRequest& operator=(const EnvGetDatabaseNamesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvGetDatabaseNamesRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvGetDatabaseNamesRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvGetDatabaseNamesRequest* other);

  // implements Message ----------------------------------------------

  EnvGetDatabaseNamesRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvGetDatabaseNamesRequest& from);
  void MergeFrom(const EnvGetDatabaseNamesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 env_handle = 1;
  inline bool has_env_handle() const;
  inline void clear_env_handle();
  static const int kEnvHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 env_handle() const;
  inline void set_env_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:upscaledb.EnvGetDatabaseNamesRequest)
 private:
  inline void set_has_env_handle();
  inline void clear_has_env_handle();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 env_handle_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvGetDatabaseNamesRequest* default_instance_;
};
// -------------------------------------------------------------------

class EnvGetDatabaseNamesReply : public ::google::protobuf::MessageLite {
 public:
  EnvGetDatabaseNamesReply();
  virtual ~EnvGetDatabaseNamesReply();

  EnvGetDatabaseNamesReply(const EnvGetDatabaseNamesReply& from);

  inline EnvGetDatabaseNamesReply& operator=(const EnvGetDatabaseNamesReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvGetDatabaseNamesReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvGetDatabaseNamesReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvGetDatabaseNamesReply* other);

  // implements Message ----------------------------------------------

  EnvGetDatabaseNamesReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvGetDatabaseNamesReply& from);
  void MergeFrom(const EnvGetDatabaseNamesReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated uint32 names = 2;
  inline int names_size() const;
  inline void clear_names();
  static const int kNamesFieldNumber = 2;
  inline ::google::protobuf::uint32 names(int index) const;
  inline void set_names(int index, ::google::protobuf::uint32 value);
  inline void add_names(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      names() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_names();

  // @@protoc_insertion_point(class_scope:upscaledb.EnvGetDatabaseNamesReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > names_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvGetDatabaseNamesReply* default_instance_;
};
// -------------------------------------------------------------------

class EnvRenameRequest : public ::google::protobuf::MessageLite {
 public:
  EnvRenameRequest();
  virtual ~EnvRenameRequest();

  EnvRenameRequest(const EnvRenameRequest& from);

  inline EnvRenameRequest& operator=(const EnvRenameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvRenameRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvRenameRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvRenameRequest* other);

  // implements Message ----------------------------------------------

  EnvRenameRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvRenameRequest& from);
  void MergeFrom(const EnvRenameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 env_handle = 1;
  inline bool has_env_handle() const;
  inline void clear_env_handle();
  static const int kEnvHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 env_handle() const;
  inline void set_env_handle(::google::protobuf::uint64 value);

  // required uint32 oldname = 2;
  inline bool has_oldname() const;
  inline void clear_oldname();
  static const int kOldnameFieldNumber = 2;
  inline ::google::protobuf::uint32 oldname() const;
  inline void set_oldname(::google::protobuf::uint32 value);

  // required uint32 newname = 3;
  inline bool has_newname() const;
  inline void clear_newname();
  static const int kNewnameFieldNumber = 3;
  inline ::google::protobuf::uint32 newname() const;
  inline void set_newname(::google::protobuf::uint32 value);

  // required uint32 flags = 4;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 4;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.EnvRenameRequest)
 private:
  inline void set_has_env_handle();
  inline void clear_has_env_handle();
  inline void set_has_oldname();
  inline void clear_has_oldname();
  inline void set_has_newname();
  inline void clear_has_newname();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 env_handle_;
  ::google::protobuf::uint32 oldname_;
  ::google::protobuf::uint32 newname_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvRenameRequest* default_instance_;
};
// -------------------------------------------------------------------

class EnvRenameReply : public ::google::protobuf::MessageLite {
 public:
  EnvRenameReply();
  virtual ~EnvRenameReply();

  EnvRenameReply(const EnvRenameReply& from);

  inline EnvRenameReply& operator=(const EnvRenameReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvRenameReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvRenameReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvRenameReply* other);

  // implements Message ----------------------------------------------

  EnvRenameReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvRenameReply& from);
  void MergeFrom(const EnvRenameReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.EnvRenameReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvRenameReply* default_instance_;
};
// -------------------------------------------------------------------

class EnvFlushRequest : public ::google::protobuf::MessageLite {
 public:
  EnvFlushRequest();
  virtual ~EnvFlushRequest();

  EnvFlushRequest(const EnvFlushRequest& from);

  inline EnvFlushRequest& operator=(const EnvFlushRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvFlushRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvFlushRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvFlushRequest* other);

  // implements Message ----------------------------------------------

  EnvFlushRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvFlushRequest& from);
  void MergeFrom(const EnvFlushRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 env_handle = 1;
  inline bool has_env_handle() const;
  inline void clear_env_handle();
  static const int kEnvHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 env_handle() const;
  inline void set_env_handle(::google::protobuf::uint64 value);

  // required uint32 flags = 2;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.EnvFlushRequest)
 private:
  inline void set_has_env_handle();
  inline void clear_has_env_handle();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 env_handle_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvFlushRequest* default_instance_;
};
// -------------------------------------------------------------------

class EnvFlushReply : public ::google::protobuf::MessageLite {
 public:
  EnvFlushReply();
  virtual ~EnvFlushReply();

  EnvFlushReply(const EnvFlushReply& from);

  inline EnvFlushReply& operator=(const EnvFlushReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvFlushReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvFlushReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvFlushReply* other);

  // implements Message ----------------------------------------------

  EnvFlushReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvFlushReply& from);
  void MergeFrom(const EnvFlushReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.EnvFlushReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvFlushReply* default_instance_;
};
// -------------------------------------------------------------------

class EnvCreateDbRequest : public ::google::protobuf::MessageLite {
 public:
  EnvCreateDbRequest();
  virtual ~EnvCreateDbRequest();

  EnvCreateDbRequest(const EnvCreateDbRequest& from);

  inline EnvCreateDbRequest& operator=(const EnvCreateDbRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvCreateDbRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvCreateDbRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvCreateDbRequest* other);

  // implements Message ----------------------------------------------

  EnvCreateDbRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvCreateDbRequest& from);
  void MergeFrom(const EnvCreateDbRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 env_handle = 1;
  inline bool has_env_handle() const;
  inline void clear_env_handle();
  static const int kEnvHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 env_handle() const;
  inline void set_env_handle(::google::protobuf::uint64 value);

  // required uint32 dbname = 2;
  inline bool has_dbname() const;
  inline void clear_dbname();
  static const int kDbnameFieldNumber = 2;
  inline ::google::protobuf::uint32 dbname() const;
  inline void set_dbname(::google::protobuf::uint32 value);

  // required uint32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // repeated uint32 param_names = 4;
  inline int param_names_size() const;
  inline void clear_param_names();
  static const int kParamNamesFieldNumber = 4;
  inline ::google::protobuf::uint32 param_names(int index) const;
  inline void set_param_names(int index, ::google::protobuf::uint32 value);
  inline void add_param_names(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param_names() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param_names();

  // repeated uint64 param_values = 5;
  inline int param_values_size() const;
  inline void clear_param_values();
  static const int kParamValuesFieldNumber = 5;
  inline ::google::protobuf::uint64 param_values(int index) const;
  inline void set_param_values(int index, ::google::protobuf::uint64 value);
  inline void add_param_values(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      param_values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_param_values();

  // @@protoc_insertion_point(class_scope:upscaledb.EnvCreateDbRequest)
 private:
  inline void set_has_env_handle();
  inline void clear_has_env_handle();
  inline void set_has_dbname();
  inline void clear_has_dbname();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 env_handle_;
  ::google::protobuf::uint32 dbname_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > param_values_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvCreateDbRequest* default_instance_;
};
// -------------------------------------------------------------------

class EnvCreateDbReply : public ::google::protobuf::MessageLite {
 public:
  EnvCreateDbReply();
  virtual ~EnvCreateDbReply();

  EnvCreateDbReply(const EnvCreateDbReply& from);

  inline EnvCreateDbReply& operator=(const EnvCreateDbReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvCreateDbReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvCreateDbReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvCreateDbReply* other);

  // implements Message ----------------------------------------------

  EnvCreateDbReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvCreateDbReply& from);
  void MergeFrom(const EnvCreateDbReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional uint64 db_handle = 2;
  inline bool has_db_handle() const;
  inline void clear_db_handle();
  static const int kDbHandleFieldNumber = 2;
  inline ::google::protobuf::uint64 db_handle() const;
  inline void set_db_handle(::google::protobuf::uint64 value);

  // optional uint32 db_flags = 3;
  inline bool has_db_flags() const;
  inline void clear_db_flags();
  static const int kDbFlagsFieldNumber = 3;
  inline ::google::protobuf::uint32 db_flags() const;
  inline void set_db_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.EnvCreateDbReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_db_handle();
  inline void clear_has_db_handle();
  inline void set_has_db_flags();
  inline void clear_has_db_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 db_handle_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint32 db_flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvCreateDbReply* default_instance_;
};
// -------------------------------------------------------------------

class EnvOpenDbRequest : public ::google::protobuf::MessageLite {
 public:
  EnvOpenDbRequest();
  virtual ~EnvOpenDbRequest();

  EnvOpenDbRequest(const EnvOpenDbRequest& from);

  inline EnvOpenDbRequest& operator=(const EnvOpenDbRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvOpenDbRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvOpenDbRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvOpenDbRequest* other);

  // implements Message ----------------------------------------------

  EnvOpenDbRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvOpenDbRequest& from);
  void MergeFrom(const EnvOpenDbRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 env_handle = 1;
  inline bool has_env_handle() const;
  inline void clear_env_handle();
  static const int kEnvHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 env_handle() const;
  inline void set_env_handle(::google::protobuf::uint64 value);

  // required uint32 dbname = 2;
  inline bool has_dbname() const;
  inline void clear_dbname();
  static const int kDbnameFieldNumber = 2;
  inline ::google::protobuf::uint32 dbname() const;
  inline void set_dbname(::google::protobuf::uint32 value);

  // required uint32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // repeated uint32 param_names = 4;
  inline int param_names_size() const;
  inline void clear_param_names();
  static const int kParamNamesFieldNumber = 4;
  inline ::google::protobuf::uint32 param_names(int index) const;
  inline void set_param_names(int index, ::google::protobuf::uint32 value);
  inline void add_param_names(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param_names() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param_names();

  // repeated uint64 param_values = 5;
  inline int param_values_size() const;
  inline void clear_param_values();
  static const int kParamValuesFieldNumber = 5;
  inline ::google::protobuf::uint64 param_values(int index) const;
  inline void set_param_values(int index, ::google::protobuf::uint64 value);
  inline void add_param_values(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      param_values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_param_values();

  // @@protoc_insertion_point(class_scope:upscaledb.EnvOpenDbRequest)
 private:
  inline void set_has_env_handle();
  inline void clear_has_env_handle();
  inline void set_has_dbname();
  inline void clear_has_dbname();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 env_handle_;
  ::google::protobuf::uint32 dbname_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > param_values_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvOpenDbRequest* default_instance_;
};
// -------------------------------------------------------------------

class EnvOpenDbReply : public ::google::protobuf::MessageLite {
 public:
  EnvOpenDbReply();
  virtual ~EnvOpenDbReply();

  EnvOpenDbReply(const EnvOpenDbReply& from);

  inline EnvOpenDbReply& operator=(const EnvOpenDbReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvOpenDbReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvOpenDbReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvOpenDbReply* other);

  // implements Message ----------------------------------------------

  EnvOpenDbReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvOpenDbReply& from);
  void MergeFrom(const EnvOpenDbReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional uint64 db_handle = 2;
  inline bool has_db_handle() const;
  inline void clear_db_handle();
  static const int kDbHandleFieldNumber = 2;
  inline ::google::protobuf::uint64 db_handle() const;
  inline void set_db_handle(::google::protobuf::uint64 value);

  // optional uint32 db_flags = 3;
  inline bool has_db_flags() const;
  inline void clear_db_flags();
  static const int kDbFlagsFieldNumber = 3;
  inline ::google::protobuf::uint32 db_flags() const;
  inline void set_db_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.EnvOpenDbReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_db_handle();
  inline void clear_has_db_handle();
  inline void set_has_db_flags();
  inline void clear_has_db_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 db_handle_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint32 db_flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvOpenDbReply* default_instance_;
};
// -------------------------------------------------------------------

class EnvEraseDbRequest : public ::google::protobuf::MessageLite {
 public:
  EnvEraseDbRequest();
  virtual ~EnvEraseDbRequest();

  EnvEraseDbRequest(const EnvEraseDbRequest& from);

  inline EnvEraseDbRequest& operator=(const EnvEraseDbRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvEraseDbRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvEraseDbRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvEraseDbRequest* other);

  // implements Message ----------------------------------------------

  EnvEraseDbRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvEraseDbRequest& from);
  void MergeFrom(const EnvEraseDbRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 env_handle = 1;
  inline bool has_env_handle() const;
  inline void clear_env_handle();
  static const int kEnvHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 env_handle() const;
  inline void set_env_handle(::google::protobuf::uint64 value);

  // required uint32 name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline ::google::protobuf::uint32 name() const;
  inline void set_name(::google::protobuf::uint32 value);

  // required uint32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.EnvEraseDbRequest)
 private:
  inline void set_has_env_handle();
  inline void clear_has_env_handle();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 env_handle_;
  ::google::protobuf::uint32 name_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvEraseDbRequest* default_instance_;
};
// -------------------------------------------------------------------

class EnvEraseDbReply : public ::google::protobuf::MessageLite {
 public:
  EnvEraseDbReply();
  virtual ~EnvEraseDbReply();

  EnvEraseDbReply(const EnvEraseDbReply& from);

  inline EnvEraseDbReply& operator=(const EnvEraseDbReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const EnvEraseDbReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const EnvEraseDbReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(EnvEraseDbReply* other);

  // implements Message ----------------------------------------------

  EnvEraseDbReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const EnvEraseDbReply& from);
  void MergeFrom(const EnvEraseDbReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.EnvEraseDbReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static EnvEraseDbReply* default_instance_;
};
// -------------------------------------------------------------------

class DbCloseRequest : public ::google::protobuf::MessageLite {
 public:
  DbCloseRequest();
  virtual ~DbCloseRequest();

  DbCloseRequest(const DbCloseRequest& from);

  inline DbCloseRequest& operator=(const DbCloseRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbCloseRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbCloseRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbCloseRequest* other);

  // implements Message ----------------------------------------------

  DbCloseRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbCloseRequest& from);
  void MergeFrom(const DbCloseRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 db_handle = 1;
  inline bool has_db_handle() const;
  inline void clear_db_handle();
  static const int kDbHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 db_handle() const;
  inline void set_db_handle(::google::protobuf::uint64 value);

  // required uint32 flags = 2;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.DbCloseRequest)
 private:
  inline void set_has_db_handle();
  inline void clear_has_db_handle();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 db_handle_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbCloseRequest* default_instance_;
};
// -------------------------------------------------------------------

class DbCloseReply : public ::google::protobuf::MessageLite {
 public:
  DbCloseReply();
  virtual ~DbCloseReply();

  DbCloseReply(const DbCloseReply& from);

  inline DbCloseReply& operator=(const DbCloseReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbCloseReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbCloseReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbCloseReply* other);

  // implements Message ----------------------------------------------

  DbCloseReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbCloseReply& from);
  void MergeFrom(const DbCloseReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.DbCloseReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbCloseReply* default_instance_;
};
// -------------------------------------------------------------------

class DbGetParametersRequest : public ::google::protobuf::MessageLite {
 public:
  DbGetParametersRequest();
  virtual ~DbGetParametersRequest();

  DbGetParametersRequest(const DbGetParametersRequest& from);

  inline DbGetParametersRequest& operator=(const DbGetParametersRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbGetParametersRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbGetParametersRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbGetParametersRequest* other);

  // implements Message ----------------------------------------------

  DbGetParametersRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbGetParametersRequest& from);
  void MergeFrom(const DbGetParametersRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 db_handle = 1;
  inline bool has_db_handle() const;
  inline void clear_db_handle();
  static const int kDbHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 db_handle() const;
  inline void set_db_handle(::google::protobuf::uint64 value);

  // repeated uint32 names = 2;
  inline int names_size() const;
  inline void clear_names();
  static const int kNamesFieldNumber = 2;
  inline ::google::protobuf::uint32 names(int index) const;
  inline void set_names(int index, ::google::protobuf::uint32 value);
  inline void add_names(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      names() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_names();

  // @@protoc_insertion_point(class_scope:upscaledb.DbGetParametersRequest)
 private:
  inline void set_has_db_handle();
  inline void clear_has_db_handle();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 db_handle_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > names_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbGetParametersRequest* default_instance_;
};
// -------------------------------------------------------------------

class DbGetParametersReply : public ::google::protobuf::MessageLite {
 public:
  DbGetParametersReply();
  virtual ~DbGetParametersReply();

  DbGetParametersReply(const DbGetParametersReply& from);

  inline DbGetParametersReply& operator=(const DbGetParametersReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbGetParametersReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbGetParametersReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbGetParametersReply* other);

  // implements Message ----------------------------------------------

  DbGetParametersReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbGetParametersReply& from);
  void MergeFrom(const DbGetParametersReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional uint32 max_env_databases = 2;
  inline bool has_max_env_databases() const;
  inline void clear_max_env_databases();
  static const int kMaxEnvDatabasesFieldNumber = 2;
  inline ::google::protobuf::uint32 max_env_databases() const;
  inline void set_max_env_databases(::google::protobuf::uint32 value);

  // optional uint32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // optional uint32 key_size = 4;
  inline bool has_key_size() const;
  inline void clear_key_size();
  static const int kKeySizeFieldNumber = 4;
  inline ::google::protobuf::uint32 key_size() const;
  inline void set_key_size(::google::protobuf::uint32 value);

  // optional uint32 dbname = 5;
  inline bool has_dbname() const;
  inline void clear_dbname();
  static const int kDbnameFieldNumber = 5;
  inline ::google::protobuf::uint32 dbname() const;
  inline void set_dbname(::google::protobuf::uint32 value);

  // optional uint32 keys_per_page = 6;
  inline bool has_keys_per_page() const;
  inline void clear_keys_per_page();
  static const int kKeysPerPageFieldNumber = 6;
  inline ::google::protobuf::uint32 keys_per_page() const;
  inline void set_keys_per_page(::google::protobuf::uint32 value);

  // optional uint32 key_type = 7;
  inline bool has_key_type() const;
  inline void clear_key_type();
  static const int kKeyTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 key_type() const;
  inline void set_key_type(::google::protobuf::uint32 value);

  // optional uint32 record_size = 8;
  inline bool has_record_size() const;
  inline void clear_record_size();
  static const int kRecordSizeFieldNumber = 8;
  inline ::google::protobuf::uint32 record_size() const;
  inline void set_record_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.DbGetParametersReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_max_env_databases();
  inline void clear_has_max_env_databases();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_key_size();
  inline void clear_has_key_size();
  inline void set_has_dbname();
  inline void clear_has_dbname();
  inline void set_has_keys_per_page();
  inline void clear_has_keys_per_page();
  inline void set_has_key_type();
  inline void clear_has_key_type();
  inline void set_has_record_size();
  inline void clear_has_record_size();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint32 max_env_databases_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 key_size_;
  ::google::protobuf::uint32 dbname_;
  ::google::protobuf::uint32 keys_per_page_;
  ::google::protobuf::uint32 key_type_;
  ::google::protobuf::uint32 record_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbGetParametersReply* default_instance_;
};
// -------------------------------------------------------------------

class TxnBeginRequest : public ::google::protobuf::MessageLite {
 public:
  TxnBeginRequest();
  virtual ~TxnBeginRequest();

  TxnBeginRequest(const TxnBeginRequest& from);

  inline TxnBeginRequest& operator=(const TxnBeginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TxnBeginRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TxnBeginRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TxnBeginRequest* other);

  // implements Message ----------------------------------------------

  TxnBeginRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TxnBeginRequest& from);
  void MergeFrom(const TxnBeginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 env_handle = 1;
  inline bool has_env_handle() const;
  inline void clear_env_handle();
  static const int kEnvHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 env_handle() const;
  inline void set_env_handle(::google::protobuf::uint64 value);

  // required uint32 flags = 2;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:upscaledb.TxnBeginRequest)
 private:
  inline void set_has_env_handle();
  inline void clear_has_env_handle();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_name();
  inline void clear_has_name();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 env_handle_;
  ::std::string* name_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static TxnBeginRequest* default_instance_;
};
// -------------------------------------------------------------------

class TxnBeginReply : public ::google::protobuf::MessageLite {
 public:
  TxnBeginReply();
  virtual ~TxnBeginReply();

  TxnBeginReply(const TxnBeginReply& from);

  inline TxnBeginReply& operator=(const TxnBeginReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TxnBeginReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TxnBeginReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TxnBeginReply* other);

  // implements Message ----------------------------------------------

  TxnBeginReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TxnBeginReply& from);
  void MergeFrom(const TxnBeginReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required uint64 txn_handle = 2;
  inline bool has_txn_handle() const;
  inline void clear_txn_handle();
  static const int kTxnHandleFieldNumber = 2;
  inline ::google::protobuf::uint64 txn_handle() const;
  inline void set_txn_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:upscaledb.TxnBeginReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_txn_handle();
  inline void clear_has_txn_handle();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 txn_handle_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static TxnBeginReply* default_instance_;
};
// -------------------------------------------------------------------

class TxnCommitRequest : public ::google::protobuf::MessageLite {
 public:
  TxnCommitRequest();
  virtual ~TxnCommitRequest();

  TxnCommitRequest(const TxnCommitRequest& from);

  inline TxnCommitRequest& operator=(const TxnCommitRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TxnCommitRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TxnCommitRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TxnCommitRequest* other);

  // implements Message ----------------------------------------------

  TxnCommitRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TxnCommitRequest& from);
  void MergeFrom(const TxnCommitRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 txn_handle = 1;
  inline bool has_txn_handle() const;
  inline void clear_txn_handle();
  static const int kTxnHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 txn_handle() const;
  inline void set_txn_handle(::google::protobuf::uint64 value);

  // required uint32 flags = 2;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.TxnCommitRequest)
 private:
  inline void set_has_txn_handle();
  inline void clear_has_txn_handle();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 txn_handle_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static TxnCommitRequest* default_instance_;
};
// -------------------------------------------------------------------

class TxnCommitReply : public ::google::protobuf::MessageLite {
 public:
  TxnCommitReply();
  virtual ~TxnCommitReply();

  TxnCommitReply(const TxnCommitReply& from);

  inline TxnCommitReply& operator=(const TxnCommitReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TxnCommitReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TxnCommitReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TxnCommitReply* other);

  // implements Message ----------------------------------------------

  TxnCommitReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TxnCommitReply& from);
  void MergeFrom(const TxnCommitReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.TxnCommitReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static TxnCommitReply* default_instance_;
};
// -------------------------------------------------------------------

class TxnAbortRequest : public ::google::protobuf::MessageLite {
 public:
  TxnAbortRequest();
  virtual ~TxnAbortRequest();

  TxnAbortRequest(const TxnAbortRequest& from);

  inline TxnAbortRequest& operator=(const TxnAbortRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TxnAbortRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TxnAbortRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TxnAbortRequest* other);

  // implements Message ----------------------------------------------

  TxnAbortRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TxnAbortRequest& from);
  void MergeFrom(const TxnAbortRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 txn_handle = 1;
  inline bool has_txn_handle() const;
  inline void clear_txn_handle();
  static const int kTxnHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 txn_handle() const;
  inline void set_txn_handle(::google::protobuf::uint64 value);

  // required uint32 flags = 2;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.TxnAbortRequest)
 private:
  inline void set_has_txn_handle();
  inline void clear_has_txn_handle();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 txn_handle_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static TxnAbortRequest* default_instance_;
};
// -------------------------------------------------------------------

class TxnAbortReply : public ::google::protobuf::MessageLite {
 public:
  TxnAbortReply();
  virtual ~TxnAbortReply();

  TxnAbortReply(const TxnAbortReply& from);

  inline TxnAbortReply& operator=(const TxnAbortReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TxnAbortReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TxnAbortReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TxnAbortReply* other);

  // implements Message ----------------------------------------------

  TxnAbortReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TxnAbortReply& from);
  void MergeFrom(const TxnAbortReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.TxnAbortReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static TxnAbortReply* default_instance_;
};
// -------------------------------------------------------------------

class DbCheckIntegrityRequest : public ::google::protobuf::MessageLite {
 public:
  DbCheckIntegrityRequest();
  virtual ~DbCheckIntegrityRequest();

  DbCheckIntegrityRequest(const DbCheckIntegrityRequest& from);

  inline DbCheckIntegrityRequest& operator=(const DbCheckIntegrityRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbCheckIntegrityRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbCheckIntegrityRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbCheckIntegrityRequest* other);

  // implements Message ----------------------------------------------

  DbCheckIntegrityRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbCheckIntegrityRequest& from);
  void MergeFrom(const DbCheckIntegrityRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 db_handle = 1;
  inline bool has_db_handle() const;
  inline void clear_db_handle();
  static const int kDbHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 db_handle() const;
  inline void set_db_handle(::google::protobuf::uint64 value);

  // required uint32 flags = 2;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.DbCheckIntegrityRequest)
 private:
  inline void set_has_db_handle();
  inline void clear_has_db_handle();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 db_handle_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbCheckIntegrityRequest* default_instance_;
};
// -------------------------------------------------------------------

class DbCheckIntegrityReply : public ::google::protobuf::MessageLite {
 public:
  DbCheckIntegrityReply();
  virtual ~DbCheckIntegrityReply();

  DbCheckIntegrityReply(const DbCheckIntegrityReply& from);

  inline DbCheckIntegrityReply& operator=(const DbCheckIntegrityReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbCheckIntegrityReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbCheckIntegrityReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbCheckIntegrityReply* other);

  // implements Message ----------------------------------------------

  DbCheckIntegrityReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbCheckIntegrityReply& from);
  void MergeFrom(const DbCheckIntegrityReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.DbCheckIntegrityReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbCheckIntegrityReply* default_instance_;
};
// -------------------------------------------------------------------

class DbCountRequest : public ::google::protobuf::MessageLite {
 public:
  DbCountRequest();
  virtual ~DbCountRequest();

  DbCountRequest(const DbCountRequest& from);

  inline DbCountRequest& operator=(const DbCountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbCountRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbCountRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbCountRequest* other);

  // implements Message ----------------------------------------------

  DbCountRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbCountRequest& from);
  void MergeFrom(const DbCountRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 db_handle = 1;
  inline bool has_db_handle() const;
  inline void clear_db_handle();
  static const int kDbHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 db_handle() const;
  inline void set_db_handle(::google::protobuf::uint64 value);

  // required uint64 txn_handle = 2;
  inline bool has_txn_handle() const;
  inline void clear_txn_handle();
  static const int kTxnHandleFieldNumber = 2;
  inline ::google::protobuf::uint64 txn_handle() const;
  inline void set_txn_handle(::google::protobuf::uint64 value);

  // required bool distinct = 3;
  inline bool has_distinct() const;
  inline void clear_distinct();
  static const int kDistinctFieldNumber = 3;
  inline bool distinct() const;
  inline void set_distinct(bool value);

  // @@protoc_insertion_point(class_scope:upscaledb.DbCountRequest)
 private:
  inline void set_has_db_handle();
  inline void clear_has_db_handle();
  inline void set_has_txn_handle();
  inline void clear_has_txn_handle();
  inline void set_has_distinct();
  inline void clear_has_distinct();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 db_handle_;
  ::google::protobuf::uint64 txn_handle_;
  bool distinct_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbCountRequest* default_instance_;
};
// -------------------------------------------------------------------

class DbCountReply : public ::google::protobuf::MessageLite {
 public:
  DbCountReply();
  virtual ~DbCountReply();

  DbCountReply(const DbCountReply& from);

  inline DbCountReply& operator=(const DbCountReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbCountReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbCountReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbCountReply* other);

  // implements Message ----------------------------------------------

  DbCountReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbCountReply& from);
  void MergeFrom(const DbCountReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required uint64 keycount = 2;
  inline bool has_keycount() const;
  inline void clear_keycount();
  static const int kKeycountFieldNumber = 2;
  inline ::google::protobuf::uint64 keycount() const;
  inline void set_keycount(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:upscaledb.DbCountReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_keycount();
  inline void clear_has_keycount();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 keycount_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbCountReply* default_instance_;
};
// -------------------------------------------------------------------

class Key : public ::google::protobuf::MessageLite {
 public:
  Key();
  virtual ~Key();

  Key(const Key& from);

  inline Key& operator=(const Key& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Key& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Key* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Key* other);

  // implements Message ----------------------------------------------

  Key* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Key& from);
  void MergeFrom(const Key& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // required uint32 flags = 2;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // required uint32 intflags = 3;
  inline bool has_intflags() const;
  inline void clear_intflags();
  static const int kIntflagsFieldNumber = 3;
  inline ::google::protobuf::uint32 intflags() const;
  inline void set_intflags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.Key)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_intflags();
  inline void clear_has_intflags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 intflags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static Key* default_instance_;
};
// -------------------------------------------------------------------

class Record : public ::google::protobuf::MessageLite {
 public:
  Record();
  virtual ~Record();

  Record(const Record& from);

  inline Record& operator=(const Record& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const Record& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Record* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Record* other);

  // implements Message ----------------------------------------------

  Record* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Record& from);
  void MergeFrom(const Record& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // required uint32 flags = 2;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // required uint32 partial_offset = 3;
  inline bool has_partial_offset() const;
  inline void clear_partial_offset();
  static const int kPartialOffsetFieldNumber = 3;
  inline ::google::protobuf::uint32 partial_offset() const;
  inline void set_partial_offset(::google::protobuf::uint32 value);

  // required uint32 partial_size = 4;
  inline bool has_partial_size() const;
  inline void clear_partial_size();
  static const int kPartialSizeFieldNumber = 4;
  inline ::google::protobuf::uint32 partial_size() const;
  inline void set_partial_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.Record)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_partial_offset();
  inline void clear_has_partial_offset();
  inline void set_has_partial_size();
  inline void clear_has_partial_size();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 partial_offset_;
  ::google::protobuf::uint32 partial_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static Record* default_instance_;
};
// -------------------------------------------------------------------

class DbInsertRequest : public ::google::protobuf::MessageLite {
 public:
  DbInsertRequest();
  virtual ~DbInsertRequest();

  DbInsertRequest(const DbInsertRequest& from);

  inline DbInsertRequest& operator=(const DbInsertRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbInsertRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbInsertRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbInsertRequest* other);

  // implements Message ----------------------------------------------

  DbInsertRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbInsertRequest& from);
  void MergeFrom(const DbInsertRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 db_handle = 1;
  inline bool has_db_handle() const;
  inline void clear_db_handle();
  static const int kDbHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 db_handle() const;
  inline void set_db_handle(::google::protobuf::uint64 value);

  // required uint64 txn_handle = 2;
  inline bool has_txn_handle() const;
  inline void clear_txn_handle();
  static const int kTxnHandleFieldNumber = 2;
  inline ::google::protobuf::uint64 txn_handle() const;
  inline void set_txn_handle(::google::protobuf::uint64 value);

  // optional .upscaledb.Key key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline const ::upscaledb::Key& key() const;
  inline ::upscaledb::Key* mutable_key();
  inline ::upscaledb::Key* release_key();
  inline void set_allocated_key(::upscaledb::Key* key);

  // optional .upscaledb.Record record = 4;
  inline bool has_record() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 4;
  inline const ::upscaledb::Record& record() const;
  inline ::upscaledb::Record* mutable_record();
  inline ::upscaledb::Record* release_record();
  inline void set_allocated_record(::upscaledb::Record* record);

  // required uint32 flags = 5;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 5;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.DbInsertRequest)
 private:
  inline void set_has_db_handle();
  inline void clear_has_db_handle();
  inline void set_has_txn_handle();
  inline void clear_has_txn_handle();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_record();
  inline void clear_has_record();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 db_handle_;
  ::google::protobuf::uint64 txn_handle_;
  ::upscaledb::Key* key_;
  ::upscaledb::Record* record_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbInsertRequest* default_instance_;
};
// -------------------------------------------------------------------

class DbInsertReply : public ::google::protobuf::MessageLite {
 public:
  DbInsertReply();
  virtual ~DbInsertReply();

  DbInsertReply(const DbInsertReply& from);

  inline DbInsertReply& operator=(const DbInsertReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbInsertReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbInsertReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbInsertReply* other);

  // implements Message ----------------------------------------------

  DbInsertReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbInsertReply& from);
  void MergeFrom(const DbInsertReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional .upscaledb.Key key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::upscaledb::Key& key() const;
  inline ::upscaledb::Key* mutable_key();
  inline ::upscaledb::Key* release_key();
  inline void set_allocated_key(::upscaledb::Key* key);

  // @@protoc_insertion_point(class_scope:upscaledb.DbInsertReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_key();
  inline void clear_has_key();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::upscaledb::Key* key_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbInsertReply* default_instance_;
};
// -------------------------------------------------------------------

class DbEraseRequest : public ::google::protobuf::MessageLite {
 public:
  DbEraseRequest();
  virtual ~DbEraseRequest();

  DbEraseRequest(const DbEraseRequest& from);

  inline DbEraseRequest& operator=(const DbEraseRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbEraseRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbEraseRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbEraseRequest* other);

  // implements Message ----------------------------------------------

  DbEraseRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbEraseRequest& from);
  void MergeFrom(const DbEraseRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 db_handle = 1;
  inline bool has_db_handle() const;
  inline void clear_db_handle();
  static const int kDbHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 db_handle() const;
  inline void set_db_handle(::google::protobuf::uint64 value);

  // required uint64 txn_handle = 2;
  inline bool has_txn_handle() const;
  inline void clear_txn_handle();
  static const int kTxnHandleFieldNumber = 2;
  inline ::google::protobuf::uint64 txn_handle() const;
  inline void set_txn_handle(::google::protobuf::uint64 value);

  // required .upscaledb.Key key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline const ::upscaledb::Key& key() const;
  inline ::upscaledb::Key* mutable_key();
  inline ::upscaledb::Key* release_key();
  inline void set_allocated_key(::upscaledb::Key* key);

  // required uint32 flags = 4;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 4;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.DbEraseRequest)
 private:
  inline void set_has_db_handle();
  inline void clear_has_db_handle();
  inline void set_has_txn_handle();
  inline void clear_has_txn_handle();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 db_handle_;
  ::google::protobuf::uint64 txn_handle_;
  ::upscaledb::Key* key_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbEraseRequest* default_instance_;
};
// -------------------------------------------------------------------

class DbEraseReply : public ::google::protobuf::MessageLite {
 public:
  DbEraseReply();
  virtual ~DbEraseReply();

  DbEraseReply(const DbEraseReply& from);

  inline DbEraseReply& operator=(const DbEraseReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbEraseReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbEraseReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbEraseReply* other);

  // implements Message ----------------------------------------------

  DbEraseReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbEraseReply& from);
  void MergeFrom(const DbEraseReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.DbEraseReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbEraseReply* default_instance_;
};
// -------------------------------------------------------------------

class DbFindRequest : public ::google::protobuf::MessageLite {
 public:
  DbFindRequest();
  virtual ~DbFindRequest();

  DbFindRequest(const DbFindRequest& from);

  inline DbFindRequest& operator=(const DbFindRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbFindRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbFindRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbFindRequest* other);

  // implements Message ----------------------------------------------

  DbFindRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbFindRequest& from);
  void MergeFrom(const DbFindRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 db_handle = 1;
  inline bool has_db_handle() const;
  inline void clear_db_handle();
  static const int kDbHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 db_handle() const;
  inline void set_db_handle(::google::protobuf::uint64 value);

  // required uint64 txn_handle = 2;
  inline bool has_txn_handle() const;
  inline void clear_txn_handle();
  static const int kTxnHandleFieldNumber = 2;
  inline ::google::protobuf::uint64 txn_handle() const;
  inline void set_txn_handle(::google::protobuf::uint64 value);

  // required uint64 cursor_handle = 3;
  inline bool has_cursor_handle() const;
  inline void clear_cursor_handle();
  static const int kCursorHandleFieldNumber = 3;
  inline ::google::protobuf::uint64 cursor_handle() const;
  inline void set_cursor_handle(::google::protobuf::uint64 value);

  // required .upscaledb.Key key = 4;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 4;
  inline const ::upscaledb::Key& key() const;
  inline ::upscaledb::Key* mutable_key();
  inline ::upscaledb::Key* release_key();
  inline void set_allocated_key(::upscaledb::Key* key);

  // optional .upscaledb.Record record = 5;
  inline bool has_record() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 5;
  inline const ::upscaledb::Record& record() const;
  inline ::upscaledb::Record* mutable_record();
  inline ::upscaledb::Record* release_record();
  inline void set_allocated_record(::upscaledb::Record* record);

  // required uint32 flags = 6;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 6;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.DbFindRequest)
 private:
  inline void set_has_db_handle();
  inline void clear_has_db_handle();
  inline void set_has_txn_handle();
  inline void clear_has_txn_handle();
  inline void set_has_cursor_handle();
  inline void clear_has_cursor_handle();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_record();
  inline void clear_has_record();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 db_handle_;
  ::google::protobuf::uint64 txn_handle_;
  ::google::protobuf::uint64 cursor_handle_;
  ::upscaledb::Key* key_;
  ::upscaledb::Record* record_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbFindRequest* default_instance_;
};
// -------------------------------------------------------------------

class DbFindReply : public ::google::protobuf::MessageLite {
 public:
  DbFindReply();
  virtual ~DbFindReply();

  DbFindReply(const DbFindReply& from);

  inline DbFindReply& operator=(const DbFindReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DbFindReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DbFindReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DbFindReply* other);

  // implements Message ----------------------------------------------

  DbFindReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DbFindReply& from);
  void MergeFrom(const DbFindReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required .upscaledb.Record record = 2;
  inline bool has_record() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 2;
  inline const ::upscaledb::Record& record() const;
  inline ::upscaledb::Record* mutable_record();
  inline ::upscaledb::Record* release_record();
  inline void set_allocated_record(::upscaledb::Record* record);

  // optional .upscaledb.Key key = 3;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 3;
  inline const ::upscaledb::Key& key() const;
  inline ::upscaledb::Key* mutable_key();
  inline ::upscaledb::Key* release_key();
  inline void set_allocated_key(::upscaledb::Key* key);

  // @@protoc_insertion_point(class_scope:upscaledb.DbFindReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_record();
  inline void clear_has_record();
  inline void set_has_key();
  inline void clear_has_key();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::upscaledb::Record* record_;
  ::upscaledb::Key* key_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static DbFindReply* default_instance_;
};
// -------------------------------------------------------------------

class CursorCreateRequest : public ::google::protobuf::MessageLite {
 public:
  CursorCreateRequest();
  virtual ~CursorCreateRequest();

  CursorCreateRequest(const CursorCreateRequest& from);

  inline CursorCreateRequest& operator=(const CursorCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorCreateRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorCreateRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorCreateRequest* other);

  // implements Message ----------------------------------------------

  CursorCreateRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorCreateRequest& from);
  void MergeFrom(const CursorCreateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 db_handle = 1;
  inline bool has_db_handle() const;
  inline void clear_db_handle();
  static const int kDbHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 db_handle() const;
  inline void set_db_handle(::google::protobuf::uint64 value);

  // required uint64 txn_handle = 2;
  inline bool has_txn_handle() const;
  inline void clear_txn_handle();
  static const int kTxnHandleFieldNumber = 2;
  inline ::google::protobuf::uint64 txn_handle() const;
  inline void set_txn_handle(::google::protobuf::uint64 value);

  // required uint32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorCreateRequest)
 private:
  inline void set_has_db_handle();
  inline void clear_has_db_handle();
  inline void set_has_txn_handle();
  inline void clear_has_txn_handle();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 db_handle_;
  ::google::protobuf::uint64 txn_handle_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorCreateRequest* default_instance_;
};
// -------------------------------------------------------------------

class CursorCreateReply : public ::google::protobuf::MessageLite {
 public:
  CursorCreateReply();
  virtual ~CursorCreateReply();

  CursorCreateReply(const CursorCreateReply& from);

  inline CursorCreateReply& operator=(const CursorCreateReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorCreateReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorCreateReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorCreateReply* other);

  // implements Message ----------------------------------------------

  CursorCreateReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorCreateReply& from);
  void MergeFrom(const CursorCreateReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required uint64 cursor_handle = 2;
  inline bool has_cursor_handle() const;
  inline void clear_cursor_handle();
  static const int kCursorHandleFieldNumber = 2;
  inline ::google::protobuf::uint64 cursor_handle() const;
  inline void set_cursor_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorCreateReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_cursor_handle();
  inline void clear_has_cursor_handle();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 cursor_handle_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorCreateReply* default_instance_;
};
// -------------------------------------------------------------------

class CursorCloneRequest : public ::google::protobuf::MessageLite {
 public:
  CursorCloneRequest();
  virtual ~CursorCloneRequest();

  CursorCloneRequest(const CursorCloneRequest& from);

  inline CursorCloneRequest& operator=(const CursorCloneRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorCloneRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorCloneRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorCloneRequest* other);

  // implements Message ----------------------------------------------

  CursorCloneRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorCloneRequest& from);
  void MergeFrom(const CursorCloneRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cursor_handle = 1;
  inline bool has_cursor_handle() const;
  inline void clear_cursor_handle();
  static const int kCursorHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 cursor_handle() const;
  inline void set_cursor_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorCloneRequest)
 private:
  inline void set_has_cursor_handle();
  inline void clear_has_cursor_handle();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 cursor_handle_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorCloneRequest* default_instance_;
};
// -------------------------------------------------------------------

class CursorCloneReply : public ::google::protobuf::MessageLite {
 public:
  CursorCloneReply();
  virtual ~CursorCloneReply();

  CursorCloneReply(const CursorCloneReply& from);

  inline CursorCloneReply& operator=(const CursorCloneReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorCloneReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorCloneReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorCloneReply* other);

  // implements Message ----------------------------------------------

  CursorCloneReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorCloneReply& from);
  void MergeFrom(const CursorCloneReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required uint64 cursor_handle = 2;
  inline bool has_cursor_handle() const;
  inline void clear_cursor_handle();
  static const int kCursorHandleFieldNumber = 2;
  inline ::google::protobuf::uint64 cursor_handle() const;
  inline void set_cursor_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorCloneReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_cursor_handle();
  inline void clear_has_cursor_handle();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 cursor_handle_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorCloneReply* default_instance_;
};
// -------------------------------------------------------------------

class CursorCloseRequest : public ::google::protobuf::MessageLite {
 public:
  CursorCloseRequest();
  virtual ~CursorCloseRequest();

  CursorCloseRequest(const CursorCloseRequest& from);

  inline CursorCloseRequest& operator=(const CursorCloseRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorCloseRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorCloseRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorCloseRequest* other);

  // implements Message ----------------------------------------------

  CursorCloseRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorCloseRequest& from);
  void MergeFrom(const CursorCloseRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cursor_handle = 1;
  inline bool has_cursor_handle() const;
  inline void clear_cursor_handle();
  static const int kCursorHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 cursor_handle() const;
  inline void set_cursor_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorCloseRequest)
 private:
  inline void set_has_cursor_handle();
  inline void clear_has_cursor_handle();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 cursor_handle_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorCloseRequest* default_instance_;
};
// -------------------------------------------------------------------

class CursorCloseReply : public ::google::protobuf::MessageLite {
 public:
  CursorCloseReply();
  virtual ~CursorCloseReply();

  CursorCloseReply(const CursorCloseReply& from);

  inline CursorCloseReply& operator=(const CursorCloseReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorCloseReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorCloseReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorCloseReply* other);

  // implements Message ----------------------------------------------

  CursorCloseReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorCloseReply& from);
  void MergeFrom(const CursorCloseReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorCloseReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorCloseReply* default_instance_;
};
// -------------------------------------------------------------------

class CursorInsertRequest : public ::google::protobuf::MessageLite {
 public:
  CursorInsertRequest();
  virtual ~CursorInsertRequest();

  CursorInsertRequest(const CursorInsertRequest& from);

  inline CursorInsertRequest& operator=(const CursorInsertRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorInsertRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorInsertRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorInsertRequest* other);

  // implements Message ----------------------------------------------

  CursorInsertRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorInsertRequest& from);
  void MergeFrom(const CursorInsertRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cursor_handle = 1;
  inline bool has_cursor_handle() const;
  inline void clear_cursor_handle();
  static const int kCursorHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 cursor_handle() const;
  inline void set_cursor_handle(::google::protobuf::uint64 value);

  // optional .upscaledb.Key key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::upscaledb::Key& key() const;
  inline ::upscaledb::Key* mutable_key();
  inline ::upscaledb::Key* release_key();
  inline void set_allocated_key(::upscaledb::Key* key);

  // optional .upscaledb.Record record = 3;
  inline bool has_record() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 3;
  inline const ::upscaledb::Record& record() const;
  inline ::upscaledb::Record* mutable_record();
  inline ::upscaledb::Record* release_record();
  inline void set_allocated_record(::upscaledb::Record* record);

  // required uint32 flags = 4;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 4;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // required bool send_key = 5;
  inline bool has_send_key() const;
  inline void clear_send_key();
  static const int kSendKeyFieldNumber = 5;
  inline bool send_key() const;
  inline void set_send_key(bool value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorInsertRequest)
 private:
  inline void set_has_cursor_handle();
  inline void clear_has_cursor_handle();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_record();
  inline void clear_has_record();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_send_key();
  inline void clear_has_send_key();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 cursor_handle_;
  ::upscaledb::Key* key_;
  ::upscaledb::Record* record_;
  ::google::protobuf::uint32 flags_;
  bool send_key_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorInsertRequest* default_instance_;
};
// -------------------------------------------------------------------

class CursorInsertReply : public ::google::protobuf::MessageLite {
 public:
  CursorInsertReply();
  virtual ~CursorInsertReply();

  CursorInsertReply(const CursorInsertReply& from);

  inline CursorInsertReply& operator=(const CursorInsertReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorInsertReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorInsertReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorInsertReply* other);

  // implements Message ----------------------------------------------

  CursorInsertReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorInsertReply& from);
  void MergeFrom(const CursorInsertReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional .upscaledb.Key key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::upscaledb::Key& key() const;
  inline ::upscaledb::Key* mutable_key();
  inline ::upscaledb::Key* release_key();
  inline void set_allocated_key(::upscaledb::Key* key);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorInsertReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_key();
  inline void clear_has_key();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::upscaledb::Key* key_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorInsertReply* default_instance_;
};
// -------------------------------------------------------------------

class CursorEraseRequest : public ::google::protobuf::MessageLite {
 public:
  CursorEraseRequest();
  virtual ~CursorEraseRequest();

  CursorEraseRequest(const CursorEraseRequest& from);

  inline CursorEraseRequest& operator=(const CursorEraseRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorEraseRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorEraseRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorEraseRequest* other);

  // implements Message ----------------------------------------------

  CursorEraseRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorEraseRequest& from);
  void MergeFrom(const CursorEraseRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cursor_handle = 1;
  inline bool has_cursor_handle() const;
  inline void clear_cursor_handle();
  static const int kCursorHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 cursor_handle() const;
  inline void set_cursor_handle(::google::protobuf::uint64 value);

  // required uint32 flags = 2;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorEraseRequest)
 private:
  inline void set_has_cursor_handle();
  inline void clear_has_cursor_handle();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 cursor_handle_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorEraseRequest* default_instance_;
};
// -------------------------------------------------------------------

class CursorEraseReply : public ::google::protobuf::MessageLite {
 public:
  CursorEraseReply();
  virtual ~CursorEraseReply();

  CursorEraseReply(const CursorEraseReply& from);

  inline CursorEraseReply& operator=(const CursorEraseReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorEraseReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorEraseReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorEraseReply* other);

  // implements Message ----------------------------------------------

  CursorEraseReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorEraseReply& from);
  void MergeFrom(const CursorEraseReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorEraseReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorEraseReply* default_instance_;
};
// -------------------------------------------------------------------

class CursorGetRecordCountRequest : public ::google::protobuf::MessageLite {
 public:
  CursorGetRecordCountRequest();
  virtual ~CursorGetRecordCountRequest();

  CursorGetRecordCountRequest(const CursorGetRecordCountRequest& from);

  inline CursorGetRecordCountRequest& operator=(const CursorGetRecordCountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorGetRecordCountRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorGetRecordCountRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorGetRecordCountRequest* other);

  // implements Message ----------------------------------------------

  CursorGetRecordCountRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorGetRecordCountRequest& from);
  void MergeFrom(const CursorGetRecordCountRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cursor_handle = 1;
  inline bool has_cursor_handle() const;
  inline void clear_cursor_handle();
  static const int kCursorHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 cursor_handle() const;
  inline void set_cursor_handle(::google::protobuf::uint64 value);

  // required uint32 flags = 2;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 2;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorGetRecordCountRequest)
 private:
  inline void set_has_cursor_handle();
  inline void clear_has_cursor_handle();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 cursor_handle_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorGetRecordCountRequest* default_instance_;
};
// -------------------------------------------------------------------

class CursorGetRecordCountReply : public ::google::protobuf::MessageLite {
 public:
  CursorGetRecordCountReply();
  virtual ~CursorGetRecordCountReply();

  CursorGetRecordCountReply(const CursorGetRecordCountReply& from);

  inline CursorGetRecordCountReply& operator=(const CursorGetRecordCountReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorGetRecordCountReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorGetRecordCountReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorGetRecordCountReply* other);

  // implements Message ----------------------------------------------

  CursorGetRecordCountReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorGetRecordCountReply& from);
  void MergeFrom(const CursorGetRecordCountReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorGetRecordCountReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_count();
  inline void clear_has_count();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint32 count_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorGetRecordCountReply* default_instance_;
};
// -------------------------------------------------------------------

class CursorGetRecordSizeRequest : public ::google::protobuf::MessageLite {
 public:
  CursorGetRecordSizeRequest();
  virtual ~CursorGetRecordSizeRequest();

  CursorGetRecordSizeRequest(const CursorGetRecordSizeRequest& from);

  inline CursorGetRecordSizeRequest& operator=(const CursorGetRecordSizeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorGetRecordSizeRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorGetRecordSizeRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorGetRecordSizeRequest* other);

  // implements Message ----------------------------------------------

  CursorGetRecordSizeRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorGetRecordSizeRequest& from);
  void MergeFrom(const CursorGetRecordSizeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cursor_handle = 1;
  inline bool has_cursor_handle() const;
  inline void clear_cursor_handle();
  static const int kCursorHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 cursor_handle() const;
  inline void set_cursor_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorGetRecordSizeRequest)
 private:
  inline void set_has_cursor_handle();
  inline void clear_has_cursor_handle();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 cursor_handle_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorGetRecordSizeRequest* default_instance_;
};
// -------------------------------------------------------------------

class CursorGetRecordSizeReply : public ::google::protobuf::MessageLite {
 public:
  CursorGetRecordSizeReply();
  virtual ~CursorGetRecordSizeReply();

  CursorGetRecordSizeReply(const CursorGetRecordSizeReply& from);

  inline CursorGetRecordSizeReply& operator=(const CursorGetRecordSizeReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorGetRecordSizeReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorGetRecordSizeReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorGetRecordSizeReply* other);

  // implements Message ----------------------------------------------

  CursorGetRecordSizeReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorGetRecordSizeReply& from);
  void MergeFrom(const CursorGetRecordSizeReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required uint64 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::uint64 size() const;
  inline void set_size(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorGetRecordSizeReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_size();
  inline void clear_has_size();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 size_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorGetRecordSizeReply* default_instance_;
};
// -------------------------------------------------------------------

class CursorGetDuplicatePositionRequest : public ::google::protobuf::MessageLite {
 public:
  CursorGetDuplicatePositionRequest();
  virtual ~CursorGetDuplicatePositionRequest();

  CursorGetDuplicatePositionRequest(const CursorGetDuplicatePositionRequest& from);

  inline CursorGetDuplicatePositionRequest& operator=(const CursorGetDuplicatePositionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorGetDuplicatePositionRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorGetDuplicatePositionRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorGetDuplicatePositionRequest* other);

  // implements Message ----------------------------------------------

  CursorGetDuplicatePositionRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorGetDuplicatePositionRequest& from);
  void MergeFrom(const CursorGetDuplicatePositionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cursor_handle = 1;
  inline bool has_cursor_handle() const;
  inline void clear_cursor_handle();
  static const int kCursorHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 cursor_handle() const;
  inline void set_cursor_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorGetDuplicatePositionRequest)
 private:
  inline void set_has_cursor_handle();
  inline void clear_has_cursor_handle();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 cursor_handle_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorGetDuplicatePositionRequest* default_instance_;
};
// -------------------------------------------------------------------

class CursorGetDuplicatePositionReply : public ::google::protobuf::MessageLite {
 public:
  CursorGetDuplicatePositionReply();
  virtual ~CursorGetDuplicatePositionReply();

  CursorGetDuplicatePositionReply(const CursorGetDuplicatePositionReply& from);

  inline CursorGetDuplicatePositionReply& operator=(const CursorGetDuplicatePositionReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorGetDuplicatePositionReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorGetDuplicatePositionReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorGetDuplicatePositionReply* other);

  // implements Message ----------------------------------------------

  CursorGetDuplicatePositionReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorGetDuplicatePositionReply& from);
  void MergeFrom(const CursorGetDuplicatePositionReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required uint32 position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorGetDuplicatePositionReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_position();
  inline void clear_has_position();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint32 position_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorGetDuplicatePositionReply* default_instance_;
};
// -------------------------------------------------------------------

class CursorOverwriteRequest : public ::google::protobuf::MessageLite {
 public:
  CursorOverwriteRequest();
  virtual ~CursorOverwriteRequest();

  CursorOverwriteRequest(const CursorOverwriteRequest& from);

  inline CursorOverwriteRequest& operator=(const CursorOverwriteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorOverwriteRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorOverwriteRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorOverwriteRequest* other);

  // implements Message ----------------------------------------------

  CursorOverwriteRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorOverwriteRequest& from);
  void MergeFrom(const CursorOverwriteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cursor_handle = 1;
  inline bool has_cursor_handle() const;
  inline void clear_cursor_handle();
  static const int kCursorHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 cursor_handle() const;
  inline void set_cursor_handle(::google::protobuf::uint64 value);

  // required .upscaledb.Record record = 2;
  inline bool has_record() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 2;
  inline const ::upscaledb::Record& record() const;
  inline ::upscaledb::Record* mutable_record();
  inline ::upscaledb::Record* release_record();
  inline void set_allocated_record(::upscaledb::Record* record);

  // required uint32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorOverwriteRequest)
 private:
  inline void set_has_cursor_handle();
  inline void clear_has_cursor_handle();
  inline void set_has_record();
  inline void clear_has_record();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 cursor_handle_;
  ::upscaledb::Record* record_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorOverwriteRequest* default_instance_;
};
// -------------------------------------------------------------------

class CursorOverwriteReply : public ::google::protobuf::MessageLite {
 public:
  CursorOverwriteReply();
  virtual ~CursorOverwriteReply();

  CursorOverwriteReply(const CursorOverwriteReply& from);

  inline CursorOverwriteReply& operator=(const CursorOverwriteReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorOverwriteReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorOverwriteReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorOverwriteReply* other);

  // implements Message ----------------------------------------------

  CursorOverwriteReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorOverwriteReply& from);
  void MergeFrom(const CursorOverwriteReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorOverwriteReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorOverwriteReply* default_instance_;
};
// -------------------------------------------------------------------

class CursorMoveRequest : public ::google::protobuf::MessageLite {
 public:
  CursorMoveRequest();
  virtual ~CursorMoveRequest();

  CursorMoveRequest(const CursorMoveRequest& from);

  inline CursorMoveRequest& operator=(const CursorMoveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorMoveRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorMoveRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorMoveRequest* other);

  // implements Message ----------------------------------------------

  CursorMoveRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorMoveRequest& from);
  void MergeFrom(const CursorMoveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 cursor_handle = 1;
  inline bool has_cursor_handle() const;
  inline void clear_cursor_handle();
  static const int kCursorHandleFieldNumber = 1;
  inline ::google::protobuf::uint64 cursor_handle() const;
  inline void set_cursor_handle(::google::protobuf::uint64 value);

  // optional .upscaledb.Key key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::upscaledb::Key& key() const;
  inline ::upscaledb::Key* mutable_key();
  inline ::upscaledb::Key* release_key();
  inline void set_allocated_key(::upscaledb::Key* key);

  // optional .upscaledb.Record record = 3;
  inline bool has_record() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 3;
  inline const ::upscaledb::Record& record() const;
  inline ::upscaledb::Record* mutable_record();
  inline ::upscaledb::Record* release_record();
  inline void set_allocated_record(::upscaledb::Record* record);

  // required uint32 flags = 4;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 4;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorMoveRequest)
 private:
  inline void set_has_cursor_handle();
  inline void clear_has_cursor_handle();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_record();
  inline void clear_has_record();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 cursor_handle_;
  ::upscaledb::Key* key_;
  ::upscaledb::Record* record_;
  ::google::protobuf::uint32 flags_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorMoveRequest* default_instance_;
};
// -------------------------------------------------------------------

class CursorMoveReply : public ::google::protobuf::MessageLite {
 public:
  CursorMoveReply();
  virtual ~CursorMoveReply();

  CursorMoveReply(const CursorMoveReply& from);

  inline CursorMoveReply& operator=(const CursorMoveReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CursorMoveReply& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CursorMoveReply* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CursorMoveReply* other);

  // implements Message ----------------------------------------------

  CursorMoveReply* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CursorMoveReply& from);
  void MergeFrom(const CursorMoveReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional .upscaledb.Key key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::upscaledb::Key& key() const;
  inline ::upscaledb::Key* mutable_key();
  inline ::upscaledb::Key* release_key();
  inline void set_allocated_key(::upscaledb::Key* key);

  // optional .upscaledb.Record record = 3;
  inline bool has_record() const;
  inline void clear_record();
  static const int kRecordFieldNumber = 3;
  inline const ::upscaledb::Record& record() const;
  inline ::upscaledb::Record* mutable_record();
  inline ::upscaledb::Record* release_record();
  inline void set_allocated_record(::upscaledb::Record* record);

  // @@protoc_insertion_point(class_scope:upscaledb.CursorMoveReply)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_record();
  inline void clear_has_record();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::upscaledb::Key* key_;
  ::upscaledb::Record* record_;
  ::google::protobuf::int32 status_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_messages_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_messages_2eproto();
  #endif
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CursorMoveReply* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoWrapper

// required .upscaledb.ProtoWrapper.Type type = 1;
inline bool ProtoWrapper::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoWrapper::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoWrapper::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoWrapper::clear_type() {
  type_ = 10;
  clear_has_type();
}
inline ::upscaledb::ProtoWrapper_Type ProtoWrapper::type() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.type)
  return static_cast< ::upscaledb::ProtoWrapper_Type >(type_);
}
inline void ProtoWrapper::set_type(::upscaledb::ProtoWrapper_Type value) {
  assert(::upscaledb::ProtoWrapper_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.ProtoWrapper.type)
}

// optional .upscaledb.ConnectRequest connect_request = 10;
inline bool ProtoWrapper::has_connect_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoWrapper::set_has_connect_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoWrapper::clear_has_connect_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoWrapper::clear_connect_request() {
  if (connect_request_ != NULL) connect_request_->::upscaledb::ConnectRequest::Clear();
  clear_has_connect_request();
}
inline const ::upscaledb::ConnectRequest& ProtoWrapper::connect_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.connect_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return connect_request_ != NULL ? *connect_request_ : *default_instance().connect_request_;
#else
  return connect_request_ != NULL ? *connect_request_ : *default_instance_->connect_request_;
#endif
}
inline ::upscaledb::ConnectRequest* ProtoWrapper::mutable_connect_request() {
  set_has_connect_request();
  if (connect_request_ == NULL) connect_request_ = new ::upscaledb::ConnectRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.connect_request)
  return connect_request_;
}
inline ::upscaledb::ConnectRequest* ProtoWrapper::release_connect_request() {
  clear_has_connect_request();
  ::upscaledb::ConnectRequest* temp = connect_request_;
  connect_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_connect_request(::upscaledb::ConnectRequest* connect_request) {
  delete connect_request_;
  connect_request_ = connect_request;
  if (connect_request) {
    set_has_connect_request();
  } else {
    clear_has_connect_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.connect_request)
}

// optional .upscaledb.ConnectReply connect_reply = 11;
inline bool ProtoWrapper::has_connect_reply() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtoWrapper::set_has_connect_reply() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtoWrapper::clear_has_connect_reply() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtoWrapper::clear_connect_reply() {
  if (connect_reply_ != NULL) connect_reply_->::upscaledb::ConnectReply::Clear();
  clear_has_connect_reply();
}
inline const ::upscaledb::ConnectReply& ProtoWrapper::connect_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.connect_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return connect_reply_ != NULL ? *connect_reply_ : *default_instance().connect_reply_;
#else
  return connect_reply_ != NULL ? *connect_reply_ : *default_instance_->connect_reply_;
#endif
}
inline ::upscaledb::ConnectReply* ProtoWrapper::mutable_connect_reply() {
  set_has_connect_reply();
  if (connect_reply_ == NULL) connect_reply_ = new ::upscaledb::ConnectReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.connect_reply)
  return connect_reply_;
}
inline ::upscaledb::ConnectReply* ProtoWrapper::release_connect_reply() {
  clear_has_connect_reply();
  ::upscaledb::ConnectReply* temp = connect_reply_;
  connect_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_connect_reply(::upscaledb::ConnectReply* connect_reply) {
  delete connect_reply_;
  connect_reply_ = connect_reply;
  if (connect_reply) {
    set_has_connect_reply();
  } else {
    clear_has_connect_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.connect_reply)
}

// optional .upscaledb.DisconnectRequest disconnect_request = 12;
inline bool ProtoWrapper::has_disconnect_request() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtoWrapper::set_has_disconnect_request() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtoWrapper::clear_has_disconnect_request() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtoWrapper::clear_disconnect_request() {
  if (disconnect_request_ != NULL) disconnect_request_->::upscaledb::DisconnectRequest::Clear();
  clear_has_disconnect_request();
}
inline const ::upscaledb::DisconnectRequest& ProtoWrapper::disconnect_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.disconnect_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return disconnect_request_ != NULL ? *disconnect_request_ : *default_instance().disconnect_request_;
#else
  return disconnect_request_ != NULL ? *disconnect_request_ : *default_instance_->disconnect_request_;
#endif
}
inline ::upscaledb::DisconnectRequest* ProtoWrapper::mutable_disconnect_request() {
  set_has_disconnect_request();
  if (disconnect_request_ == NULL) disconnect_request_ = new ::upscaledb::DisconnectRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.disconnect_request)
  return disconnect_request_;
}
inline ::upscaledb::DisconnectRequest* ProtoWrapper::release_disconnect_request() {
  clear_has_disconnect_request();
  ::upscaledb::DisconnectRequest* temp = disconnect_request_;
  disconnect_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_disconnect_request(::upscaledb::DisconnectRequest* disconnect_request) {
  delete disconnect_request_;
  disconnect_request_ = disconnect_request;
  if (disconnect_request) {
    set_has_disconnect_request();
  } else {
    clear_has_disconnect_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.disconnect_request)
}

// optional .upscaledb.DisconnectReply disconnect_reply = 13;
inline bool ProtoWrapper::has_disconnect_reply() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProtoWrapper::set_has_disconnect_reply() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProtoWrapper::clear_has_disconnect_reply() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProtoWrapper::clear_disconnect_reply() {
  if (disconnect_reply_ != NULL) disconnect_reply_->::upscaledb::DisconnectReply::Clear();
  clear_has_disconnect_reply();
}
inline const ::upscaledb::DisconnectReply& ProtoWrapper::disconnect_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.disconnect_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return disconnect_reply_ != NULL ? *disconnect_reply_ : *default_instance().disconnect_reply_;
#else
  return disconnect_reply_ != NULL ? *disconnect_reply_ : *default_instance_->disconnect_reply_;
#endif
}
inline ::upscaledb::DisconnectReply* ProtoWrapper::mutable_disconnect_reply() {
  set_has_disconnect_reply();
  if (disconnect_reply_ == NULL) disconnect_reply_ = new ::upscaledb::DisconnectReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.disconnect_reply)
  return disconnect_reply_;
}
inline ::upscaledb::DisconnectReply* ProtoWrapper::release_disconnect_reply() {
  clear_has_disconnect_reply();
  ::upscaledb::DisconnectReply* temp = disconnect_reply_;
  disconnect_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_disconnect_reply(::upscaledb::DisconnectReply* disconnect_reply) {
  delete disconnect_reply_;
  disconnect_reply_ = disconnect_reply;
  if (disconnect_reply) {
    set_has_disconnect_reply();
  } else {
    clear_has_disconnect_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.disconnect_reply)
}

// optional .upscaledb.EnvRenameRequest env_rename_request = 20;
inline bool ProtoWrapper::has_env_rename_request() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProtoWrapper::set_has_env_rename_request() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProtoWrapper::clear_has_env_rename_request() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProtoWrapper::clear_env_rename_request() {
  if (env_rename_request_ != NULL) env_rename_request_->::upscaledb::EnvRenameRequest::Clear();
  clear_has_env_rename_request();
}
inline const ::upscaledb::EnvRenameRequest& ProtoWrapper::env_rename_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_rename_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_rename_request_ != NULL ? *env_rename_request_ : *default_instance().env_rename_request_;
#else
  return env_rename_request_ != NULL ? *env_rename_request_ : *default_instance_->env_rename_request_;
#endif
}
inline ::upscaledb::EnvRenameRequest* ProtoWrapper::mutable_env_rename_request() {
  set_has_env_rename_request();
  if (env_rename_request_ == NULL) env_rename_request_ = new ::upscaledb::EnvRenameRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_rename_request)
  return env_rename_request_;
}
inline ::upscaledb::EnvRenameRequest* ProtoWrapper::release_env_rename_request() {
  clear_has_env_rename_request();
  ::upscaledb::EnvRenameRequest* temp = env_rename_request_;
  env_rename_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_rename_request(::upscaledb::EnvRenameRequest* env_rename_request) {
  delete env_rename_request_;
  env_rename_request_ = env_rename_request;
  if (env_rename_request) {
    set_has_env_rename_request();
  } else {
    clear_has_env_rename_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_rename_request)
}

// optional .upscaledb.EnvRenameReply env_rename_reply = 21;
inline bool ProtoWrapper::has_env_rename_reply() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProtoWrapper::set_has_env_rename_reply() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProtoWrapper::clear_has_env_rename_reply() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProtoWrapper::clear_env_rename_reply() {
  if (env_rename_reply_ != NULL) env_rename_reply_->::upscaledb::EnvRenameReply::Clear();
  clear_has_env_rename_reply();
}
inline const ::upscaledb::EnvRenameReply& ProtoWrapper::env_rename_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_rename_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_rename_reply_ != NULL ? *env_rename_reply_ : *default_instance().env_rename_reply_;
#else
  return env_rename_reply_ != NULL ? *env_rename_reply_ : *default_instance_->env_rename_reply_;
#endif
}
inline ::upscaledb::EnvRenameReply* ProtoWrapper::mutable_env_rename_reply() {
  set_has_env_rename_reply();
  if (env_rename_reply_ == NULL) env_rename_reply_ = new ::upscaledb::EnvRenameReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_rename_reply)
  return env_rename_reply_;
}
inline ::upscaledb::EnvRenameReply* ProtoWrapper::release_env_rename_reply() {
  clear_has_env_rename_reply();
  ::upscaledb::EnvRenameReply* temp = env_rename_reply_;
  env_rename_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_rename_reply(::upscaledb::EnvRenameReply* env_rename_reply) {
  delete env_rename_reply_;
  env_rename_reply_ = env_rename_reply;
  if (env_rename_reply) {
    set_has_env_rename_reply();
  } else {
    clear_has_env_rename_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_rename_reply)
}

// optional .upscaledb.EnvGetParametersRequest env_get_parameters_request = 30;
inline bool ProtoWrapper::has_env_get_parameters_request() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProtoWrapper::set_has_env_get_parameters_request() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProtoWrapper::clear_has_env_get_parameters_request() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProtoWrapper::clear_env_get_parameters_request() {
  if (env_get_parameters_request_ != NULL) env_get_parameters_request_->::upscaledb::EnvGetParametersRequest::Clear();
  clear_has_env_get_parameters_request();
}
inline const ::upscaledb::EnvGetParametersRequest& ProtoWrapper::env_get_parameters_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_get_parameters_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_get_parameters_request_ != NULL ? *env_get_parameters_request_ : *default_instance().env_get_parameters_request_;
#else
  return env_get_parameters_request_ != NULL ? *env_get_parameters_request_ : *default_instance_->env_get_parameters_request_;
#endif
}
inline ::upscaledb::EnvGetParametersRequest* ProtoWrapper::mutable_env_get_parameters_request() {
  set_has_env_get_parameters_request();
  if (env_get_parameters_request_ == NULL) env_get_parameters_request_ = new ::upscaledb::EnvGetParametersRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_get_parameters_request)
  return env_get_parameters_request_;
}
inline ::upscaledb::EnvGetParametersRequest* ProtoWrapper::release_env_get_parameters_request() {
  clear_has_env_get_parameters_request();
  ::upscaledb::EnvGetParametersRequest* temp = env_get_parameters_request_;
  env_get_parameters_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_get_parameters_request(::upscaledb::EnvGetParametersRequest* env_get_parameters_request) {
  delete env_get_parameters_request_;
  env_get_parameters_request_ = env_get_parameters_request;
  if (env_get_parameters_request) {
    set_has_env_get_parameters_request();
  } else {
    clear_has_env_get_parameters_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_get_parameters_request)
}

// optional .upscaledb.EnvGetParametersReply env_get_parameters_reply = 31;
inline bool ProtoWrapper::has_env_get_parameters_reply() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProtoWrapper::set_has_env_get_parameters_reply() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProtoWrapper::clear_has_env_get_parameters_reply() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProtoWrapper::clear_env_get_parameters_reply() {
  if (env_get_parameters_reply_ != NULL) env_get_parameters_reply_->::upscaledb::EnvGetParametersReply::Clear();
  clear_has_env_get_parameters_reply();
}
inline const ::upscaledb::EnvGetParametersReply& ProtoWrapper::env_get_parameters_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_get_parameters_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_get_parameters_reply_ != NULL ? *env_get_parameters_reply_ : *default_instance().env_get_parameters_reply_;
#else
  return env_get_parameters_reply_ != NULL ? *env_get_parameters_reply_ : *default_instance_->env_get_parameters_reply_;
#endif
}
inline ::upscaledb::EnvGetParametersReply* ProtoWrapper::mutable_env_get_parameters_reply() {
  set_has_env_get_parameters_reply();
  if (env_get_parameters_reply_ == NULL) env_get_parameters_reply_ = new ::upscaledb::EnvGetParametersReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_get_parameters_reply)
  return env_get_parameters_reply_;
}
inline ::upscaledb::EnvGetParametersReply* ProtoWrapper::release_env_get_parameters_reply() {
  clear_has_env_get_parameters_reply();
  ::upscaledb::EnvGetParametersReply* temp = env_get_parameters_reply_;
  env_get_parameters_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_get_parameters_reply(::upscaledb::EnvGetParametersReply* env_get_parameters_reply) {
  delete env_get_parameters_reply_;
  env_get_parameters_reply_ = env_get_parameters_reply;
  if (env_get_parameters_reply) {
    set_has_env_get_parameters_reply();
  } else {
    clear_has_env_get_parameters_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_get_parameters_reply)
}

// optional .upscaledb.EnvGetDatabaseNamesRequest env_get_database_names_request = 40;
inline bool ProtoWrapper::has_env_get_database_names_request() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProtoWrapper::set_has_env_get_database_names_request() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProtoWrapper::clear_has_env_get_database_names_request() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProtoWrapper::clear_env_get_database_names_request() {
  if (env_get_database_names_request_ != NULL) env_get_database_names_request_->::upscaledb::EnvGetDatabaseNamesRequest::Clear();
  clear_has_env_get_database_names_request();
}
inline const ::upscaledb::EnvGetDatabaseNamesRequest& ProtoWrapper::env_get_database_names_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_get_database_names_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_get_database_names_request_ != NULL ? *env_get_database_names_request_ : *default_instance().env_get_database_names_request_;
#else
  return env_get_database_names_request_ != NULL ? *env_get_database_names_request_ : *default_instance_->env_get_database_names_request_;
#endif
}
inline ::upscaledb::EnvGetDatabaseNamesRequest* ProtoWrapper::mutable_env_get_database_names_request() {
  set_has_env_get_database_names_request();
  if (env_get_database_names_request_ == NULL) env_get_database_names_request_ = new ::upscaledb::EnvGetDatabaseNamesRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_get_database_names_request)
  return env_get_database_names_request_;
}
inline ::upscaledb::EnvGetDatabaseNamesRequest* ProtoWrapper::release_env_get_database_names_request() {
  clear_has_env_get_database_names_request();
  ::upscaledb::EnvGetDatabaseNamesRequest* temp = env_get_database_names_request_;
  env_get_database_names_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_get_database_names_request(::upscaledb::EnvGetDatabaseNamesRequest* env_get_database_names_request) {
  delete env_get_database_names_request_;
  env_get_database_names_request_ = env_get_database_names_request;
  if (env_get_database_names_request) {
    set_has_env_get_database_names_request();
  } else {
    clear_has_env_get_database_names_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_get_database_names_request)
}

// optional .upscaledb.EnvGetDatabaseNamesReply env_get_database_names_reply = 41;
inline bool ProtoWrapper::has_env_get_database_names_reply() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProtoWrapper::set_has_env_get_database_names_reply() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProtoWrapper::clear_has_env_get_database_names_reply() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProtoWrapper::clear_env_get_database_names_reply() {
  if (env_get_database_names_reply_ != NULL) env_get_database_names_reply_->::upscaledb::EnvGetDatabaseNamesReply::Clear();
  clear_has_env_get_database_names_reply();
}
inline const ::upscaledb::EnvGetDatabaseNamesReply& ProtoWrapper::env_get_database_names_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_get_database_names_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_get_database_names_reply_ != NULL ? *env_get_database_names_reply_ : *default_instance().env_get_database_names_reply_;
#else
  return env_get_database_names_reply_ != NULL ? *env_get_database_names_reply_ : *default_instance_->env_get_database_names_reply_;
#endif
}
inline ::upscaledb::EnvGetDatabaseNamesReply* ProtoWrapper::mutable_env_get_database_names_reply() {
  set_has_env_get_database_names_reply();
  if (env_get_database_names_reply_ == NULL) env_get_database_names_reply_ = new ::upscaledb::EnvGetDatabaseNamesReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_get_database_names_reply)
  return env_get_database_names_reply_;
}
inline ::upscaledb::EnvGetDatabaseNamesReply* ProtoWrapper::release_env_get_database_names_reply() {
  clear_has_env_get_database_names_reply();
  ::upscaledb::EnvGetDatabaseNamesReply* temp = env_get_database_names_reply_;
  env_get_database_names_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_get_database_names_reply(::upscaledb::EnvGetDatabaseNamesReply* env_get_database_names_reply) {
  delete env_get_database_names_reply_;
  env_get_database_names_reply_ = env_get_database_names_reply;
  if (env_get_database_names_reply) {
    set_has_env_get_database_names_reply();
  } else {
    clear_has_env_get_database_names_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_get_database_names_reply)
}

// optional .upscaledb.EnvFlushRequest env_flush_request = 50;
inline bool ProtoWrapper::has_env_flush_request() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProtoWrapper::set_has_env_flush_request() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ProtoWrapper::clear_has_env_flush_request() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ProtoWrapper::clear_env_flush_request() {
  if (env_flush_request_ != NULL) env_flush_request_->::upscaledb::EnvFlushRequest::Clear();
  clear_has_env_flush_request();
}
inline const ::upscaledb::EnvFlushRequest& ProtoWrapper::env_flush_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_flush_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_flush_request_ != NULL ? *env_flush_request_ : *default_instance().env_flush_request_;
#else
  return env_flush_request_ != NULL ? *env_flush_request_ : *default_instance_->env_flush_request_;
#endif
}
inline ::upscaledb::EnvFlushRequest* ProtoWrapper::mutable_env_flush_request() {
  set_has_env_flush_request();
  if (env_flush_request_ == NULL) env_flush_request_ = new ::upscaledb::EnvFlushRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_flush_request)
  return env_flush_request_;
}
inline ::upscaledb::EnvFlushRequest* ProtoWrapper::release_env_flush_request() {
  clear_has_env_flush_request();
  ::upscaledb::EnvFlushRequest* temp = env_flush_request_;
  env_flush_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_flush_request(::upscaledb::EnvFlushRequest* env_flush_request) {
  delete env_flush_request_;
  env_flush_request_ = env_flush_request;
  if (env_flush_request) {
    set_has_env_flush_request();
  } else {
    clear_has_env_flush_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_flush_request)
}

// optional .upscaledb.EnvFlushReply env_flush_reply = 51;
inline bool ProtoWrapper::has_env_flush_reply() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ProtoWrapper::set_has_env_flush_reply() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ProtoWrapper::clear_has_env_flush_reply() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ProtoWrapper::clear_env_flush_reply() {
  if (env_flush_reply_ != NULL) env_flush_reply_->::upscaledb::EnvFlushReply::Clear();
  clear_has_env_flush_reply();
}
inline const ::upscaledb::EnvFlushReply& ProtoWrapper::env_flush_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_flush_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_flush_reply_ != NULL ? *env_flush_reply_ : *default_instance().env_flush_reply_;
#else
  return env_flush_reply_ != NULL ? *env_flush_reply_ : *default_instance_->env_flush_reply_;
#endif
}
inline ::upscaledb::EnvFlushReply* ProtoWrapper::mutable_env_flush_reply() {
  set_has_env_flush_reply();
  if (env_flush_reply_ == NULL) env_flush_reply_ = new ::upscaledb::EnvFlushReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_flush_reply)
  return env_flush_reply_;
}
inline ::upscaledb::EnvFlushReply* ProtoWrapper::release_env_flush_reply() {
  clear_has_env_flush_reply();
  ::upscaledb::EnvFlushReply* temp = env_flush_reply_;
  env_flush_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_flush_reply(::upscaledb::EnvFlushReply* env_flush_reply) {
  delete env_flush_reply_;
  env_flush_reply_ = env_flush_reply;
  if (env_flush_reply) {
    set_has_env_flush_reply();
  } else {
    clear_has_env_flush_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_flush_reply)
}

// optional .upscaledb.EnvCreateDbRequest env_create_db_request = 60;
inline bool ProtoWrapper::has_env_create_db_request() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ProtoWrapper::set_has_env_create_db_request() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ProtoWrapper::clear_has_env_create_db_request() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ProtoWrapper::clear_env_create_db_request() {
  if (env_create_db_request_ != NULL) env_create_db_request_->::upscaledb::EnvCreateDbRequest::Clear();
  clear_has_env_create_db_request();
}
inline const ::upscaledb::EnvCreateDbRequest& ProtoWrapper::env_create_db_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_create_db_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_create_db_request_ != NULL ? *env_create_db_request_ : *default_instance().env_create_db_request_;
#else
  return env_create_db_request_ != NULL ? *env_create_db_request_ : *default_instance_->env_create_db_request_;
#endif
}
inline ::upscaledb::EnvCreateDbRequest* ProtoWrapper::mutable_env_create_db_request() {
  set_has_env_create_db_request();
  if (env_create_db_request_ == NULL) env_create_db_request_ = new ::upscaledb::EnvCreateDbRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_create_db_request)
  return env_create_db_request_;
}
inline ::upscaledb::EnvCreateDbRequest* ProtoWrapper::release_env_create_db_request() {
  clear_has_env_create_db_request();
  ::upscaledb::EnvCreateDbRequest* temp = env_create_db_request_;
  env_create_db_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_create_db_request(::upscaledb::EnvCreateDbRequest* env_create_db_request) {
  delete env_create_db_request_;
  env_create_db_request_ = env_create_db_request;
  if (env_create_db_request) {
    set_has_env_create_db_request();
  } else {
    clear_has_env_create_db_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_create_db_request)
}

// optional .upscaledb.EnvCreateDbReply env_create_db_reply = 61;
inline bool ProtoWrapper::has_env_create_db_reply() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ProtoWrapper::set_has_env_create_db_reply() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ProtoWrapper::clear_has_env_create_db_reply() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ProtoWrapper::clear_env_create_db_reply() {
  if (env_create_db_reply_ != NULL) env_create_db_reply_->::upscaledb::EnvCreateDbReply::Clear();
  clear_has_env_create_db_reply();
}
inline const ::upscaledb::EnvCreateDbReply& ProtoWrapper::env_create_db_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_create_db_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_create_db_reply_ != NULL ? *env_create_db_reply_ : *default_instance().env_create_db_reply_;
#else
  return env_create_db_reply_ != NULL ? *env_create_db_reply_ : *default_instance_->env_create_db_reply_;
#endif
}
inline ::upscaledb::EnvCreateDbReply* ProtoWrapper::mutable_env_create_db_reply() {
  set_has_env_create_db_reply();
  if (env_create_db_reply_ == NULL) env_create_db_reply_ = new ::upscaledb::EnvCreateDbReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_create_db_reply)
  return env_create_db_reply_;
}
inline ::upscaledb::EnvCreateDbReply* ProtoWrapper::release_env_create_db_reply() {
  clear_has_env_create_db_reply();
  ::upscaledb::EnvCreateDbReply* temp = env_create_db_reply_;
  env_create_db_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_create_db_reply(::upscaledb::EnvCreateDbReply* env_create_db_reply) {
  delete env_create_db_reply_;
  env_create_db_reply_ = env_create_db_reply;
  if (env_create_db_reply) {
    set_has_env_create_db_reply();
  } else {
    clear_has_env_create_db_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_create_db_reply)
}

// optional .upscaledb.EnvOpenDbRequest env_open_db_request = 70;
inline bool ProtoWrapper::has_env_open_db_request() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ProtoWrapper::set_has_env_open_db_request() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ProtoWrapper::clear_has_env_open_db_request() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ProtoWrapper::clear_env_open_db_request() {
  if (env_open_db_request_ != NULL) env_open_db_request_->::upscaledb::EnvOpenDbRequest::Clear();
  clear_has_env_open_db_request();
}
inline const ::upscaledb::EnvOpenDbRequest& ProtoWrapper::env_open_db_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_open_db_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_open_db_request_ != NULL ? *env_open_db_request_ : *default_instance().env_open_db_request_;
#else
  return env_open_db_request_ != NULL ? *env_open_db_request_ : *default_instance_->env_open_db_request_;
#endif
}
inline ::upscaledb::EnvOpenDbRequest* ProtoWrapper::mutable_env_open_db_request() {
  set_has_env_open_db_request();
  if (env_open_db_request_ == NULL) env_open_db_request_ = new ::upscaledb::EnvOpenDbRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_open_db_request)
  return env_open_db_request_;
}
inline ::upscaledb::EnvOpenDbRequest* ProtoWrapper::release_env_open_db_request() {
  clear_has_env_open_db_request();
  ::upscaledb::EnvOpenDbRequest* temp = env_open_db_request_;
  env_open_db_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_open_db_request(::upscaledb::EnvOpenDbRequest* env_open_db_request) {
  delete env_open_db_request_;
  env_open_db_request_ = env_open_db_request;
  if (env_open_db_request) {
    set_has_env_open_db_request();
  } else {
    clear_has_env_open_db_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_open_db_request)
}

// optional .upscaledb.EnvOpenDbReply env_open_db_reply = 71;
inline bool ProtoWrapper::has_env_open_db_reply() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ProtoWrapper::set_has_env_open_db_reply() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ProtoWrapper::clear_has_env_open_db_reply() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ProtoWrapper::clear_env_open_db_reply() {
  if (env_open_db_reply_ != NULL) env_open_db_reply_->::upscaledb::EnvOpenDbReply::Clear();
  clear_has_env_open_db_reply();
}
inline const ::upscaledb::EnvOpenDbReply& ProtoWrapper::env_open_db_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_open_db_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_open_db_reply_ != NULL ? *env_open_db_reply_ : *default_instance().env_open_db_reply_;
#else
  return env_open_db_reply_ != NULL ? *env_open_db_reply_ : *default_instance_->env_open_db_reply_;
#endif
}
inline ::upscaledb::EnvOpenDbReply* ProtoWrapper::mutable_env_open_db_reply() {
  set_has_env_open_db_reply();
  if (env_open_db_reply_ == NULL) env_open_db_reply_ = new ::upscaledb::EnvOpenDbReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_open_db_reply)
  return env_open_db_reply_;
}
inline ::upscaledb::EnvOpenDbReply* ProtoWrapper::release_env_open_db_reply() {
  clear_has_env_open_db_reply();
  ::upscaledb::EnvOpenDbReply* temp = env_open_db_reply_;
  env_open_db_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_open_db_reply(::upscaledb::EnvOpenDbReply* env_open_db_reply) {
  delete env_open_db_reply_;
  env_open_db_reply_ = env_open_db_reply;
  if (env_open_db_reply) {
    set_has_env_open_db_reply();
  } else {
    clear_has_env_open_db_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_open_db_reply)
}

// optional .upscaledb.EnvEraseDbRequest env_erase_db_request = 80;
inline bool ProtoWrapper::has_env_erase_db_request() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ProtoWrapper::set_has_env_erase_db_request() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ProtoWrapper::clear_has_env_erase_db_request() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ProtoWrapper::clear_env_erase_db_request() {
  if (env_erase_db_request_ != NULL) env_erase_db_request_->::upscaledb::EnvEraseDbRequest::Clear();
  clear_has_env_erase_db_request();
}
inline const ::upscaledb::EnvEraseDbRequest& ProtoWrapper::env_erase_db_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_erase_db_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_erase_db_request_ != NULL ? *env_erase_db_request_ : *default_instance().env_erase_db_request_;
#else
  return env_erase_db_request_ != NULL ? *env_erase_db_request_ : *default_instance_->env_erase_db_request_;
#endif
}
inline ::upscaledb::EnvEraseDbRequest* ProtoWrapper::mutable_env_erase_db_request() {
  set_has_env_erase_db_request();
  if (env_erase_db_request_ == NULL) env_erase_db_request_ = new ::upscaledb::EnvEraseDbRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_erase_db_request)
  return env_erase_db_request_;
}
inline ::upscaledb::EnvEraseDbRequest* ProtoWrapper::release_env_erase_db_request() {
  clear_has_env_erase_db_request();
  ::upscaledb::EnvEraseDbRequest* temp = env_erase_db_request_;
  env_erase_db_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_erase_db_request(::upscaledb::EnvEraseDbRequest* env_erase_db_request) {
  delete env_erase_db_request_;
  env_erase_db_request_ = env_erase_db_request;
  if (env_erase_db_request) {
    set_has_env_erase_db_request();
  } else {
    clear_has_env_erase_db_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_erase_db_request)
}

// optional .upscaledb.EnvEraseDbReply env_erase_db_reply = 81;
inline bool ProtoWrapper::has_env_erase_db_reply() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ProtoWrapper::set_has_env_erase_db_reply() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ProtoWrapper::clear_has_env_erase_db_reply() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ProtoWrapper::clear_env_erase_db_reply() {
  if (env_erase_db_reply_ != NULL) env_erase_db_reply_->::upscaledb::EnvEraseDbReply::Clear();
  clear_has_env_erase_db_reply();
}
inline const ::upscaledb::EnvEraseDbReply& ProtoWrapper::env_erase_db_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.env_erase_db_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return env_erase_db_reply_ != NULL ? *env_erase_db_reply_ : *default_instance().env_erase_db_reply_;
#else
  return env_erase_db_reply_ != NULL ? *env_erase_db_reply_ : *default_instance_->env_erase_db_reply_;
#endif
}
inline ::upscaledb::EnvEraseDbReply* ProtoWrapper::mutable_env_erase_db_reply() {
  set_has_env_erase_db_reply();
  if (env_erase_db_reply_ == NULL) env_erase_db_reply_ = new ::upscaledb::EnvEraseDbReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.env_erase_db_reply)
  return env_erase_db_reply_;
}
inline ::upscaledb::EnvEraseDbReply* ProtoWrapper::release_env_erase_db_reply() {
  clear_has_env_erase_db_reply();
  ::upscaledb::EnvEraseDbReply* temp = env_erase_db_reply_;
  env_erase_db_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_env_erase_db_reply(::upscaledb::EnvEraseDbReply* env_erase_db_reply) {
  delete env_erase_db_reply_;
  env_erase_db_reply_ = env_erase_db_reply;
  if (env_erase_db_reply) {
    set_has_env_erase_db_reply();
  } else {
    clear_has_env_erase_db_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.env_erase_db_reply)
}

// optional .upscaledb.DbCloseRequest db_close_request = 90;
inline bool ProtoWrapper::has_db_close_request() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ProtoWrapper::set_has_db_close_request() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ProtoWrapper::clear_has_db_close_request() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ProtoWrapper::clear_db_close_request() {
  if (db_close_request_ != NULL) db_close_request_->::upscaledb::DbCloseRequest::Clear();
  clear_has_db_close_request();
}
inline const ::upscaledb::DbCloseRequest& ProtoWrapper::db_close_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_close_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_close_request_ != NULL ? *db_close_request_ : *default_instance().db_close_request_;
#else
  return db_close_request_ != NULL ? *db_close_request_ : *default_instance_->db_close_request_;
#endif
}
inline ::upscaledb::DbCloseRequest* ProtoWrapper::mutable_db_close_request() {
  set_has_db_close_request();
  if (db_close_request_ == NULL) db_close_request_ = new ::upscaledb::DbCloseRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_close_request)
  return db_close_request_;
}
inline ::upscaledb::DbCloseRequest* ProtoWrapper::release_db_close_request() {
  clear_has_db_close_request();
  ::upscaledb::DbCloseRequest* temp = db_close_request_;
  db_close_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_close_request(::upscaledb::DbCloseRequest* db_close_request) {
  delete db_close_request_;
  db_close_request_ = db_close_request;
  if (db_close_request) {
    set_has_db_close_request();
  } else {
    clear_has_db_close_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_close_request)
}

// optional .upscaledb.DbCloseReply db_close_reply = 91;
inline bool ProtoWrapper::has_db_close_reply() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ProtoWrapper::set_has_db_close_reply() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ProtoWrapper::clear_has_db_close_reply() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ProtoWrapper::clear_db_close_reply() {
  if (db_close_reply_ != NULL) db_close_reply_->::upscaledb::DbCloseReply::Clear();
  clear_has_db_close_reply();
}
inline const ::upscaledb::DbCloseReply& ProtoWrapper::db_close_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_close_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_close_reply_ != NULL ? *db_close_reply_ : *default_instance().db_close_reply_;
#else
  return db_close_reply_ != NULL ? *db_close_reply_ : *default_instance_->db_close_reply_;
#endif
}
inline ::upscaledb::DbCloseReply* ProtoWrapper::mutable_db_close_reply() {
  set_has_db_close_reply();
  if (db_close_reply_ == NULL) db_close_reply_ = new ::upscaledb::DbCloseReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_close_reply)
  return db_close_reply_;
}
inline ::upscaledb::DbCloseReply* ProtoWrapper::release_db_close_reply() {
  clear_has_db_close_reply();
  ::upscaledb::DbCloseReply* temp = db_close_reply_;
  db_close_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_close_reply(::upscaledb::DbCloseReply* db_close_reply) {
  delete db_close_reply_;
  db_close_reply_ = db_close_reply;
  if (db_close_reply) {
    set_has_db_close_reply();
  } else {
    clear_has_db_close_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_close_reply)
}

// optional .upscaledb.DbGetParametersRequest db_get_parameters_request = 100;
inline bool ProtoWrapper::has_db_get_parameters_request() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ProtoWrapper::set_has_db_get_parameters_request() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ProtoWrapper::clear_has_db_get_parameters_request() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ProtoWrapper::clear_db_get_parameters_request() {
  if (db_get_parameters_request_ != NULL) db_get_parameters_request_->::upscaledb::DbGetParametersRequest::Clear();
  clear_has_db_get_parameters_request();
}
inline const ::upscaledb::DbGetParametersRequest& ProtoWrapper::db_get_parameters_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_get_parameters_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_get_parameters_request_ != NULL ? *db_get_parameters_request_ : *default_instance().db_get_parameters_request_;
#else
  return db_get_parameters_request_ != NULL ? *db_get_parameters_request_ : *default_instance_->db_get_parameters_request_;
#endif
}
inline ::upscaledb::DbGetParametersRequest* ProtoWrapper::mutable_db_get_parameters_request() {
  set_has_db_get_parameters_request();
  if (db_get_parameters_request_ == NULL) db_get_parameters_request_ = new ::upscaledb::DbGetParametersRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_get_parameters_request)
  return db_get_parameters_request_;
}
inline ::upscaledb::DbGetParametersRequest* ProtoWrapper::release_db_get_parameters_request() {
  clear_has_db_get_parameters_request();
  ::upscaledb::DbGetParametersRequest* temp = db_get_parameters_request_;
  db_get_parameters_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_get_parameters_request(::upscaledb::DbGetParametersRequest* db_get_parameters_request) {
  delete db_get_parameters_request_;
  db_get_parameters_request_ = db_get_parameters_request;
  if (db_get_parameters_request) {
    set_has_db_get_parameters_request();
  } else {
    clear_has_db_get_parameters_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_get_parameters_request)
}

// optional .upscaledb.DbGetParametersReply db_get_parameters_reply = 101;
inline bool ProtoWrapper::has_db_get_parameters_reply() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ProtoWrapper::set_has_db_get_parameters_reply() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ProtoWrapper::clear_has_db_get_parameters_reply() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ProtoWrapper::clear_db_get_parameters_reply() {
  if (db_get_parameters_reply_ != NULL) db_get_parameters_reply_->::upscaledb::DbGetParametersReply::Clear();
  clear_has_db_get_parameters_reply();
}
inline const ::upscaledb::DbGetParametersReply& ProtoWrapper::db_get_parameters_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_get_parameters_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_get_parameters_reply_ != NULL ? *db_get_parameters_reply_ : *default_instance().db_get_parameters_reply_;
#else
  return db_get_parameters_reply_ != NULL ? *db_get_parameters_reply_ : *default_instance_->db_get_parameters_reply_;
#endif
}
inline ::upscaledb::DbGetParametersReply* ProtoWrapper::mutable_db_get_parameters_reply() {
  set_has_db_get_parameters_reply();
  if (db_get_parameters_reply_ == NULL) db_get_parameters_reply_ = new ::upscaledb::DbGetParametersReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_get_parameters_reply)
  return db_get_parameters_reply_;
}
inline ::upscaledb::DbGetParametersReply* ProtoWrapper::release_db_get_parameters_reply() {
  clear_has_db_get_parameters_reply();
  ::upscaledb::DbGetParametersReply* temp = db_get_parameters_reply_;
  db_get_parameters_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_get_parameters_reply(::upscaledb::DbGetParametersReply* db_get_parameters_reply) {
  delete db_get_parameters_reply_;
  db_get_parameters_reply_ = db_get_parameters_reply;
  if (db_get_parameters_reply) {
    set_has_db_get_parameters_reply();
  } else {
    clear_has_db_get_parameters_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_get_parameters_reply)
}

// optional .upscaledb.TxnBeginRequest txn_begin_request = 120;
inline bool ProtoWrapper::has_txn_begin_request() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ProtoWrapper::set_has_txn_begin_request() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ProtoWrapper::clear_has_txn_begin_request() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ProtoWrapper::clear_txn_begin_request() {
  if (txn_begin_request_ != NULL) txn_begin_request_->::upscaledb::TxnBeginRequest::Clear();
  clear_has_txn_begin_request();
}
inline const ::upscaledb::TxnBeginRequest& ProtoWrapper::txn_begin_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.txn_begin_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return txn_begin_request_ != NULL ? *txn_begin_request_ : *default_instance().txn_begin_request_;
#else
  return txn_begin_request_ != NULL ? *txn_begin_request_ : *default_instance_->txn_begin_request_;
#endif
}
inline ::upscaledb::TxnBeginRequest* ProtoWrapper::mutable_txn_begin_request() {
  set_has_txn_begin_request();
  if (txn_begin_request_ == NULL) txn_begin_request_ = new ::upscaledb::TxnBeginRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.txn_begin_request)
  return txn_begin_request_;
}
inline ::upscaledb::TxnBeginRequest* ProtoWrapper::release_txn_begin_request() {
  clear_has_txn_begin_request();
  ::upscaledb::TxnBeginRequest* temp = txn_begin_request_;
  txn_begin_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_txn_begin_request(::upscaledb::TxnBeginRequest* txn_begin_request) {
  delete txn_begin_request_;
  txn_begin_request_ = txn_begin_request;
  if (txn_begin_request) {
    set_has_txn_begin_request();
  } else {
    clear_has_txn_begin_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.txn_begin_request)
}

// optional .upscaledb.TxnBeginReply txn_begin_reply = 121;
inline bool ProtoWrapper::has_txn_begin_reply() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ProtoWrapper::set_has_txn_begin_reply() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ProtoWrapper::clear_has_txn_begin_reply() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ProtoWrapper::clear_txn_begin_reply() {
  if (txn_begin_reply_ != NULL) txn_begin_reply_->::upscaledb::TxnBeginReply::Clear();
  clear_has_txn_begin_reply();
}
inline const ::upscaledb::TxnBeginReply& ProtoWrapper::txn_begin_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.txn_begin_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return txn_begin_reply_ != NULL ? *txn_begin_reply_ : *default_instance().txn_begin_reply_;
#else
  return txn_begin_reply_ != NULL ? *txn_begin_reply_ : *default_instance_->txn_begin_reply_;
#endif
}
inline ::upscaledb::TxnBeginReply* ProtoWrapper::mutable_txn_begin_reply() {
  set_has_txn_begin_reply();
  if (txn_begin_reply_ == NULL) txn_begin_reply_ = new ::upscaledb::TxnBeginReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.txn_begin_reply)
  return txn_begin_reply_;
}
inline ::upscaledb::TxnBeginReply* ProtoWrapper::release_txn_begin_reply() {
  clear_has_txn_begin_reply();
  ::upscaledb::TxnBeginReply* temp = txn_begin_reply_;
  txn_begin_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_txn_begin_reply(::upscaledb::TxnBeginReply* txn_begin_reply) {
  delete txn_begin_reply_;
  txn_begin_reply_ = txn_begin_reply;
  if (txn_begin_reply) {
    set_has_txn_begin_reply();
  } else {
    clear_has_txn_begin_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.txn_begin_reply)
}

// optional .upscaledb.TxnCommitRequest txn_commit_request = 130;
inline bool ProtoWrapper::has_txn_commit_request() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void ProtoWrapper::set_has_txn_commit_request() {
  _has_bits_[0] |= 0x02000000u;
}
inline void ProtoWrapper::clear_has_txn_commit_request() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void ProtoWrapper::clear_txn_commit_request() {
  if (txn_commit_request_ != NULL) txn_commit_request_->::upscaledb::TxnCommitRequest::Clear();
  clear_has_txn_commit_request();
}
inline const ::upscaledb::TxnCommitRequest& ProtoWrapper::txn_commit_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.txn_commit_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return txn_commit_request_ != NULL ? *txn_commit_request_ : *default_instance().txn_commit_request_;
#else
  return txn_commit_request_ != NULL ? *txn_commit_request_ : *default_instance_->txn_commit_request_;
#endif
}
inline ::upscaledb::TxnCommitRequest* ProtoWrapper::mutable_txn_commit_request() {
  set_has_txn_commit_request();
  if (txn_commit_request_ == NULL) txn_commit_request_ = new ::upscaledb::TxnCommitRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.txn_commit_request)
  return txn_commit_request_;
}
inline ::upscaledb::TxnCommitRequest* ProtoWrapper::release_txn_commit_request() {
  clear_has_txn_commit_request();
  ::upscaledb::TxnCommitRequest* temp = txn_commit_request_;
  txn_commit_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_txn_commit_request(::upscaledb::TxnCommitRequest* txn_commit_request) {
  delete txn_commit_request_;
  txn_commit_request_ = txn_commit_request;
  if (txn_commit_request) {
    set_has_txn_commit_request();
  } else {
    clear_has_txn_commit_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.txn_commit_request)
}

// optional .upscaledb.TxnCommitReply txn_commit_reply = 131;
inline bool ProtoWrapper::has_txn_commit_reply() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void ProtoWrapper::set_has_txn_commit_reply() {
  _has_bits_[0] |= 0x04000000u;
}
inline void ProtoWrapper::clear_has_txn_commit_reply() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void ProtoWrapper::clear_txn_commit_reply() {
  if (txn_commit_reply_ != NULL) txn_commit_reply_->::upscaledb::TxnCommitReply::Clear();
  clear_has_txn_commit_reply();
}
inline const ::upscaledb::TxnCommitReply& ProtoWrapper::txn_commit_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.txn_commit_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return txn_commit_reply_ != NULL ? *txn_commit_reply_ : *default_instance().txn_commit_reply_;
#else
  return txn_commit_reply_ != NULL ? *txn_commit_reply_ : *default_instance_->txn_commit_reply_;
#endif
}
inline ::upscaledb::TxnCommitReply* ProtoWrapper::mutable_txn_commit_reply() {
  set_has_txn_commit_reply();
  if (txn_commit_reply_ == NULL) txn_commit_reply_ = new ::upscaledb::TxnCommitReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.txn_commit_reply)
  return txn_commit_reply_;
}
inline ::upscaledb::TxnCommitReply* ProtoWrapper::release_txn_commit_reply() {
  clear_has_txn_commit_reply();
  ::upscaledb::TxnCommitReply* temp = txn_commit_reply_;
  txn_commit_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_txn_commit_reply(::upscaledb::TxnCommitReply* txn_commit_reply) {
  delete txn_commit_reply_;
  txn_commit_reply_ = txn_commit_reply;
  if (txn_commit_reply) {
    set_has_txn_commit_reply();
  } else {
    clear_has_txn_commit_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.txn_commit_reply)
}

// optional .upscaledb.TxnAbortRequest txn_abort_request = 140;
inline bool ProtoWrapper::has_txn_abort_request() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void ProtoWrapper::set_has_txn_abort_request() {
  _has_bits_[0] |= 0x08000000u;
}
inline void ProtoWrapper::clear_has_txn_abort_request() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void ProtoWrapper::clear_txn_abort_request() {
  if (txn_abort_request_ != NULL) txn_abort_request_->::upscaledb::TxnAbortRequest::Clear();
  clear_has_txn_abort_request();
}
inline const ::upscaledb::TxnAbortRequest& ProtoWrapper::txn_abort_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.txn_abort_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return txn_abort_request_ != NULL ? *txn_abort_request_ : *default_instance().txn_abort_request_;
#else
  return txn_abort_request_ != NULL ? *txn_abort_request_ : *default_instance_->txn_abort_request_;
#endif
}
inline ::upscaledb::TxnAbortRequest* ProtoWrapper::mutable_txn_abort_request() {
  set_has_txn_abort_request();
  if (txn_abort_request_ == NULL) txn_abort_request_ = new ::upscaledb::TxnAbortRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.txn_abort_request)
  return txn_abort_request_;
}
inline ::upscaledb::TxnAbortRequest* ProtoWrapper::release_txn_abort_request() {
  clear_has_txn_abort_request();
  ::upscaledb::TxnAbortRequest* temp = txn_abort_request_;
  txn_abort_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_txn_abort_request(::upscaledb::TxnAbortRequest* txn_abort_request) {
  delete txn_abort_request_;
  txn_abort_request_ = txn_abort_request;
  if (txn_abort_request) {
    set_has_txn_abort_request();
  } else {
    clear_has_txn_abort_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.txn_abort_request)
}

// optional .upscaledb.TxnAbortReply txn_abort_reply = 141;
inline bool ProtoWrapper::has_txn_abort_reply() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void ProtoWrapper::set_has_txn_abort_reply() {
  _has_bits_[0] |= 0x10000000u;
}
inline void ProtoWrapper::clear_has_txn_abort_reply() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void ProtoWrapper::clear_txn_abort_reply() {
  if (txn_abort_reply_ != NULL) txn_abort_reply_->::upscaledb::TxnAbortReply::Clear();
  clear_has_txn_abort_reply();
}
inline const ::upscaledb::TxnAbortReply& ProtoWrapper::txn_abort_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.txn_abort_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return txn_abort_reply_ != NULL ? *txn_abort_reply_ : *default_instance().txn_abort_reply_;
#else
  return txn_abort_reply_ != NULL ? *txn_abort_reply_ : *default_instance_->txn_abort_reply_;
#endif
}
inline ::upscaledb::TxnAbortReply* ProtoWrapper::mutable_txn_abort_reply() {
  set_has_txn_abort_reply();
  if (txn_abort_reply_ == NULL) txn_abort_reply_ = new ::upscaledb::TxnAbortReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.txn_abort_reply)
  return txn_abort_reply_;
}
inline ::upscaledb::TxnAbortReply* ProtoWrapper::release_txn_abort_reply() {
  clear_has_txn_abort_reply();
  ::upscaledb::TxnAbortReply* temp = txn_abort_reply_;
  txn_abort_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_txn_abort_reply(::upscaledb::TxnAbortReply* txn_abort_reply) {
  delete txn_abort_reply_;
  txn_abort_reply_ = txn_abort_reply;
  if (txn_abort_reply) {
    set_has_txn_abort_reply();
  } else {
    clear_has_txn_abort_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.txn_abort_reply)
}

// optional .upscaledb.DbCheckIntegrityRequest db_check_integrity_request = 150;
inline bool ProtoWrapper::has_db_check_integrity_request() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void ProtoWrapper::set_has_db_check_integrity_request() {
  _has_bits_[0] |= 0x20000000u;
}
inline void ProtoWrapper::clear_has_db_check_integrity_request() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void ProtoWrapper::clear_db_check_integrity_request() {
  if (db_check_integrity_request_ != NULL) db_check_integrity_request_->::upscaledb::DbCheckIntegrityRequest::Clear();
  clear_has_db_check_integrity_request();
}
inline const ::upscaledb::DbCheckIntegrityRequest& ProtoWrapper::db_check_integrity_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_check_integrity_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_check_integrity_request_ != NULL ? *db_check_integrity_request_ : *default_instance().db_check_integrity_request_;
#else
  return db_check_integrity_request_ != NULL ? *db_check_integrity_request_ : *default_instance_->db_check_integrity_request_;
#endif
}
inline ::upscaledb::DbCheckIntegrityRequest* ProtoWrapper::mutable_db_check_integrity_request() {
  set_has_db_check_integrity_request();
  if (db_check_integrity_request_ == NULL) db_check_integrity_request_ = new ::upscaledb::DbCheckIntegrityRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_check_integrity_request)
  return db_check_integrity_request_;
}
inline ::upscaledb::DbCheckIntegrityRequest* ProtoWrapper::release_db_check_integrity_request() {
  clear_has_db_check_integrity_request();
  ::upscaledb::DbCheckIntegrityRequest* temp = db_check_integrity_request_;
  db_check_integrity_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_check_integrity_request(::upscaledb::DbCheckIntegrityRequest* db_check_integrity_request) {
  delete db_check_integrity_request_;
  db_check_integrity_request_ = db_check_integrity_request;
  if (db_check_integrity_request) {
    set_has_db_check_integrity_request();
  } else {
    clear_has_db_check_integrity_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_check_integrity_request)
}

// optional .upscaledb.DbCheckIntegrityReply db_check_integrity_reply = 151;
inline bool ProtoWrapper::has_db_check_integrity_reply() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void ProtoWrapper::set_has_db_check_integrity_reply() {
  _has_bits_[0] |= 0x40000000u;
}
inline void ProtoWrapper::clear_has_db_check_integrity_reply() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void ProtoWrapper::clear_db_check_integrity_reply() {
  if (db_check_integrity_reply_ != NULL) db_check_integrity_reply_->::upscaledb::DbCheckIntegrityReply::Clear();
  clear_has_db_check_integrity_reply();
}
inline const ::upscaledb::DbCheckIntegrityReply& ProtoWrapper::db_check_integrity_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_check_integrity_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_check_integrity_reply_ != NULL ? *db_check_integrity_reply_ : *default_instance().db_check_integrity_reply_;
#else
  return db_check_integrity_reply_ != NULL ? *db_check_integrity_reply_ : *default_instance_->db_check_integrity_reply_;
#endif
}
inline ::upscaledb::DbCheckIntegrityReply* ProtoWrapper::mutable_db_check_integrity_reply() {
  set_has_db_check_integrity_reply();
  if (db_check_integrity_reply_ == NULL) db_check_integrity_reply_ = new ::upscaledb::DbCheckIntegrityReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_check_integrity_reply)
  return db_check_integrity_reply_;
}
inline ::upscaledb::DbCheckIntegrityReply* ProtoWrapper::release_db_check_integrity_reply() {
  clear_has_db_check_integrity_reply();
  ::upscaledb::DbCheckIntegrityReply* temp = db_check_integrity_reply_;
  db_check_integrity_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_check_integrity_reply(::upscaledb::DbCheckIntegrityReply* db_check_integrity_reply) {
  delete db_check_integrity_reply_;
  db_check_integrity_reply_ = db_check_integrity_reply;
  if (db_check_integrity_reply) {
    set_has_db_check_integrity_reply();
  } else {
    clear_has_db_check_integrity_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_check_integrity_reply)
}

// optional .upscaledb.DbCountRequest db_count_request = 160;
inline bool ProtoWrapper::has_db_count_request() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void ProtoWrapper::set_has_db_count_request() {
  _has_bits_[0] |= 0x80000000u;
}
inline void ProtoWrapper::clear_has_db_count_request() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void ProtoWrapper::clear_db_count_request() {
  if (db_count_request_ != NULL) db_count_request_->::upscaledb::DbCountRequest::Clear();
  clear_has_db_count_request();
}
inline const ::upscaledb::DbCountRequest& ProtoWrapper::db_count_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_count_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_count_request_ != NULL ? *db_count_request_ : *default_instance().db_count_request_;
#else
  return db_count_request_ != NULL ? *db_count_request_ : *default_instance_->db_count_request_;
#endif
}
inline ::upscaledb::DbCountRequest* ProtoWrapper::mutable_db_count_request() {
  set_has_db_count_request();
  if (db_count_request_ == NULL) db_count_request_ = new ::upscaledb::DbCountRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_count_request)
  return db_count_request_;
}
inline ::upscaledb::DbCountRequest* ProtoWrapper::release_db_count_request() {
  clear_has_db_count_request();
  ::upscaledb::DbCountRequest* temp = db_count_request_;
  db_count_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_count_request(::upscaledb::DbCountRequest* db_count_request) {
  delete db_count_request_;
  db_count_request_ = db_count_request;
  if (db_count_request) {
    set_has_db_count_request();
  } else {
    clear_has_db_count_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_count_request)
}

// optional .upscaledb.DbCountReply db_count_reply = 161;
inline bool ProtoWrapper::has_db_count_reply() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void ProtoWrapper::set_has_db_count_reply() {
  _has_bits_[1] |= 0x00000001u;
}
inline void ProtoWrapper::clear_has_db_count_reply() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void ProtoWrapper::clear_db_count_reply() {
  if (db_count_reply_ != NULL) db_count_reply_->::upscaledb::DbCountReply::Clear();
  clear_has_db_count_reply();
}
inline const ::upscaledb::DbCountReply& ProtoWrapper::db_count_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_count_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_count_reply_ != NULL ? *db_count_reply_ : *default_instance().db_count_reply_;
#else
  return db_count_reply_ != NULL ? *db_count_reply_ : *default_instance_->db_count_reply_;
#endif
}
inline ::upscaledb::DbCountReply* ProtoWrapper::mutable_db_count_reply() {
  set_has_db_count_reply();
  if (db_count_reply_ == NULL) db_count_reply_ = new ::upscaledb::DbCountReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_count_reply)
  return db_count_reply_;
}
inline ::upscaledb::DbCountReply* ProtoWrapper::release_db_count_reply() {
  clear_has_db_count_reply();
  ::upscaledb::DbCountReply* temp = db_count_reply_;
  db_count_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_count_reply(::upscaledb::DbCountReply* db_count_reply) {
  delete db_count_reply_;
  db_count_reply_ = db_count_reply;
  if (db_count_reply) {
    set_has_db_count_reply();
  } else {
    clear_has_db_count_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_count_reply)
}

// optional .upscaledb.DbInsertRequest db_insert_request = 170;
inline bool ProtoWrapper::has_db_insert_request() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void ProtoWrapper::set_has_db_insert_request() {
  _has_bits_[1] |= 0x00000002u;
}
inline void ProtoWrapper::clear_has_db_insert_request() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void ProtoWrapper::clear_db_insert_request() {
  if (db_insert_request_ != NULL) db_insert_request_->::upscaledb::DbInsertRequest::Clear();
  clear_has_db_insert_request();
}
inline const ::upscaledb::DbInsertRequest& ProtoWrapper::db_insert_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_insert_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_insert_request_ != NULL ? *db_insert_request_ : *default_instance().db_insert_request_;
#else
  return db_insert_request_ != NULL ? *db_insert_request_ : *default_instance_->db_insert_request_;
#endif
}
inline ::upscaledb::DbInsertRequest* ProtoWrapper::mutable_db_insert_request() {
  set_has_db_insert_request();
  if (db_insert_request_ == NULL) db_insert_request_ = new ::upscaledb::DbInsertRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_insert_request)
  return db_insert_request_;
}
inline ::upscaledb::DbInsertRequest* ProtoWrapper::release_db_insert_request() {
  clear_has_db_insert_request();
  ::upscaledb::DbInsertRequest* temp = db_insert_request_;
  db_insert_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_insert_request(::upscaledb::DbInsertRequest* db_insert_request) {
  delete db_insert_request_;
  db_insert_request_ = db_insert_request;
  if (db_insert_request) {
    set_has_db_insert_request();
  } else {
    clear_has_db_insert_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_insert_request)
}

// optional .upscaledb.DbInsertReply db_insert_reply = 171;
inline bool ProtoWrapper::has_db_insert_reply() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void ProtoWrapper::set_has_db_insert_reply() {
  _has_bits_[1] |= 0x00000004u;
}
inline void ProtoWrapper::clear_has_db_insert_reply() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void ProtoWrapper::clear_db_insert_reply() {
  if (db_insert_reply_ != NULL) db_insert_reply_->::upscaledb::DbInsertReply::Clear();
  clear_has_db_insert_reply();
}
inline const ::upscaledb::DbInsertReply& ProtoWrapper::db_insert_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_insert_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_insert_reply_ != NULL ? *db_insert_reply_ : *default_instance().db_insert_reply_;
#else
  return db_insert_reply_ != NULL ? *db_insert_reply_ : *default_instance_->db_insert_reply_;
#endif
}
inline ::upscaledb::DbInsertReply* ProtoWrapper::mutable_db_insert_reply() {
  set_has_db_insert_reply();
  if (db_insert_reply_ == NULL) db_insert_reply_ = new ::upscaledb::DbInsertReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_insert_reply)
  return db_insert_reply_;
}
inline ::upscaledb::DbInsertReply* ProtoWrapper::release_db_insert_reply() {
  clear_has_db_insert_reply();
  ::upscaledb::DbInsertReply* temp = db_insert_reply_;
  db_insert_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_insert_reply(::upscaledb::DbInsertReply* db_insert_reply) {
  delete db_insert_reply_;
  db_insert_reply_ = db_insert_reply;
  if (db_insert_reply) {
    set_has_db_insert_reply();
  } else {
    clear_has_db_insert_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_insert_reply)
}

// optional .upscaledb.DbEraseRequest db_erase_request = 180;
inline bool ProtoWrapper::has_db_erase_request() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void ProtoWrapper::set_has_db_erase_request() {
  _has_bits_[1] |= 0x00000008u;
}
inline void ProtoWrapper::clear_has_db_erase_request() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void ProtoWrapper::clear_db_erase_request() {
  if (db_erase_request_ != NULL) db_erase_request_->::upscaledb::DbEraseRequest::Clear();
  clear_has_db_erase_request();
}
inline const ::upscaledb::DbEraseRequest& ProtoWrapper::db_erase_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_erase_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_erase_request_ != NULL ? *db_erase_request_ : *default_instance().db_erase_request_;
#else
  return db_erase_request_ != NULL ? *db_erase_request_ : *default_instance_->db_erase_request_;
#endif
}
inline ::upscaledb::DbEraseRequest* ProtoWrapper::mutable_db_erase_request() {
  set_has_db_erase_request();
  if (db_erase_request_ == NULL) db_erase_request_ = new ::upscaledb::DbEraseRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_erase_request)
  return db_erase_request_;
}
inline ::upscaledb::DbEraseRequest* ProtoWrapper::release_db_erase_request() {
  clear_has_db_erase_request();
  ::upscaledb::DbEraseRequest* temp = db_erase_request_;
  db_erase_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_erase_request(::upscaledb::DbEraseRequest* db_erase_request) {
  delete db_erase_request_;
  db_erase_request_ = db_erase_request;
  if (db_erase_request) {
    set_has_db_erase_request();
  } else {
    clear_has_db_erase_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_erase_request)
}

// optional .upscaledb.DbEraseReply db_erase_reply = 181;
inline bool ProtoWrapper::has_db_erase_reply() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void ProtoWrapper::set_has_db_erase_reply() {
  _has_bits_[1] |= 0x00000010u;
}
inline void ProtoWrapper::clear_has_db_erase_reply() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void ProtoWrapper::clear_db_erase_reply() {
  if (db_erase_reply_ != NULL) db_erase_reply_->::upscaledb::DbEraseReply::Clear();
  clear_has_db_erase_reply();
}
inline const ::upscaledb::DbEraseReply& ProtoWrapper::db_erase_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_erase_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_erase_reply_ != NULL ? *db_erase_reply_ : *default_instance().db_erase_reply_;
#else
  return db_erase_reply_ != NULL ? *db_erase_reply_ : *default_instance_->db_erase_reply_;
#endif
}
inline ::upscaledb::DbEraseReply* ProtoWrapper::mutable_db_erase_reply() {
  set_has_db_erase_reply();
  if (db_erase_reply_ == NULL) db_erase_reply_ = new ::upscaledb::DbEraseReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_erase_reply)
  return db_erase_reply_;
}
inline ::upscaledb::DbEraseReply* ProtoWrapper::release_db_erase_reply() {
  clear_has_db_erase_reply();
  ::upscaledb::DbEraseReply* temp = db_erase_reply_;
  db_erase_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_erase_reply(::upscaledb::DbEraseReply* db_erase_reply) {
  delete db_erase_reply_;
  db_erase_reply_ = db_erase_reply;
  if (db_erase_reply) {
    set_has_db_erase_reply();
  } else {
    clear_has_db_erase_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_erase_reply)
}

// optional .upscaledb.DbFindRequest db_find_request = 190;
inline bool ProtoWrapper::has_db_find_request() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void ProtoWrapper::set_has_db_find_request() {
  _has_bits_[1] |= 0x00000020u;
}
inline void ProtoWrapper::clear_has_db_find_request() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void ProtoWrapper::clear_db_find_request() {
  if (db_find_request_ != NULL) db_find_request_->::upscaledb::DbFindRequest::Clear();
  clear_has_db_find_request();
}
inline const ::upscaledb::DbFindRequest& ProtoWrapper::db_find_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_find_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_find_request_ != NULL ? *db_find_request_ : *default_instance().db_find_request_;
#else
  return db_find_request_ != NULL ? *db_find_request_ : *default_instance_->db_find_request_;
#endif
}
inline ::upscaledb::DbFindRequest* ProtoWrapper::mutable_db_find_request() {
  set_has_db_find_request();
  if (db_find_request_ == NULL) db_find_request_ = new ::upscaledb::DbFindRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_find_request)
  return db_find_request_;
}
inline ::upscaledb::DbFindRequest* ProtoWrapper::release_db_find_request() {
  clear_has_db_find_request();
  ::upscaledb::DbFindRequest* temp = db_find_request_;
  db_find_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_find_request(::upscaledb::DbFindRequest* db_find_request) {
  delete db_find_request_;
  db_find_request_ = db_find_request;
  if (db_find_request) {
    set_has_db_find_request();
  } else {
    clear_has_db_find_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_find_request)
}

// optional .upscaledb.DbFindReply db_find_reply = 191;
inline bool ProtoWrapper::has_db_find_reply() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void ProtoWrapper::set_has_db_find_reply() {
  _has_bits_[1] |= 0x00000040u;
}
inline void ProtoWrapper::clear_has_db_find_reply() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void ProtoWrapper::clear_db_find_reply() {
  if (db_find_reply_ != NULL) db_find_reply_->::upscaledb::DbFindReply::Clear();
  clear_has_db_find_reply();
}
inline const ::upscaledb::DbFindReply& ProtoWrapper::db_find_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.db_find_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return db_find_reply_ != NULL ? *db_find_reply_ : *default_instance().db_find_reply_;
#else
  return db_find_reply_ != NULL ? *db_find_reply_ : *default_instance_->db_find_reply_;
#endif
}
inline ::upscaledb::DbFindReply* ProtoWrapper::mutable_db_find_reply() {
  set_has_db_find_reply();
  if (db_find_reply_ == NULL) db_find_reply_ = new ::upscaledb::DbFindReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.db_find_reply)
  return db_find_reply_;
}
inline ::upscaledb::DbFindReply* ProtoWrapper::release_db_find_reply() {
  clear_has_db_find_reply();
  ::upscaledb::DbFindReply* temp = db_find_reply_;
  db_find_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_db_find_reply(::upscaledb::DbFindReply* db_find_reply) {
  delete db_find_reply_;
  db_find_reply_ = db_find_reply;
  if (db_find_reply) {
    set_has_db_find_reply();
  } else {
    clear_has_db_find_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.db_find_reply)
}

// optional .upscaledb.CursorCreateRequest cursor_create_request = 200;
inline bool ProtoWrapper::has_cursor_create_request() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void ProtoWrapper::set_has_cursor_create_request() {
  _has_bits_[1] |= 0x00000080u;
}
inline void ProtoWrapper::clear_has_cursor_create_request() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void ProtoWrapper::clear_cursor_create_request() {
  if (cursor_create_request_ != NULL) cursor_create_request_->::upscaledb::CursorCreateRequest::Clear();
  clear_has_cursor_create_request();
}
inline const ::upscaledb::CursorCreateRequest& ProtoWrapper::cursor_create_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_create_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_create_request_ != NULL ? *cursor_create_request_ : *default_instance().cursor_create_request_;
#else
  return cursor_create_request_ != NULL ? *cursor_create_request_ : *default_instance_->cursor_create_request_;
#endif
}
inline ::upscaledb::CursorCreateRequest* ProtoWrapper::mutable_cursor_create_request() {
  set_has_cursor_create_request();
  if (cursor_create_request_ == NULL) cursor_create_request_ = new ::upscaledb::CursorCreateRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_create_request)
  return cursor_create_request_;
}
inline ::upscaledb::CursorCreateRequest* ProtoWrapper::release_cursor_create_request() {
  clear_has_cursor_create_request();
  ::upscaledb::CursorCreateRequest* temp = cursor_create_request_;
  cursor_create_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_create_request(::upscaledb::CursorCreateRequest* cursor_create_request) {
  delete cursor_create_request_;
  cursor_create_request_ = cursor_create_request;
  if (cursor_create_request) {
    set_has_cursor_create_request();
  } else {
    clear_has_cursor_create_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_create_request)
}

// optional .upscaledb.CursorCreateReply cursor_create_reply = 201;
inline bool ProtoWrapper::has_cursor_create_reply() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void ProtoWrapper::set_has_cursor_create_reply() {
  _has_bits_[1] |= 0x00000100u;
}
inline void ProtoWrapper::clear_has_cursor_create_reply() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void ProtoWrapper::clear_cursor_create_reply() {
  if (cursor_create_reply_ != NULL) cursor_create_reply_->::upscaledb::CursorCreateReply::Clear();
  clear_has_cursor_create_reply();
}
inline const ::upscaledb::CursorCreateReply& ProtoWrapper::cursor_create_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_create_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_create_reply_ != NULL ? *cursor_create_reply_ : *default_instance().cursor_create_reply_;
#else
  return cursor_create_reply_ != NULL ? *cursor_create_reply_ : *default_instance_->cursor_create_reply_;
#endif
}
inline ::upscaledb::CursorCreateReply* ProtoWrapper::mutable_cursor_create_reply() {
  set_has_cursor_create_reply();
  if (cursor_create_reply_ == NULL) cursor_create_reply_ = new ::upscaledb::CursorCreateReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_create_reply)
  return cursor_create_reply_;
}
inline ::upscaledb::CursorCreateReply* ProtoWrapper::release_cursor_create_reply() {
  clear_has_cursor_create_reply();
  ::upscaledb::CursorCreateReply* temp = cursor_create_reply_;
  cursor_create_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_create_reply(::upscaledb::CursorCreateReply* cursor_create_reply) {
  delete cursor_create_reply_;
  cursor_create_reply_ = cursor_create_reply;
  if (cursor_create_reply) {
    set_has_cursor_create_reply();
  } else {
    clear_has_cursor_create_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_create_reply)
}

// optional .upscaledb.CursorCloneRequest cursor_clone_request = 210;
inline bool ProtoWrapper::has_cursor_clone_request() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void ProtoWrapper::set_has_cursor_clone_request() {
  _has_bits_[1] |= 0x00000200u;
}
inline void ProtoWrapper::clear_has_cursor_clone_request() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void ProtoWrapper::clear_cursor_clone_request() {
  if (cursor_clone_request_ != NULL) cursor_clone_request_->::upscaledb::CursorCloneRequest::Clear();
  clear_has_cursor_clone_request();
}
inline const ::upscaledb::CursorCloneRequest& ProtoWrapper::cursor_clone_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_clone_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_clone_request_ != NULL ? *cursor_clone_request_ : *default_instance().cursor_clone_request_;
#else
  return cursor_clone_request_ != NULL ? *cursor_clone_request_ : *default_instance_->cursor_clone_request_;
#endif
}
inline ::upscaledb::CursorCloneRequest* ProtoWrapper::mutable_cursor_clone_request() {
  set_has_cursor_clone_request();
  if (cursor_clone_request_ == NULL) cursor_clone_request_ = new ::upscaledb::CursorCloneRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_clone_request)
  return cursor_clone_request_;
}
inline ::upscaledb::CursorCloneRequest* ProtoWrapper::release_cursor_clone_request() {
  clear_has_cursor_clone_request();
  ::upscaledb::CursorCloneRequest* temp = cursor_clone_request_;
  cursor_clone_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_clone_request(::upscaledb::CursorCloneRequest* cursor_clone_request) {
  delete cursor_clone_request_;
  cursor_clone_request_ = cursor_clone_request;
  if (cursor_clone_request) {
    set_has_cursor_clone_request();
  } else {
    clear_has_cursor_clone_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_clone_request)
}

// optional .upscaledb.CursorCloneReply cursor_clone_reply = 211;
inline bool ProtoWrapper::has_cursor_clone_reply() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void ProtoWrapper::set_has_cursor_clone_reply() {
  _has_bits_[1] |= 0x00000400u;
}
inline void ProtoWrapper::clear_has_cursor_clone_reply() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void ProtoWrapper::clear_cursor_clone_reply() {
  if (cursor_clone_reply_ != NULL) cursor_clone_reply_->::upscaledb::CursorCloneReply::Clear();
  clear_has_cursor_clone_reply();
}
inline const ::upscaledb::CursorCloneReply& ProtoWrapper::cursor_clone_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_clone_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_clone_reply_ != NULL ? *cursor_clone_reply_ : *default_instance().cursor_clone_reply_;
#else
  return cursor_clone_reply_ != NULL ? *cursor_clone_reply_ : *default_instance_->cursor_clone_reply_;
#endif
}
inline ::upscaledb::CursorCloneReply* ProtoWrapper::mutable_cursor_clone_reply() {
  set_has_cursor_clone_reply();
  if (cursor_clone_reply_ == NULL) cursor_clone_reply_ = new ::upscaledb::CursorCloneReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_clone_reply)
  return cursor_clone_reply_;
}
inline ::upscaledb::CursorCloneReply* ProtoWrapper::release_cursor_clone_reply() {
  clear_has_cursor_clone_reply();
  ::upscaledb::CursorCloneReply* temp = cursor_clone_reply_;
  cursor_clone_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_clone_reply(::upscaledb::CursorCloneReply* cursor_clone_reply) {
  delete cursor_clone_reply_;
  cursor_clone_reply_ = cursor_clone_reply;
  if (cursor_clone_reply) {
    set_has_cursor_clone_reply();
  } else {
    clear_has_cursor_clone_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_clone_reply)
}

// optional .upscaledb.CursorCloseRequest cursor_close_request = 220;
inline bool ProtoWrapper::has_cursor_close_request() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void ProtoWrapper::set_has_cursor_close_request() {
  _has_bits_[1] |= 0x00000800u;
}
inline void ProtoWrapper::clear_has_cursor_close_request() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void ProtoWrapper::clear_cursor_close_request() {
  if (cursor_close_request_ != NULL) cursor_close_request_->::upscaledb::CursorCloseRequest::Clear();
  clear_has_cursor_close_request();
}
inline const ::upscaledb::CursorCloseRequest& ProtoWrapper::cursor_close_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_close_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_close_request_ != NULL ? *cursor_close_request_ : *default_instance().cursor_close_request_;
#else
  return cursor_close_request_ != NULL ? *cursor_close_request_ : *default_instance_->cursor_close_request_;
#endif
}
inline ::upscaledb::CursorCloseRequest* ProtoWrapper::mutable_cursor_close_request() {
  set_has_cursor_close_request();
  if (cursor_close_request_ == NULL) cursor_close_request_ = new ::upscaledb::CursorCloseRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_close_request)
  return cursor_close_request_;
}
inline ::upscaledb::CursorCloseRequest* ProtoWrapper::release_cursor_close_request() {
  clear_has_cursor_close_request();
  ::upscaledb::CursorCloseRequest* temp = cursor_close_request_;
  cursor_close_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_close_request(::upscaledb::CursorCloseRequest* cursor_close_request) {
  delete cursor_close_request_;
  cursor_close_request_ = cursor_close_request;
  if (cursor_close_request) {
    set_has_cursor_close_request();
  } else {
    clear_has_cursor_close_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_close_request)
}

// optional .upscaledb.CursorCloseReply cursor_close_reply = 221;
inline bool ProtoWrapper::has_cursor_close_reply() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_close_reply() {
  _has_bits_[1] |= 0x00001000u;
}
inline void ProtoWrapper::clear_has_cursor_close_reply() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void ProtoWrapper::clear_cursor_close_reply() {
  if (cursor_close_reply_ != NULL) cursor_close_reply_->::upscaledb::CursorCloseReply::Clear();
  clear_has_cursor_close_reply();
}
inline const ::upscaledb::CursorCloseReply& ProtoWrapper::cursor_close_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_close_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_close_reply_ != NULL ? *cursor_close_reply_ : *default_instance().cursor_close_reply_;
#else
  return cursor_close_reply_ != NULL ? *cursor_close_reply_ : *default_instance_->cursor_close_reply_;
#endif
}
inline ::upscaledb::CursorCloseReply* ProtoWrapper::mutable_cursor_close_reply() {
  set_has_cursor_close_reply();
  if (cursor_close_reply_ == NULL) cursor_close_reply_ = new ::upscaledb::CursorCloseReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_close_reply)
  return cursor_close_reply_;
}
inline ::upscaledb::CursorCloseReply* ProtoWrapper::release_cursor_close_reply() {
  clear_has_cursor_close_reply();
  ::upscaledb::CursorCloseReply* temp = cursor_close_reply_;
  cursor_close_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_close_reply(::upscaledb::CursorCloseReply* cursor_close_reply) {
  delete cursor_close_reply_;
  cursor_close_reply_ = cursor_close_reply;
  if (cursor_close_reply) {
    set_has_cursor_close_reply();
  } else {
    clear_has_cursor_close_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_close_reply)
}

// optional .upscaledb.CursorInsertRequest cursor_insert_request = 230;
inline bool ProtoWrapper::has_cursor_insert_request() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_insert_request() {
  _has_bits_[1] |= 0x00002000u;
}
inline void ProtoWrapper::clear_has_cursor_insert_request() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void ProtoWrapper::clear_cursor_insert_request() {
  if (cursor_insert_request_ != NULL) cursor_insert_request_->::upscaledb::CursorInsertRequest::Clear();
  clear_has_cursor_insert_request();
}
inline const ::upscaledb::CursorInsertRequest& ProtoWrapper::cursor_insert_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_insert_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_insert_request_ != NULL ? *cursor_insert_request_ : *default_instance().cursor_insert_request_;
#else
  return cursor_insert_request_ != NULL ? *cursor_insert_request_ : *default_instance_->cursor_insert_request_;
#endif
}
inline ::upscaledb::CursorInsertRequest* ProtoWrapper::mutable_cursor_insert_request() {
  set_has_cursor_insert_request();
  if (cursor_insert_request_ == NULL) cursor_insert_request_ = new ::upscaledb::CursorInsertRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_insert_request)
  return cursor_insert_request_;
}
inline ::upscaledb::CursorInsertRequest* ProtoWrapper::release_cursor_insert_request() {
  clear_has_cursor_insert_request();
  ::upscaledb::CursorInsertRequest* temp = cursor_insert_request_;
  cursor_insert_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_insert_request(::upscaledb::CursorInsertRequest* cursor_insert_request) {
  delete cursor_insert_request_;
  cursor_insert_request_ = cursor_insert_request;
  if (cursor_insert_request) {
    set_has_cursor_insert_request();
  } else {
    clear_has_cursor_insert_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_insert_request)
}

// optional .upscaledb.CursorInsertReply cursor_insert_reply = 231;
inline bool ProtoWrapper::has_cursor_insert_reply() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_insert_reply() {
  _has_bits_[1] |= 0x00004000u;
}
inline void ProtoWrapper::clear_has_cursor_insert_reply() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void ProtoWrapper::clear_cursor_insert_reply() {
  if (cursor_insert_reply_ != NULL) cursor_insert_reply_->::upscaledb::CursorInsertReply::Clear();
  clear_has_cursor_insert_reply();
}
inline const ::upscaledb::CursorInsertReply& ProtoWrapper::cursor_insert_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_insert_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_insert_reply_ != NULL ? *cursor_insert_reply_ : *default_instance().cursor_insert_reply_;
#else
  return cursor_insert_reply_ != NULL ? *cursor_insert_reply_ : *default_instance_->cursor_insert_reply_;
#endif
}
inline ::upscaledb::CursorInsertReply* ProtoWrapper::mutable_cursor_insert_reply() {
  set_has_cursor_insert_reply();
  if (cursor_insert_reply_ == NULL) cursor_insert_reply_ = new ::upscaledb::CursorInsertReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_insert_reply)
  return cursor_insert_reply_;
}
inline ::upscaledb::CursorInsertReply* ProtoWrapper::release_cursor_insert_reply() {
  clear_has_cursor_insert_reply();
  ::upscaledb::CursorInsertReply* temp = cursor_insert_reply_;
  cursor_insert_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_insert_reply(::upscaledb::CursorInsertReply* cursor_insert_reply) {
  delete cursor_insert_reply_;
  cursor_insert_reply_ = cursor_insert_reply;
  if (cursor_insert_reply) {
    set_has_cursor_insert_reply();
  } else {
    clear_has_cursor_insert_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_insert_reply)
}

// optional .upscaledb.CursorEraseRequest cursor_erase_request = 240;
inline bool ProtoWrapper::has_cursor_erase_request() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_erase_request() {
  _has_bits_[1] |= 0x00008000u;
}
inline void ProtoWrapper::clear_has_cursor_erase_request() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void ProtoWrapper::clear_cursor_erase_request() {
  if (cursor_erase_request_ != NULL) cursor_erase_request_->::upscaledb::CursorEraseRequest::Clear();
  clear_has_cursor_erase_request();
}
inline const ::upscaledb::CursorEraseRequest& ProtoWrapper::cursor_erase_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_erase_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_erase_request_ != NULL ? *cursor_erase_request_ : *default_instance().cursor_erase_request_;
#else
  return cursor_erase_request_ != NULL ? *cursor_erase_request_ : *default_instance_->cursor_erase_request_;
#endif
}
inline ::upscaledb::CursorEraseRequest* ProtoWrapper::mutable_cursor_erase_request() {
  set_has_cursor_erase_request();
  if (cursor_erase_request_ == NULL) cursor_erase_request_ = new ::upscaledb::CursorEraseRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_erase_request)
  return cursor_erase_request_;
}
inline ::upscaledb::CursorEraseRequest* ProtoWrapper::release_cursor_erase_request() {
  clear_has_cursor_erase_request();
  ::upscaledb::CursorEraseRequest* temp = cursor_erase_request_;
  cursor_erase_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_erase_request(::upscaledb::CursorEraseRequest* cursor_erase_request) {
  delete cursor_erase_request_;
  cursor_erase_request_ = cursor_erase_request;
  if (cursor_erase_request) {
    set_has_cursor_erase_request();
  } else {
    clear_has_cursor_erase_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_erase_request)
}

// optional .upscaledb.CursorEraseReply cursor_erase_reply = 241;
inline bool ProtoWrapper::has_cursor_erase_reply() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_erase_reply() {
  _has_bits_[1] |= 0x00010000u;
}
inline void ProtoWrapper::clear_has_cursor_erase_reply() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void ProtoWrapper::clear_cursor_erase_reply() {
  if (cursor_erase_reply_ != NULL) cursor_erase_reply_->::upscaledb::CursorEraseReply::Clear();
  clear_has_cursor_erase_reply();
}
inline const ::upscaledb::CursorEraseReply& ProtoWrapper::cursor_erase_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_erase_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_erase_reply_ != NULL ? *cursor_erase_reply_ : *default_instance().cursor_erase_reply_;
#else
  return cursor_erase_reply_ != NULL ? *cursor_erase_reply_ : *default_instance_->cursor_erase_reply_;
#endif
}
inline ::upscaledb::CursorEraseReply* ProtoWrapper::mutable_cursor_erase_reply() {
  set_has_cursor_erase_reply();
  if (cursor_erase_reply_ == NULL) cursor_erase_reply_ = new ::upscaledb::CursorEraseReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_erase_reply)
  return cursor_erase_reply_;
}
inline ::upscaledb::CursorEraseReply* ProtoWrapper::release_cursor_erase_reply() {
  clear_has_cursor_erase_reply();
  ::upscaledb::CursorEraseReply* temp = cursor_erase_reply_;
  cursor_erase_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_erase_reply(::upscaledb::CursorEraseReply* cursor_erase_reply) {
  delete cursor_erase_reply_;
  cursor_erase_reply_ = cursor_erase_reply;
  if (cursor_erase_reply) {
    set_has_cursor_erase_reply();
  } else {
    clear_has_cursor_erase_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_erase_reply)
}

// optional .upscaledb.CursorGetRecordCountRequest cursor_get_record_count_request = 260;
inline bool ProtoWrapper::has_cursor_get_record_count_request() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_get_record_count_request() {
  _has_bits_[1] |= 0x00020000u;
}
inline void ProtoWrapper::clear_has_cursor_get_record_count_request() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void ProtoWrapper::clear_cursor_get_record_count_request() {
  if (cursor_get_record_count_request_ != NULL) cursor_get_record_count_request_->::upscaledb::CursorGetRecordCountRequest::Clear();
  clear_has_cursor_get_record_count_request();
}
inline const ::upscaledb::CursorGetRecordCountRequest& ProtoWrapper::cursor_get_record_count_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_get_record_count_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_get_record_count_request_ != NULL ? *cursor_get_record_count_request_ : *default_instance().cursor_get_record_count_request_;
#else
  return cursor_get_record_count_request_ != NULL ? *cursor_get_record_count_request_ : *default_instance_->cursor_get_record_count_request_;
#endif
}
inline ::upscaledb::CursorGetRecordCountRequest* ProtoWrapper::mutable_cursor_get_record_count_request() {
  set_has_cursor_get_record_count_request();
  if (cursor_get_record_count_request_ == NULL) cursor_get_record_count_request_ = new ::upscaledb::CursorGetRecordCountRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_get_record_count_request)
  return cursor_get_record_count_request_;
}
inline ::upscaledb::CursorGetRecordCountRequest* ProtoWrapper::release_cursor_get_record_count_request() {
  clear_has_cursor_get_record_count_request();
  ::upscaledb::CursorGetRecordCountRequest* temp = cursor_get_record_count_request_;
  cursor_get_record_count_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_get_record_count_request(::upscaledb::CursorGetRecordCountRequest* cursor_get_record_count_request) {
  delete cursor_get_record_count_request_;
  cursor_get_record_count_request_ = cursor_get_record_count_request;
  if (cursor_get_record_count_request) {
    set_has_cursor_get_record_count_request();
  } else {
    clear_has_cursor_get_record_count_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_get_record_count_request)
}

// optional .upscaledb.CursorGetRecordCountReply cursor_get_record_count_reply = 261;
inline bool ProtoWrapper::has_cursor_get_record_count_reply() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_get_record_count_reply() {
  _has_bits_[1] |= 0x00040000u;
}
inline void ProtoWrapper::clear_has_cursor_get_record_count_reply() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void ProtoWrapper::clear_cursor_get_record_count_reply() {
  if (cursor_get_record_count_reply_ != NULL) cursor_get_record_count_reply_->::upscaledb::CursorGetRecordCountReply::Clear();
  clear_has_cursor_get_record_count_reply();
}
inline const ::upscaledb::CursorGetRecordCountReply& ProtoWrapper::cursor_get_record_count_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_get_record_count_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_get_record_count_reply_ != NULL ? *cursor_get_record_count_reply_ : *default_instance().cursor_get_record_count_reply_;
#else
  return cursor_get_record_count_reply_ != NULL ? *cursor_get_record_count_reply_ : *default_instance_->cursor_get_record_count_reply_;
#endif
}
inline ::upscaledb::CursorGetRecordCountReply* ProtoWrapper::mutable_cursor_get_record_count_reply() {
  set_has_cursor_get_record_count_reply();
  if (cursor_get_record_count_reply_ == NULL) cursor_get_record_count_reply_ = new ::upscaledb::CursorGetRecordCountReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_get_record_count_reply)
  return cursor_get_record_count_reply_;
}
inline ::upscaledb::CursorGetRecordCountReply* ProtoWrapper::release_cursor_get_record_count_reply() {
  clear_has_cursor_get_record_count_reply();
  ::upscaledb::CursorGetRecordCountReply* temp = cursor_get_record_count_reply_;
  cursor_get_record_count_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_get_record_count_reply(::upscaledb::CursorGetRecordCountReply* cursor_get_record_count_reply) {
  delete cursor_get_record_count_reply_;
  cursor_get_record_count_reply_ = cursor_get_record_count_reply;
  if (cursor_get_record_count_reply) {
    set_has_cursor_get_record_count_reply();
  } else {
    clear_has_cursor_get_record_count_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_get_record_count_reply)
}

// optional .upscaledb.CursorGetDuplicatePositionRequest cursor_get_duplicate_position_request = 262;
inline bool ProtoWrapper::has_cursor_get_duplicate_position_request() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_get_duplicate_position_request() {
  _has_bits_[1] |= 0x00080000u;
}
inline void ProtoWrapper::clear_has_cursor_get_duplicate_position_request() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void ProtoWrapper::clear_cursor_get_duplicate_position_request() {
  if (cursor_get_duplicate_position_request_ != NULL) cursor_get_duplicate_position_request_->::upscaledb::CursorGetDuplicatePositionRequest::Clear();
  clear_has_cursor_get_duplicate_position_request();
}
inline const ::upscaledb::CursorGetDuplicatePositionRequest& ProtoWrapper::cursor_get_duplicate_position_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_get_duplicate_position_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_get_duplicate_position_request_ != NULL ? *cursor_get_duplicate_position_request_ : *default_instance().cursor_get_duplicate_position_request_;
#else
  return cursor_get_duplicate_position_request_ != NULL ? *cursor_get_duplicate_position_request_ : *default_instance_->cursor_get_duplicate_position_request_;
#endif
}
inline ::upscaledb::CursorGetDuplicatePositionRequest* ProtoWrapper::mutable_cursor_get_duplicate_position_request() {
  set_has_cursor_get_duplicate_position_request();
  if (cursor_get_duplicate_position_request_ == NULL) cursor_get_duplicate_position_request_ = new ::upscaledb::CursorGetDuplicatePositionRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_get_duplicate_position_request)
  return cursor_get_duplicate_position_request_;
}
inline ::upscaledb::CursorGetDuplicatePositionRequest* ProtoWrapper::release_cursor_get_duplicate_position_request() {
  clear_has_cursor_get_duplicate_position_request();
  ::upscaledb::CursorGetDuplicatePositionRequest* temp = cursor_get_duplicate_position_request_;
  cursor_get_duplicate_position_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_get_duplicate_position_request(::upscaledb::CursorGetDuplicatePositionRequest* cursor_get_duplicate_position_request) {
  delete cursor_get_duplicate_position_request_;
  cursor_get_duplicate_position_request_ = cursor_get_duplicate_position_request;
  if (cursor_get_duplicate_position_request) {
    set_has_cursor_get_duplicate_position_request();
  } else {
    clear_has_cursor_get_duplicate_position_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_get_duplicate_position_request)
}

// optional .upscaledb.CursorGetDuplicatePositionReply cursor_get_duplicate_position_reply = 263;
inline bool ProtoWrapper::has_cursor_get_duplicate_position_reply() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_get_duplicate_position_reply() {
  _has_bits_[1] |= 0x00100000u;
}
inline void ProtoWrapper::clear_has_cursor_get_duplicate_position_reply() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void ProtoWrapper::clear_cursor_get_duplicate_position_reply() {
  if (cursor_get_duplicate_position_reply_ != NULL) cursor_get_duplicate_position_reply_->::upscaledb::CursorGetDuplicatePositionReply::Clear();
  clear_has_cursor_get_duplicate_position_reply();
}
inline const ::upscaledb::CursorGetDuplicatePositionReply& ProtoWrapper::cursor_get_duplicate_position_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_get_duplicate_position_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_get_duplicate_position_reply_ != NULL ? *cursor_get_duplicate_position_reply_ : *default_instance().cursor_get_duplicate_position_reply_;
#else
  return cursor_get_duplicate_position_reply_ != NULL ? *cursor_get_duplicate_position_reply_ : *default_instance_->cursor_get_duplicate_position_reply_;
#endif
}
inline ::upscaledb::CursorGetDuplicatePositionReply* ProtoWrapper::mutable_cursor_get_duplicate_position_reply() {
  set_has_cursor_get_duplicate_position_reply();
  if (cursor_get_duplicate_position_reply_ == NULL) cursor_get_duplicate_position_reply_ = new ::upscaledb::CursorGetDuplicatePositionReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_get_duplicate_position_reply)
  return cursor_get_duplicate_position_reply_;
}
inline ::upscaledb::CursorGetDuplicatePositionReply* ProtoWrapper::release_cursor_get_duplicate_position_reply() {
  clear_has_cursor_get_duplicate_position_reply();
  ::upscaledb::CursorGetDuplicatePositionReply* temp = cursor_get_duplicate_position_reply_;
  cursor_get_duplicate_position_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_get_duplicate_position_reply(::upscaledb::CursorGetDuplicatePositionReply* cursor_get_duplicate_position_reply) {
  delete cursor_get_duplicate_position_reply_;
  cursor_get_duplicate_position_reply_ = cursor_get_duplicate_position_reply;
  if (cursor_get_duplicate_position_reply) {
    set_has_cursor_get_duplicate_position_reply();
  } else {
    clear_has_cursor_get_duplicate_position_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_get_duplicate_position_reply)
}

// optional .upscaledb.CursorGetRecordSizeRequest cursor_get_record_size_request = 264;
inline bool ProtoWrapper::has_cursor_get_record_size_request() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_get_record_size_request() {
  _has_bits_[1] |= 0x00200000u;
}
inline void ProtoWrapper::clear_has_cursor_get_record_size_request() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void ProtoWrapper::clear_cursor_get_record_size_request() {
  if (cursor_get_record_size_request_ != NULL) cursor_get_record_size_request_->::upscaledb::CursorGetRecordSizeRequest::Clear();
  clear_has_cursor_get_record_size_request();
}
inline const ::upscaledb::CursorGetRecordSizeRequest& ProtoWrapper::cursor_get_record_size_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_get_record_size_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_get_record_size_request_ != NULL ? *cursor_get_record_size_request_ : *default_instance().cursor_get_record_size_request_;
#else
  return cursor_get_record_size_request_ != NULL ? *cursor_get_record_size_request_ : *default_instance_->cursor_get_record_size_request_;
#endif
}
inline ::upscaledb::CursorGetRecordSizeRequest* ProtoWrapper::mutable_cursor_get_record_size_request() {
  set_has_cursor_get_record_size_request();
  if (cursor_get_record_size_request_ == NULL) cursor_get_record_size_request_ = new ::upscaledb::CursorGetRecordSizeRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_get_record_size_request)
  return cursor_get_record_size_request_;
}
inline ::upscaledb::CursorGetRecordSizeRequest* ProtoWrapper::release_cursor_get_record_size_request() {
  clear_has_cursor_get_record_size_request();
  ::upscaledb::CursorGetRecordSizeRequest* temp = cursor_get_record_size_request_;
  cursor_get_record_size_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_get_record_size_request(::upscaledb::CursorGetRecordSizeRequest* cursor_get_record_size_request) {
  delete cursor_get_record_size_request_;
  cursor_get_record_size_request_ = cursor_get_record_size_request;
  if (cursor_get_record_size_request) {
    set_has_cursor_get_record_size_request();
  } else {
    clear_has_cursor_get_record_size_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_get_record_size_request)
}

// optional .upscaledb.CursorGetRecordSizeReply cursor_get_record_size_reply = 265;
inline bool ProtoWrapper::has_cursor_get_record_size_reply() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_get_record_size_reply() {
  _has_bits_[1] |= 0x00400000u;
}
inline void ProtoWrapper::clear_has_cursor_get_record_size_reply() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void ProtoWrapper::clear_cursor_get_record_size_reply() {
  if (cursor_get_record_size_reply_ != NULL) cursor_get_record_size_reply_->::upscaledb::CursorGetRecordSizeReply::Clear();
  clear_has_cursor_get_record_size_reply();
}
inline const ::upscaledb::CursorGetRecordSizeReply& ProtoWrapper::cursor_get_record_size_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_get_record_size_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_get_record_size_reply_ != NULL ? *cursor_get_record_size_reply_ : *default_instance().cursor_get_record_size_reply_;
#else
  return cursor_get_record_size_reply_ != NULL ? *cursor_get_record_size_reply_ : *default_instance_->cursor_get_record_size_reply_;
#endif
}
inline ::upscaledb::CursorGetRecordSizeReply* ProtoWrapper::mutable_cursor_get_record_size_reply() {
  set_has_cursor_get_record_size_reply();
  if (cursor_get_record_size_reply_ == NULL) cursor_get_record_size_reply_ = new ::upscaledb::CursorGetRecordSizeReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_get_record_size_reply)
  return cursor_get_record_size_reply_;
}
inline ::upscaledb::CursorGetRecordSizeReply* ProtoWrapper::release_cursor_get_record_size_reply() {
  clear_has_cursor_get_record_size_reply();
  ::upscaledb::CursorGetRecordSizeReply* temp = cursor_get_record_size_reply_;
  cursor_get_record_size_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_get_record_size_reply(::upscaledb::CursorGetRecordSizeReply* cursor_get_record_size_reply) {
  delete cursor_get_record_size_reply_;
  cursor_get_record_size_reply_ = cursor_get_record_size_reply;
  if (cursor_get_record_size_reply) {
    set_has_cursor_get_record_size_reply();
  } else {
    clear_has_cursor_get_record_size_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_get_record_size_reply)
}

// optional .upscaledb.CursorOverwriteRequest cursor_overwrite_request = 270;
inline bool ProtoWrapper::has_cursor_overwrite_request() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_overwrite_request() {
  _has_bits_[1] |= 0x00800000u;
}
inline void ProtoWrapper::clear_has_cursor_overwrite_request() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void ProtoWrapper::clear_cursor_overwrite_request() {
  if (cursor_overwrite_request_ != NULL) cursor_overwrite_request_->::upscaledb::CursorOverwriteRequest::Clear();
  clear_has_cursor_overwrite_request();
}
inline const ::upscaledb::CursorOverwriteRequest& ProtoWrapper::cursor_overwrite_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_overwrite_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_overwrite_request_ != NULL ? *cursor_overwrite_request_ : *default_instance().cursor_overwrite_request_;
#else
  return cursor_overwrite_request_ != NULL ? *cursor_overwrite_request_ : *default_instance_->cursor_overwrite_request_;
#endif
}
inline ::upscaledb::CursorOverwriteRequest* ProtoWrapper::mutable_cursor_overwrite_request() {
  set_has_cursor_overwrite_request();
  if (cursor_overwrite_request_ == NULL) cursor_overwrite_request_ = new ::upscaledb::CursorOverwriteRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_overwrite_request)
  return cursor_overwrite_request_;
}
inline ::upscaledb::CursorOverwriteRequest* ProtoWrapper::release_cursor_overwrite_request() {
  clear_has_cursor_overwrite_request();
  ::upscaledb::CursorOverwriteRequest* temp = cursor_overwrite_request_;
  cursor_overwrite_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_overwrite_request(::upscaledb::CursorOverwriteRequest* cursor_overwrite_request) {
  delete cursor_overwrite_request_;
  cursor_overwrite_request_ = cursor_overwrite_request;
  if (cursor_overwrite_request) {
    set_has_cursor_overwrite_request();
  } else {
    clear_has_cursor_overwrite_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_overwrite_request)
}

// optional .upscaledb.CursorOverwriteReply cursor_overwrite_reply = 271;
inline bool ProtoWrapper::has_cursor_overwrite_reply() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_overwrite_reply() {
  _has_bits_[1] |= 0x01000000u;
}
inline void ProtoWrapper::clear_has_cursor_overwrite_reply() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void ProtoWrapper::clear_cursor_overwrite_reply() {
  if (cursor_overwrite_reply_ != NULL) cursor_overwrite_reply_->::upscaledb::CursorOverwriteReply::Clear();
  clear_has_cursor_overwrite_reply();
}
inline const ::upscaledb::CursorOverwriteReply& ProtoWrapper::cursor_overwrite_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_overwrite_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_overwrite_reply_ != NULL ? *cursor_overwrite_reply_ : *default_instance().cursor_overwrite_reply_;
#else
  return cursor_overwrite_reply_ != NULL ? *cursor_overwrite_reply_ : *default_instance_->cursor_overwrite_reply_;
#endif
}
inline ::upscaledb::CursorOverwriteReply* ProtoWrapper::mutable_cursor_overwrite_reply() {
  set_has_cursor_overwrite_reply();
  if (cursor_overwrite_reply_ == NULL) cursor_overwrite_reply_ = new ::upscaledb::CursorOverwriteReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_overwrite_reply)
  return cursor_overwrite_reply_;
}
inline ::upscaledb::CursorOverwriteReply* ProtoWrapper::release_cursor_overwrite_reply() {
  clear_has_cursor_overwrite_reply();
  ::upscaledb::CursorOverwriteReply* temp = cursor_overwrite_reply_;
  cursor_overwrite_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_overwrite_reply(::upscaledb::CursorOverwriteReply* cursor_overwrite_reply) {
  delete cursor_overwrite_reply_;
  cursor_overwrite_reply_ = cursor_overwrite_reply;
  if (cursor_overwrite_reply) {
    set_has_cursor_overwrite_reply();
  } else {
    clear_has_cursor_overwrite_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_overwrite_reply)
}

// optional .upscaledb.CursorMoveRequest cursor_move_request = 280;
inline bool ProtoWrapper::has_cursor_move_request() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_move_request() {
  _has_bits_[1] |= 0x02000000u;
}
inline void ProtoWrapper::clear_has_cursor_move_request() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void ProtoWrapper::clear_cursor_move_request() {
  if (cursor_move_request_ != NULL) cursor_move_request_->::upscaledb::CursorMoveRequest::Clear();
  clear_has_cursor_move_request();
}
inline const ::upscaledb::CursorMoveRequest& ProtoWrapper::cursor_move_request() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_move_request)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_move_request_ != NULL ? *cursor_move_request_ : *default_instance().cursor_move_request_;
#else
  return cursor_move_request_ != NULL ? *cursor_move_request_ : *default_instance_->cursor_move_request_;
#endif
}
inline ::upscaledb::CursorMoveRequest* ProtoWrapper::mutable_cursor_move_request() {
  set_has_cursor_move_request();
  if (cursor_move_request_ == NULL) cursor_move_request_ = new ::upscaledb::CursorMoveRequest;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_move_request)
  return cursor_move_request_;
}
inline ::upscaledb::CursorMoveRequest* ProtoWrapper::release_cursor_move_request() {
  clear_has_cursor_move_request();
  ::upscaledb::CursorMoveRequest* temp = cursor_move_request_;
  cursor_move_request_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_move_request(::upscaledb::CursorMoveRequest* cursor_move_request) {
  delete cursor_move_request_;
  cursor_move_request_ = cursor_move_request;
  if (cursor_move_request) {
    set_has_cursor_move_request();
  } else {
    clear_has_cursor_move_request();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_move_request)
}

// optional .upscaledb.CursorMoveReply cursor_move_reply = 281;
inline bool ProtoWrapper::has_cursor_move_reply() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void ProtoWrapper::set_has_cursor_move_reply() {
  _has_bits_[1] |= 0x04000000u;
}
inline void ProtoWrapper::clear_has_cursor_move_reply() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void ProtoWrapper::clear_cursor_move_reply() {
  if (cursor_move_reply_ != NULL) cursor_move_reply_->::upscaledb::CursorMoveReply::Clear();
  clear_has_cursor_move_reply();
}
inline const ::upscaledb::CursorMoveReply& ProtoWrapper::cursor_move_reply() const {
  // @@protoc_insertion_point(field_get:upscaledb.ProtoWrapper.cursor_move_reply)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cursor_move_reply_ != NULL ? *cursor_move_reply_ : *default_instance().cursor_move_reply_;
#else
  return cursor_move_reply_ != NULL ? *cursor_move_reply_ : *default_instance_->cursor_move_reply_;
#endif
}
inline ::upscaledb::CursorMoveReply* ProtoWrapper::mutable_cursor_move_reply() {
  set_has_cursor_move_reply();
  if (cursor_move_reply_ == NULL) cursor_move_reply_ = new ::upscaledb::CursorMoveReply;
  // @@protoc_insertion_point(field_mutable:upscaledb.ProtoWrapper.cursor_move_reply)
  return cursor_move_reply_;
}
inline ::upscaledb::CursorMoveReply* ProtoWrapper::release_cursor_move_reply() {
  clear_has_cursor_move_reply();
  ::upscaledb::CursorMoveReply* temp = cursor_move_reply_;
  cursor_move_reply_ = NULL;
  return temp;
}
inline void ProtoWrapper::set_allocated_cursor_move_reply(::upscaledb::CursorMoveReply* cursor_move_reply) {
  delete cursor_move_reply_;
  cursor_move_reply_ = cursor_move_reply;
  if (cursor_move_reply) {
    set_has_cursor_move_reply();
  } else {
    clear_has_cursor_move_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ProtoWrapper.cursor_move_reply)
}

// -------------------------------------------------------------------

// ConnectRequest

// required string path = 1;
inline bool ConnectRequest::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnectRequest::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnectRequest::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnectRequest::clear_path() {
  if (path_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& ConnectRequest::path() const {
  // @@protoc_insertion_point(field_get:upscaledb.ConnectRequest.path)
  return *path_;
}
inline void ConnectRequest::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_ = new ::std::string;
  }
  path_->assign(value);
  // @@protoc_insertion_point(field_set:upscaledb.ConnectRequest.path)
}
inline void ConnectRequest::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_ = new ::std::string;
  }
  path_->assign(value);
  // @@protoc_insertion_point(field_set_char:upscaledb.ConnectRequest.path)
}
inline void ConnectRequest::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:upscaledb.ConnectRequest.path)
}
inline ::std::string* ConnectRequest::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    path_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:upscaledb.ConnectRequest.path)
  return path_;
}
inline ::std::string* ConnectRequest::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ConnectRequest::set_allocated_path(::std::string* path) {
  if (path_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete path_;
  }
  if (path) {
    set_has_path();
    path_ = path;
  } else {
    clear_has_path();
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.ConnectRequest.path)
}

// -------------------------------------------------------------------

// ConnectReply

// required sint32 status = 1;
inline bool ConnectReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnectReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnectReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnectReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ConnectReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.ConnectReply.status)
  return status_;
}
inline void ConnectReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.ConnectReply.status)
}

// optional uint32 env_flags = 2;
inline bool ConnectReply::has_env_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConnectReply::set_has_env_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConnectReply::clear_has_env_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConnectReply::clear_env_flags() {
  env_flags_ = 0u;
  clear_has_env_flags();
}
inline ::google::protobuf::uint32 ConnectReply::env_flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.ConnectReply.env_flags)
  return env_flags_;
}
inline void ConnectReply::set_env_flags(::google::protobuf::uint32 value) {
  set_has_env_flags();
  env_flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.ConnectReply.env_flags)
}

// optional uint64 env_handle = 3;
inline bool ConnectReply::has_env_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConnectReply::set_has_env_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConnectReply::clear_has_env_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConnectReply::clear_env_handle() {
  env_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_env_handle();
}
inline ::google::protobuf::uint64 ConnectReply::env_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.ConnectReply.env_handle)
  return env_handle_;
}
inline void ConnectReply::set_env_handle(::google::protobuf::uint64 value) {
  set_has_env_handle();
  env_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.ConnectReply.env_handle)
}

// -------------------------------------------------------------------

// DisconnectRequest

// required uint64 env_handle = 1;
inline bool DisconnectRequest::has_env_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisconnectRequest::set_has_env_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisconnectRequest::clear_has_env_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisconnectRequest::clear_env_handle() {
  env_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_env_handle();
}
inline ::google::protobuf::uint64 DisconnectRequest::env_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.DisconnectRequest.env_handle)
  return env_handle_;
}
inline void DisconnectRequest::set_env_handle(::google::protobuf::uint64 value) {
  set_has_env_handle();
  env_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DisconnectRequest.env_handle)
}

// -------------------------------------------------------------------

// DisconnectReply

// required sint32 status = 1;
inline bool DisconnectReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisconnectReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisconnectReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisconnectReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DisconnectReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.DisconnectReply.status)
  return status_;
}
inline void DisconnectReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DisconnectReply.status)
}

// -------------------------------------------------------------------

// EnvGetParametersRequest

// required uint64 env_handle = 1;
inline bool EnvGetParametersRequest::has_env_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvGetParametersRequest::set_has_env_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvGetParametersRequest::clear_has_env_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvGetParametersRequest::clear_env_handle() {
  env_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_env_handle();
}
inline ::google::protobuf::uint64 EnvGetParametersRequest::env_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvGetParametersRequest.env_handle)
  return env_handle_;
}
inline void EnvGetParametersRequest::set_env_handle(::google::protobuf::uint64 value) {
  set_has_env_handle();
  env_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvGetParametersRequest.env_handle)
}

// repeated uint32 names = 2;
inline int EnvGetParametersRequest::names_size() const {
  return names_.size();
}
inline void EnvGetParametersRequest::clear_names() {
  names_.Clear();
}
inline ::google::protobuf::uint32 EnvGetParametersRequest::names(int index) const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvGetParametersRequest.names)
  return names_.Get(index);
}
inline void EnvGetParametersRequest::set_names(int index, ::google::protobuf::uint32 value) {
  names_.Set(index, value);
  // @@protoc_insertion_point(field_set:upscaledb.EnvGetParametersRequest.names)
}
inline void EnvGetParametersRequest::add_names(::google::protobuf::uint32 value) {
  names_.Add(value);
  // @@protoc_insertion_point(field_add:upscaledb.EnvGetParametersRequest.names)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EnvGetParametersRequest::names() const {
  // @@protoc_insertion_point(field_list:upscaledb.EnvGetParametersRequest.names)
  return names_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EnvGetParametersRequest::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:upscaledb.EnvGetParametersRequest.names)
  return &names_;
}

// -------------------------------------------------------------------

// EnvGetParametersReply

// required sint32 status = 1;
inline bool EnvGetParametersReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvGetParametersReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvGetParametersReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvGetParametersReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 EnvGetParametersReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvGetParametersReply.status)
  return status_;
}
inline void EnvGetParametersReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvGetParametersReply.status)
}

// optional uint32 cache_size = 2;
inline bool EnvGetParametersReply::has_cache_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnvGetParametersReply::set_has_cache_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnvGetParametersReply::clear_has_cache_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnvGetParametersReply::clear_cache_size() {
  cache_size_ = 0u;
  clear_has_cache_size();
}
inline ::google::protobuf::uint32 EnvGetParametersReply::cache_size() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvGetParametersReply.cache_size)
  return cache_size_;
}
inline void EnvGetParametersReply::set_cache_size(::google::protobuf::uint32 value) {
  set_has_cache_size();
  cache_size_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvGetParametersReply.cache_size)
}

// optional uint32 page_size = 3;
inline bool EnvGetParametersReply::has_page_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnvGetParametersReply::set_has_page_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnvGetParametersReply::clear_has_page_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnvGetParametersReply::clear_page_size() {
  page_size_ = 0u;
  clear_has_page_size();
}
inline ::google::protobuf::uint32 EnvGetParametersReply::page_size() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvGetParametersReply.page_size)
  return page_size_;
}
inline void EnvGetParametersReply::set_page_size(::google::protobuf::uint32 value) {
  set_has_page_size();
  page_size_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvGetParametersReply.page_size)
}

// optional uint32 max_env_databases = 4;
inline bool EnvGetParametersReply::has_max_env_databases() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnvGetParametersReply::set_has_max_env_databases() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnvGetParametersReply::clear_has_max_env_databases() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnvGetParametersReply::clear_max_env_databases() {
  max_env_databases_ = 0u;
  clear_has_max_env_databases();
}
inline ::google::protobuf::uint32 EnvGetParametersReply::max_env_databases() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvGetParametersReply.max_env_databases)
  return max_env_databases_;
}
inline void EnvGetParametersReply::set_max_env_databases(::google::protobuf::uint32 value) {
  set_has_max_env_databases();
  max_env_databases_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvGetParametersReply.max_env_databases)
}

// optional uint32 flags = 5;
inline bool EnvGetParametersReply::has_flags() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EnvGetParametersReply::set_has_flags() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EnvGetParametersReply::clear_has_flags() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EnvGetParametersReply::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 EnvGetParametersReply::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvGetParametersReply.flags)
  return flags_;
}
inline void EnvGetParametersReply::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvGetParametersReply.flags)
}

// optional uint32 filemode = 6;
inline bool EnvGetParametersReply::has_filemode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EnvGetParametersReply::set_has_filemode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EnvGetParametersReply::clear_has_filemode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EnvGetParametersReply::clear_filemode() {
  filemode_ = 0u;
  clear_has_filemode();
}
inline ::google::protobuf::uint32 EnvGetParametersReply::filemode() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvGetParametersReply.filemode)
  return filemode_;
}
inline void EnvGetParametersReply::set_filemode(::google::protobuf::uint32 value) {
  set_has_filemode();
  filemode_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvGetParametersReply.filemode)
}

// optional string filename = 7;
inline bool EnvGetParametersReply::has_filename() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EnvGetParametersReply::set_has_filename() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EnvGetParametersReply::clear_has_filename() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EnvGetParametersReply::clear_filename() {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& EnvGetParametersReply::filename() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvGetParametersReply.filename)
  return *filename_;
}
inline void EnvGetParametersReply::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set:upscaledb.EnvGetParametersReply.filename)
}
inline void EnvGetParametersReply::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set_char:upscaledb.EnvGetParametersReply.filename)
}
inline void EnvGetParametersReply::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:upscaledb.EnvGetParametersReply.filename)
}
inline ::std::string* EnvGetParametersReply::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:upscaledb.EnvGetParametersReply.filename)
  return filename_;
}
inline ::std::string* EnvGetParametersReply::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EnvGetParametersReply::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.EnvGetParametersReply.filename)
}

// -------------------------------------------------------------------

// EnvGetDatabaseNamesRequest

// required uint64 env_handle = 1;
inline bool EnvGetDatabaseNamesRequest::has_env_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvGetDatabaseNamesRequest::set_has_env_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvGetDatabaseNamesRequest::clear_has_env_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvGetDatabaseNamesRequest::clear_env_handle() {
  env_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_env_handle();
}
inline ::google::protobuf::uint64 EnvGetDatabaseNamesRequest::env_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvGetDatabaseNamesRequest.env_handle)
  return env_handle_;
}
inline void EnvGetDatabaseNamesRequest::set_env_handle(::google::protobuf::uint64 value) {
  set_has_env_handle();
  env_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvGetDatabaseNamesRequest.env_handle)
}

// -------------------------------------------------------------------

// EnvGetDatabaseNamesReply

// required sint32 status = 1;
inline bool EnvGetDatabaseNamesReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvGetDatabaseNamesReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvGetDatabaseNamesReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvGetDatabaseNamesReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 EnvGetDatabaseNamesReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvGetDatabaseNamesReply.status)
  return status_;
}
inline void EnvGetDatabaseNamesReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvGetDatabaseNamesReply.status)
}

// repeated uint32 names = 2;
inline int EnvGetDatabaseNamesReply::names_size() const {
  return names_.size();
}
inline void EnvGetDatabaseNamesReply::clear_names() {
  names_.Clear();
}
inline ::google::protobuf::uint32 EnvGetDatabaseNamesReply::names(int index) const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvGetDatabaseNamesReply.names)
  return names_.Get(index);
}
inline void EnvGetDatabaseNamesReply::set_names(int index, ::google::protobuf::uint32 value) {
  names_.Set(index, value);
  // @@protoc_insertion_point(field_set:upscaledb.EnvGetDatabaseNamesReply.names)
}
inline void EnvGetDatabaseNamesReply::add_names(::google::protobuf::uint32 value) {
  names_.Add(value);
  // @@protoc_insertion_point(field_add:upscaledb.EnvGetDatabaseNamesReply.names)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EnvGetDatabaseNamesReply::names() const {
  // @@protoc_insertion_point(field_list:upscaledb.EnvGetDatabaseNamesReply.names)
  return names_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EnvGetDatabaseNamesReply::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:upscaledb.EnvGetDatabaseNamesReply.names)
  return &names_;
}

// -------------------------------------------------------------------

// EnvRenameRequest

// required uint64 env_handle = 1;
inline bool EnvRenameRequest::has_env_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvRenameRequest::set_has_env_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvRenameRequest::clear_has_env_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvRenameRequest::clear_env_handle() {
  env_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_env_handle();
}
inline ::google::protobuf::uint64 EnvRenameRequest::env_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvRenameRequest.env_handle)
  return env_handle_;
}
inline void EnvRenameRequest::set_env_handle(::google::protobuf::uint64 value) {
  set_has_env_handle();
  env_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvRenameRequest.env_handle)
}

// required uint32 oldname = 2;
inline bool EnvRenameRequest::has_oldname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnvRenameRequest::set_has_oldname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnvRenameRequest::clear_has_oldname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnvRenameRequest::clear_oldname() {
  oldname_ = 0u;
  clear_has_oldname();
}
inline ::google::protobuf::uint32 EnvRenameRequest::oldname() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvRenameRequest.oldname)
  return oldname_;
}
inline void EnvRenameRequest::set_oldname(::google::protobuf::uint32 value) {
  set_has_oldname();
  oldname_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvRenameRequest.oldname)
}

// required uint32 newname = 3;
inline bool EnvRenameRequest::has_newname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnvRenameRequest::set_has_newname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnvRenameRequest::clear_has_newname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnvRenameRequest::clear_newname() {
  newname_ = 0u;
  clear_has_newname();
}
inline ::google::protobuf::uint32 EnvRenameRequest::newname() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvRenameRequest.newname)
  return newname_;
}
inline void EnvRenameRequest::set_newname(::google::protobuf::uint32 value) {
  set_has_newname();
  newname_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvRenameRequest.newname)
}

// required uint32 flags = 4;
inline bool EnvRenameRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnvRenameRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnvRenameRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnvRenameRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 EnvRenameRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvRenameRequest.flags)
  return flags_;
}
inline void EnvRenameRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvRenameRequest.flags)
}

// -------------------------------------------------------------------

// EnvRenameReply

// required sint32 status = 1;
inline bool EnvRenameReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvRenameReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvRenameReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvRenameReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 EnvRenameReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvRenameReply.status)
  return status_;
}
inline void EnvRenameReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvRenameReply.status)
}

// -------------------------------------------------------------------

// EnvFlushRequest

// required uint64 env_handle = 1;
inline bool EnvFlushRequest::has_env_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvFlushRequest::set_has_env_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvFlushRequest::clear_has_env_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvFlushRequest::clear_env_handle() {
  env_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_env_handle();
}
inline ::google::protobuf::uint64 EnvFlushRequest::env_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvFlushRequest.env_handle)
  return env_handle_;
}
inline void EnvFlushRequest::set_env_handle(::google::protobuf::uint64 value) {
  set_has_env_handle();
  env_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvFlushRequest.env_handle)
}

// required uint32 flags = 2;
inline bool EnvFlushRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnvFlushRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnvFlushRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnvFlushRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 EnvFlushRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvFlushRequest.flags)
  return flags_;
}
inline void EnvFlushRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvFlushRequest.flags)
}

// -------------------------------------------------------------------

// EnvFlushReply

// required sint32 status = 1;
inline bool EnvFlushReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvFlushReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvFlushReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvFlushReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 EnvFlushReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvFlushReply.status)
  return status_;
}
inline void EnvFlushReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvFlushReply.status)
}

// -------------------------------------------------------------------

// EnvCreateDbRequest

// required uint64 env_handle = 1;
inline bool EnvCreateDbRequest::has_env_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvCreateDbRequest::set_has_env_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvCreateDbRequest::clear_has_env_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvCreateDbRequest::clear_env_handle() {
  env_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_env_handle();
}
inline ::google::protobuf::uint64 EnvCreateDbRequest::env_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvCreateDbRequest.env_handle)
  return env_handle_;
}
inline void EnvCreateDbRequest::set_env_handle(::google::protobuf::uint64 value) {
  set_has_env_handle();
  env_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvCreateDbRequest.env_handle)
}

// required uint32 dbname = 2;
inline bool EnvCreateDbRequest::has_dbname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnvCreateDbRequest::set_has_dbname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnvCreateDbRequest::clear_has_dbname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnvCreateDbRequest::clear_dbname() {
  dbname_ = 0u;
  clear_has_dbname();
}
inline ::google::protobuf::uint32 EnvCreateDbRequest::dbname() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvCreateDbRequest.dbname)
  return dbname_;
}
inline void EnvCreateDbRequest::set_dbname(::google::protobuf::uint32 value) {
  set_has_dbname();
  dbname_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvCreateDbRequest.dbname)
}

// required uint32 flags = 3;
inline bool EnvCreateDbRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnvCreateDbRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnvCreateDbRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnvCreateDbRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 EnvCreateDbRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvCreateDbRequest.flags)
  return flags_;
}
inline void EnvCreateDbRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvCreateDbRequest.flags)
}

// repeated uint32 param_names = 4;
inline int EnvCreateDbRequest::param_names_size() const {
  return param_names_.size();
}
inline void EnvCreateDbRequest::clear_param_names() {
  param_names_.Clear();
}
inline ::google::protobuf::uint32 EnvCreateDbRequest::param_names(int index) const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvCreateDbRequest.param_names)
  return param_names_.Get(index);
}
inline void EnvCreateDbRequest::set_param_names(int index, ::google::protobuf::uint32 value) {
  param_names_.Set(index, value);
  // @@protoc_insertion_point(field_set:upscaledb.EnvCreateDbRequest.param_names)
}
inline void EnvCreateDbRequest::add_param_names(::google::protobuf::uint32 value) {
  param_names_.Add(value);
  // @@protoc_insertion_point(field_add:upscaledb.EnvCreateDbRequest.param_names)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EnvCreateDbRequest::param_names() const {
  // @@protoc_insertion_point(field_list:upscaledb.EnvCreateDbRequest.param_names)
  return param_names_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EnvCreateDbRequest::mutable_param_names() {
  // @@protoc_insertion_point(field_mutable_list:upscaledb.EnvCreateDbRequest.param_names)
  return &param_names_;
}

// repeated uint64 param_values = 5;
inline int EnvCreateDbRequest::param_values_size() const {
  return param_values_.size();
}
inline void EnvCreateDbRequest::clear_param_values() {
  param_values_.Clear();
}
inline ::google::protobuf::uint64 EnvCreateDbRequest::param_values(int index) const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvCreateDbRequest.param_values)
  return param_values_.Get(index);
}
inline void EnvCreateDbRequest::set_param_values(int index, ::google::protobuf::uint64 value) {
  param_values_.Set(index, value);
  // @@protoc_insertion_point(field_set:upscaledb.EnvCreateDbRequest.param_values)
}
inline void EnvCreateDbRequest::add_param_values(::google::protobuf::uint64 value) {
  param_values_.Add(value);
  // @@protoc_insertion_point(field_add:upscaledb.EnvCreateDbRequest.param_values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
EnvCreateDbRequest::param_values() const {
  // @@protoc_insertion_point(field_list:upscaledb.EnvCreateDbRequest.param_values)
  return param_values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
EnvCreateDbRequest::mutable_param_values() {
  // @@protoc_insertion_point(field_mutable_list:upscaledb.EnvCreateDbRequest.param_values)
  return &param_values_;
}

// -------------------------------------------------------------------

// EnvCreateDbReply

// required sint32 status = 1;
inline bool EnvCreateDbReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvCreateDbReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvCreateDbReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvCreateDbReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 EnvCreateDbReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvCreateDbReply.status)
  return status_;
}
inline void EnvCreateDbReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvCreateDbReply.status)
}

// optional uint64 db_handle = 2;
inline bool EnvCreateDbReply::has_db_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnvCreateDbReply::set_has_db_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnvCreateDbReply::clear_has_db_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnvCreateDbReply::clear_db_handle() {
  db_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_db_handle();
}
inline ::google::protobuf::uint64 EnvCreateDbReply::db_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvCreateDbReply.db_handle)
  return db_handle_;
}
inline void EnvCreateDbReply::set_db_handle(::google::protobuf::uint64 value) {
  set_has_db_handle();
  db_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvCreateDbReply.db_handle)
}

// optional uint32 db_flags = 3;
inline bool EnvCreateDbReply::has_db_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnvCreateDbReply::set_has_db_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnvCreateDbReply::clear_has_db_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnvCreateDbReply::clear_db_flags() {
  db_flags_ = 0u;
  clear_has_db_flags();
}
inline ::google::protobuf::uint32 EnvCreateDbReply::db_flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvCreateDbReply.db_flags)
  return db_flags_;
}
inline void EnvCreateDbReply::set_db_flags(::google::protobuf::uint32 value) {
  set_has_db_flags();
  db_flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvCreateDbReply.db_flags)
}

// -------------------------------------------------------------------

// EnvOpenDbRequest

// required uint64 env_handle = 1;
inline bool EnvOpenDbRequest::has_env_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvOpenDbRequest::set_has_env_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvOpenDbRequest::clear_has_env_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvOpenDbRequest::clear_env_handle() {
  env_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_env_handle();
}
inline ::google::protobuf::uint64 EnvOpenDbRequest::env_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvOpenDbRequest.env_handle)
  return env_handle_;
}
inline void EnvOpenDbRequest::set_env_handle(::google::protobuf::uint64 value) {
  set_has_env_handle();
  env_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvOpenDbRequest.env_handle)
}

// required uint32 dbname = 2;
inline bool EnvOpenDbRequest::has_dbname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnvOpenDbRequest::set_has_dbname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnvOpenDbRequest::clear_has_dbname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnvOpenDbRequest::clear_dbname() {
  dbname_ = 0u;
  clear_has_dbname();
}
inline ::google::protobuf::uint32 EnvOpenDbRequest::dbname() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvOpenDbRequest.dbname)
  return dbname_;
}
inline void EnvOpenDbRequest::set_dbname(::google::protobuf::uint32 value) {
  set_has_dbname();
  dbname_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvOpenDbRequest.dbname)
}

// required uint32 flags = 3;
inline bool EnvOpenDbRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnvOpenDbRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnvOpenDbRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnvOpenDbRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 EnvOpenDbRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvOpenDbRequest.flags)
  return flags_;
}
inline void EnvOpenDbRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvOpenDbRequest.flags)
}

// repeated uint32 param_names = 4;
inline int EnvOpenDbRequest::param_names_size() const {
  return param_names_.size();
}
inline void EnvOpenDbRequest::clear_param_names() {
  param_names_.Clear();
}
inline ::google::protobuf::uint32 EnvOpenDbRequest::param_names(int index) const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvOpenDbRequest.param_names)
  return param_names_.Get(index);
}
inline void EnvOpenDbRequest::set_param_names(int index, ::google::protobuf::uint32 value) {
  param_names_.Set(index, value);
  // @@protoc_insertion_point(field_set:upscaledb.EnvOpenDbRequest.param_names)
}
inline void EnvOpenDbRequest::add_param_names(::google::protobuf::uint32 value) {
  param_names_.Add(value);
  // @@protoc_insertion_point(field_add:upscaledb.EnvOpenDbRequest.param_names)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EnvOpenDbRequest::param_names() const {
  // @@protoc_insertion_point(field_list:upscaledb.EnvOpenDbRequest.param_names)
  return param_names_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EnvOpenDbRequest::mutable_param_names() {
  // @@protoc_insertion_point(field_mutable_list:upscaledb.EnvOpenDbRequest.param_names)
  return &param_names_;
}

// repeated uint64 param_values = 5;
inline int EnvOpenDbRequest::param_values_size() const {
  return param_values_.size();
}
inline void EnvOpenDbRequest::clear_param_values() {
  param_values_.Clear();
}
inline ::google::protobuf::uint64 EnvOpenDbRequest::param_values(int index) const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvOpenDbRequest.param_values)
  return param_values_.Get(index);
}
inline void EnvOpenDbRequest::set_param_values(int index, ::google::protobuf::uint64 value) {
  param_values_.Set(index, value);
  // @@protoc_insertion_point(field_set:upscaledb.EnvOpenDbRequest.param_values)
}
inline void EnvOpenDbRequest::add_param_values(::google::protobuf::uint64 value) {
  param_values_.Add(value);
  // @@protoc_insertion_point(field_add:upscaledb.EnvOpenDbRequest.param_values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
EnvOpenDbRequest::param_values() const {
  // @@protoc_insertion_point(field_list:upscaledb.EnvOpenDbRequest.param_values)
  return param_values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
EnvOpenDbRequest::mutable_param_values() {
  // @@protoc_insertion_point(field_mutable_list:upscaledb.EnvOpenDbRequest.param_values)
  return &param_values_;
}

// -------------------------------------------------------------------

// EnvOpenDbReply

// required sint32 status = 1;
inline bool EnvOpenDbReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvOpenDbReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvOpenDbReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvOpenDbReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 EnvOpenDbReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvOpenDbReply.status)
  return status_;
}
inline void EnvOpenDbReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvOpenDbReply.status)
}

// optional uint64 db_handle = 2;
inline bool EnvOpenDbReply::has_db_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnvOpenDbReply::set_has_db_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnvOpenDbReply::clear_has_db_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnvOpenDbReply::clear_db_handle() {
  db_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_db_handle();
}
inline ::google::protobuf::uint64 EnvOpenDbReply::db_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvOpenDbReply.db_handle)
  return db_handle_;
}
inline void EnvOpenDbReply::set_db_handle(::google::protobuf::uint64 value) {
  set_has_db_handle();
  db_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvOpenDbReply.db_handle)
}

// optional uint32 db_flags = 3;
inline bool EnvOpenDbReply::has_db_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnvOpenDbReply::set_has_db_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnvOpenDbReply::clear_has_db_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnvOpenDbReply::clear_db_flags() {
  db_flags_ = 0u;
  clear_has_db_flags();
}
inline ::google::protobuf::uint32 EnvOpenDbReply::db_flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvOpenDbReply.db_flags)
  return db_flags_;
}
inline void EnvOpenDbReply::set_db_flags(::google::protobuf::uint32 value) {
  set_has_db_flags();
  db_flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvOpenDbReply.db_flags)
}

// -------------------------------------------------------------------

// EnvEraseDbRequest

// required uint64 env_handle = 1;
inline bool EnvEraseDbRequest::has_env_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvEraseDbRequest::set_has_env_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvEraseDbRequest::clear_has_env_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvEraseDbRequest::clear_env_handle() {
  env_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_env_handle();
}
inline ::google::protobuf::uint64 EnvEraseDbRequest::env_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvEraseDbRequest.env_handle)
  return env_handle_;
}
inline void EnvEraseDbRequest::set_env_handle(::google::protobuf::uint64 value) {
  set_has_env_handle();
  env_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvEraseDbRequest.env_handle)
}

// required uint32 name = 2;
inline bool EnvEraseDbRequest::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnvEraseDbRequest::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnvEraseDbRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnvEraseDbRequest::clear_name() {
  name_ = 0u;
  clear_has_name();
}
inline ::google::protobuf::uint32 EnvEraseDbRequest::name() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvEraseDbRequest.name)
  return name_;
}
inline void EnvEraseDbRequest::set_name(::google::protobuf::uint32 value) {
  set_has_name();
  name_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvEraseDbRequest.name)
}

// required uint32 flags = 3;
inline bool EnvEraseDbRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnvEraseDbRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnvEraseDbRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnvEraseDbRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 EnvEraseDbRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvEraseDbRequest.flags)
  return flags_;
}
inline void EnvEraseDbRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvEraseDbRequest.flags)
}

// -------------------------------------------------------------------

// EnvEraseDbReply

// required sint32 status = 1;
inline bool EnvEraseDbReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvEraseDbReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvEraseDbReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvEraseDbReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 EnvEraseDbReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.EnvEraseDbReply.status)
  return status_;
}
inline void EnvEraseDbReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.EnvEraseDbReply.status)
}

// -------------------------------------------------------------------

// DbCloseRequest

// required uint64 db_handle = 1;
inline bool DbCloseRequest::has_db_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbCloseRequest::set_has_db_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbCloseRequest::clear_has_db_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbCloseRequest::clear_db_handle() {
  db_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_db_handle();
}
inline ::google::protobuf::uint64 DbCloseRequest::db_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbCloseRequest.db_handle)
  return db_handle_;
}
inline void DbCloseRequest::set_db_handle(::google::protobuf::uint64 value) {
  set_has_db_handle();
  db_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbCloseRequest.db_handle)
}

// required uint32 flags = 2;
inline bool DbCloseRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbCloseRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbCloseRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbCloseRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 DbCloseRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbCloseRequest.flags)
  return flags_;
}
inline void DbCloseRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbCloseRequest.flags)
}

// -------------------------------------------------------------------

// DbCloseReply

// required sint32 status = 1;
inline bool DbCloseReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbCloseReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbCloseReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbCloseReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DbCloseReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbCloseReply.status)
  return status_;
}
inline void DbCloseReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbCloseReply.status)
}

// -------------------------------------------------------------------

// DbGetParametersRequest

// required uint64 db_handle = 1;
inline bool DbGetParametersRequest::has_db_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbGetParametersRequest::set_has_db_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbGetParametersRequest::clear_has_db_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbGetParametersRequest::clear_db_handle() {
  db_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_db_handle();
}
inline ::google::protobuf::uint64 DbGetParametersRequest::db_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbGetParametersRequest.db_handle)
  return db_handle_;
}
inline void DbGetParametersRequest::set_db_handle(::google::protobuf::uint64 value) {
  set_has_db_handle();
  db_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbGetParametersRequest.db_handle)
}

// repeated uint32 names = 2;
inline int DbGetParametersRequest::names_size() const {
  return names_.size();
}
inline void DbGetParametersRequest::clear_names() {
  names_.Clear();
}
inline ::google::protobuf::uint32 DbGetParametersRequest::names(int index) const {
  // @@protoc_insertion_point(field_get:upscaledb.DbGetParametersRequest.names)
  return names_.Get(index);
}
inline void DbGetParametersRequest::set_names(int index, ::google::protobuf::uint32 value) {
  names_.Set(index, value);
  // @@protoc_insertion_point(field_set:upscaledb.DbGetParametersRequest.names)
}
inline void DbGetParametersRequest::add_names(::google::protobuf::uint32 value) {
  names_.Add(value);
  // @@protoc_insertion_point(field_add:upscaledb.DbGetParametersRequest.names)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DbGetParametersRequest::names() const {
  // @@protoc_insertion_point(field_list:upscaledb.DbGetParametersRequest.names)
  return names_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DbGetParametersRequest::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:upscaledb.DbGetParametersRequest.names)
  return &names_;
}

// -------------------------------------------------------------------

// DbGetParametersReply

// required sint32 status = 1;
inline bool DbGetParametersReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbGetParametersReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbGetParametersReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbGetParametersReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DbGetParametersReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbGetParametersReply.status)
  return status_;
}
inline void DbGetParametersReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbGetParametersReply.status)
}

// optional uint32 max_env_databases = 2;
inline bool DbGetParametersReply::has_max_env_databases() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbGetParametersReply::set_has_max_env_databases() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbGetParametersReply::clear_has_max_env_databases() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbGetParametersReply::clear_max_env_databases() {
  max_env_databases_ = 0u;
  clear_has_max_env_databases();
}
inline ::google::protobuf::uint32 DbGetParametersReply::max_env_databases() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbGetParametersReply.max_env_databases)
  return max_env_databases_;
}
inline void DbGetParametersReply::set_max_env_databases(::google::protobuf::uint32 value) {
  set_has_max_env_databases();
  max_env_databases_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbGetParametersReply.max_env_databases)
}

// optional uint32 flags = 3;
inline bool DbGetParametersReply::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbGetParametersReply::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbGetParametersReply::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbGetParametersReply::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 DbGetParametersReply::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbGetParametersReply.flags)
  return flags_;
}
inline void DbGetParametersReply::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbGetParametersReply.flags)
}

// optional uint32 key_size = 4;
inline bool DbGetParametersReply::has_key_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DbGetParametersReply::set_has_key_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DbGetParametersReply::clear_has_key_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DbGetParametersReply::clear_key_size() {
  key_size_ = 0u;
  clear_has_key_size();
}
inline ::google::protobuf::uint32 DbGetParametersReply::key_size() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbGetParametersReply.key_size)
  return key_size_;
}
inline void DbGetParametersReply::set_key_size(::google::protobuf::uint32 value) {
  set_has_key_size();
  key_size_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbGetParametersReply.key_size)
}

// optional uint32 dbname = 5;
inline bool DbGetParametersReply::has_dbname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DbGetParametersReply::set_has_dbname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DbGetParametersReply::clear_has_dbname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DbGetParametersReply::clear_dbname() {
  dbname_ = 0u;
  clear_has_dbname();
}
inline ::google::protobuf::uint32 DbGetParametersReply::dbname() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbGetParametersReply.dbname)
  return dbname_;
}
inline void DbGetParametersReply::set_dbname(::google::protobuf::uint32 value) {
  set_has_dbname();
  dbname_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbGetParametersReply.dbname)
}

// optional uint32 keys_per_page = 6;
inline bool DbGetParametersReply::has_keys_per_page() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DbGetParametersReply::set_has_keys_per_page() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DbGetParametersReply::clear_has_keys_per_page() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DbGetParametersReply::clear_keys_per_page() {
  keys_per_page_ = 0u;
  clear_has_keys_per_page();
}
inline ::google::protobuf::uint32 DbGetParametersReply::keys_per_page() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbGetParametersReply.keys_per_page)
  return keys_per_page_;
}
inline void DbGetParametersReply::set_keys_per_page(::google::protobuf::uint32 value) {
  set_has_keys_per_page();
  keys_per_page_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbGetParametersReply.keys_per_page)
}

// optional uint32 key_type = 7;
inline bool DbGetParametersReply::has_key_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DbGetParametersReply::set_has_key_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DbGetParametersReply::clear_has_key_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DbGetParametersReply::clear_key_type() {
  key_type_ = 0u;
  clear_has_key_type();
}
inline ::google::protobuf::uint32 DbGetParametersReply::key_type() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbGetParametersReply.key_type)
  return key_type_;
}
inline void DbGetParametersReply::set_key_type(::google::protobuf::uint32 value) {
  set_has_key_type();
  key_type_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbGetParametersReply.key_type)
}

// optional uint32 record_size = 8;
inline bool DbGetParametersReply::has_record_size() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DbGetParametersReply::set_has_record_size() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DbGetParametersReply::clear_has_record_size() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DbGetParametersReply::clear_record_size() {
  record_size_ = 0u;
  clear_has_record_size();
}
inline ::google::protobuf::uint32 DbGetParametersReply::record_size() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbGetParametersReply.record_size)
  return record_size_;
}
inline void DbGetParametersReply::set_record_size(::google::protobuf::uint32 value) {
  set_has_record_size();
  record_size_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbGetParametersReply.record_size)
}

// -------------------------------------------------------------------

// TxnBeginRequest

// required uint64 env_handle = 1;
inline bool TxnBeginRequest::has_env_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TxnBeginRequest::set_has_env_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TxnBeginRequest::clear_has_env_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TxnBeginRequest::clear_env_handle() {
  env_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_env_handle();
}
inline ::google::protobuf::uint64 TxnBeginRequest::env_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.TxnBeginRequest.env_handle)
  return env_handle_;
}
inline void TxnBeginRequest::set_env_handle(::google::protobuf::uint64 value) {
  set_has_env_handle();
  env_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.TxnBeginRequest.env_handle)
}

// required uint32 flags = 2;
inline bool TxnBeginRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TxnBeginRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TxnBeginRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TxnBeginRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 TxnBeginRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.TxnBeginRequest.flags)
  return flags_;
}
inline void TxnBeginRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.TxnBeginRequest.flags)
}

// optional string name = 3;
inline bool TxnBeginRequest::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TxnBeginRequest::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TxnBeginRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TxnBeginRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TxnBeginRequest::name() const {
  // @@protoc_insertion_point(field_get:upscaledb.TxnBeginRequest.name)
  return *name_;
}
inline void TxnBeginRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:upscaledb.TxnBeginRequest.name)
}
inline void TxnBeginRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:upscaledb.TxnBeginRequest.name)
}
inline void TxnBeginRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:upscaledb.TxnBeginRequest.name)
}
inline ::std::string* TxnBeginRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:upscaledb.TxnBeginRequest.name)
  return name_;
}
inline ::std::string* TxnBeginRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TxnBeginRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.TxnBeginRequest.name)
}

// -------------------------------------------------------------------

// TxnBeginReply

// required sint32 status = 1;
inline bool TxnBeginReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TxnBeginReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TxnBeginReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TxnBeginReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 TxnBeginReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.TxnBeginReply.status)
  return status_;
}
inline void TxnBeginReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.TxnBeginReply.status)
}

// required uint64 txn_handle = 2;
inline bool TxnBeginReply::has_txn_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TxnBeginReply::set_has_txn_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TxnBeginReply::clear_has_txn_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TxnBeginReply::clear_txn_handle() {
  txn_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_handle();
}
inline ::google::protobuf::uint64 TxnBeginReply::txn_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.TxnBeginReply.txn_handle)
  return txn_handle_;
}
inline void TxnBeginReply::set_txn_handle(::google::protobuf::uint64 value) {
  set_has_txn_handle();
  txn_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.TxnBeginReply.txn_handle)
}

// -------------------------------------------------------------------

// TxnCommitRequest

// required uint64 txn_handle = 1;
inline bool TxnCommitRequest::has_txn_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TxnCommitRequest::set_has_txn_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TxnCommitRequest::clear_has_txn_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TxnCommitRequest::clear_txn_handle() {
  txn_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_handle();
}
inline ::google::protobuf::uint64 TxnCommitRequest::txn_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.TxnCommitRequest.txn_handle)
  return txn_handle_;
}
inline void TxnCommitRequest::set_txn_handle(::google::protobuf::uint64 value) {
  set_has_txn_handle();
  txn_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.TxnCommitRequest.txn_handle)
}

// required uint32 flags = 2;
inline bool TxnCommitRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TxnCommitRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TxnCommitRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TxnCommitRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 TxnCommitRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.TxnCommitRequest.flags)
  return flags_;
}
inline void TxnCommitRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.TxnCommitRequest.flags)
}

// -------------------------------------------------------------------

// TxnCommitReply

// required sint32 status = 1;
inline bool TxnCommitReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TxnCommitReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TxnCommitReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TxnCommitReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 TxnCommitReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.TxnCommitReply.status)
  return status_;
}
inline void TxnCommitReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.TxnCommitReply.status)
}

// -------------------------------------------------------------------

// TxnAbortRequest

// required uint64 txn_handle = 1;
inline bool TxnAbortRequest::has_txn_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TxnAbortRequest::set_has_txn_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TxnAbortRequest::clear_has_txn_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TxnAbortRequest::clear_txn_handle() {
  txn_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_handle();
}
inline ::google::protobuf::uint64 TxnAbortRequest::txn_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.TxnAbortRequest.txn_handle)
  return txn_handle_;
}
inline void TxnAbortRequest::set_txn_handle(::google::protobuf::uint64 value) {
  set_has_txn_handle();
  txn_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.TxnAbortRequest.txn_handle)
}

// required uint32 flags = 2;
inline bool TxnAbortRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TxnAbortRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TxnAbortRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TxnAbortRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 TxnAbortRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.TxnAbortRequest.flags)
  return flags_;
}
inline void TxnAbortRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.TxnAbortRequest.flags)
}

// -------------------------------------------------------------------

// TxnAbortReply

// required sint32 status = 1;
inline bool TxnAbortReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TxnAbortReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TxnAbortReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TxnAbortReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 TxnAbortReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.TxnAbortReply.status)
  return status_;
}
inline void TxnAbortReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.TxnAbortReply.status)
}

// -------------------------------------------------------------------

// DbCheckIntegrityRequest

// required uint64 db_handle = 1;
inline bool DbCheckIntegrityRequest::has_db_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbCheckIntegrityRequest::set_has_db_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbCheckIntegrityRequest::clear_has_db_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbCheckIntegrityRequest::clear_db_handle() {
  db_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_db_handle();
}
inline ::google::protobuf::uint64 DbCheckIntegrityRequest::db_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbCheckIntegrityRequest.db_handle)
  return db_handle_;
}
inline void DbCheckIntegrityRequest::set_db_handle(::google::protobuf::uint64 value) {
  set_has_db_handle();
  db_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbCheckIntegrityRequest.db_handle)
}

// required uint32 flags = 2;
inline bool DbCheckIntegrityRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbCheckIntegrityRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbCheckIntegrityRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbCheckIntegrityRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 DbCheckIntegrityRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbCheckIntegrityRequest.flags)
  return flags_;
}
inline void DbCheckIntegrityRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbCheckIntegrityRequest.flags)
}

// -------------------------------------------------------------------

// DbCheckIntegrityReply

// required sint32 status = 1;
inline bool DbCheckIntegrityReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbCheckIntegrityReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbCheckIntegrityReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbCheckIntegrityReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DbCheckIntegrityReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbCheckIntegrityReply.status)
  return status_;
}
inline void DbCheckIntegrityReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbCheckIntegrityReply.status)
}

// -------------------------------------------------------------------

// DbCountRequest

// required uint64 db_handle = 1;
inline bool DbCountRequest::has_db_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbCountRequest::set_has_db_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbCountRequest::clear_has_db_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbCountRequest::clear_db_handle() {
  db_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_db_handle();
}
inline ::google::protobuf::uint64 DbCountRequest::db_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbCountRequest.db_handle)
  return db_handle_;
}
inline void DbCountRequest::set_db_handle(::google::protobuf::uint64 value) {
  set_has_db_handle();
  db_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbCountRequest.db_handle)
}

// required uint64 txn_handle = 2;
inline bool DbCountRequest::has_txn_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbCountRequest::set_has_txn_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbCountRequest::clear_has_txn_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbCountRequest::clear_txn_handle() {
  txn_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_handle();
}
inline ::google::protobuf::uint64 DbCountRequest::txn_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbCountRequest.txn_handle)
  return txn_handle_;
}
inline void DbCountRequest::set_txn_handle(::google::protobuf::uint64 value) {
  set_has_txn_handle();
  txn_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbCountRequest.txn_handle)
}

// required bool distinct = 3;
inline bool DbCountRequest::has_distinct() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbCountRequest::set_has_distinct() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbCountRequest::clear_has_distinct() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbCountRequest::clear_distinct() {
  distinct_ = false;
  clear_has_distinct();
}
inline bool DbCountRequest::distinct() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbCountRequest.distinct)
  return distinct_;
}
inline void DbCountRequest::set_distinct(bool value) {
  set_has_distinct();
  distinct_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbCountRequest.distinct)
}

// -------------------------------------------------------------------

// DbCountReply

// required sint32 status = 1;
inline bool DbCountReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbCountReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbCountReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbCountReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DbCountReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbCountReply.status)
  return status_;
}
inline void DbCountReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbCountReply.status)
}

// required uint64 keycount = 2;
inline bool DbCountReply::has_keycount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbCountReply::set_has_keycount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbCountReply::clear_has_keycount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbCountReply::clear_keycount() {
  keycount_ = GOOGLE_ULONGLONG(0);
  clear_has_keycount();
}
inline ::google::protobuf::uint64 DbCountReply::keycount() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbCountReply.keycount)
  return keycount_;
}
inline void DbCountReply::set_keycount(::google::protobuf::uint64 value) {
  set_has_keycount();
  keycount_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbCountReply.keycount)
}

// -------------------------------------------------------------------

// Key

// optional bytes data = 1;
inline bool Key::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Key::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Key::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Key::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& Key::data() const {
  // @@protoc_insertion_point(field_get:upscaledb.Key.data)
  return *data_;
}
inline void Key::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:upscaledb.Key.data)
}
inline void Key::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:upscaledb.Key.data)
}
inline void Key::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:upscaledb.Key.data)
}
inline ::std::string* Key::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:upscaledb.Key.data)
  return data_;
}
inline ::std::string* Key::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Key::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.Key.data)
}

// required uint32 flags = 2;
inline bool Key::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Key::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Key::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Key::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 Key::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.Key.flags)
  return flags_;
}
inline void Key::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.Key.flags)
}

// required uint32 intflags = 3;
inline bool Key::has_intflags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Key::set_has_intflags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Key::clear_has_intflags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Key::clear_intflags() {
  intflags_ = 0u;
  clear_has_intflags();
}
inline ::google::protobuf::uint32 Key::intflags() const {
  // @@protoc_insertion_point(field_get:upscaledb.Key.intflags)
  return intflags_;
}
inline void Key::set_intflags(::google::protobuf::uint32 value) {
  set_has_intflags();
  intflags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.Key.intflags)
}

// -------------------------------------------------------------------

// Record

// optional bytes data = 1;
inline bool Record::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Record::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Record::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Record::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& Record::data() const {
  // @@protoc_insertion_point(field_get:upscaledb.Record.data)
  return *data_;
}
inline void Record::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:upscaledb.Record.data)
}
inline void Record::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:upscaledb.Record.data)
}
inline void Record::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:upscaledb.Record.data)
}
inline ::std::string* Record::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:upscaledb.Record.data)
  return data_;
}
inline ::std::string* Record::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Record::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.Record.data)
}

// required uint32 flags = 2;
inline bool Record::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Record::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Record::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Record::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 Record::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.Record.flags)
  return flags_;
}
inline void Record::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.Record.flags)
}

// required uint32 partial_offset = 3;
inline bool Record::has_partial_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Record::set_has_partial_offset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Record::clear_has_partial_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Record::clear_partial_offset() {
  partial_offset_ = 0u;
  clear_has_partial_offset();
}
inline ::google::protobuf::uint32 Record::partial_offset() const {
  // @@protoc_insertion_point(field_get:upscaledb.Record.partial_offset)
  return partial_offset_;
}
inline void Record::set_partial_offset(::google::protobuf::uint32 value) {
  set_has_partial_offset();
  partial_offset_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.Record.partial_offset)
}

// required uint32 partial_size = 4;
inline bool Record::has_partial_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Record::set_has_partial_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Record::clear_has_partial_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Record::clear_partial_size() {
  partial_size_ = 0u;
  clear_has_partial_size();
}
inline ::google::protobuf::uint32 Record::partial_size() const {
  // @@protoc_insertion_point(field_get:upscaledb.Record.partial_size)
  return partial_size_;
}
inline void Record::set_partial_size(::google::protobuf::uint32 value) {
  set_has_partial_size();
  partial_size_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.Record.partial_size)
}

// -------------------------------------------------------------------

// DbInsertRequest

// required uint64 db_handle = 1;
inline bool DbInsertRequest::has_db_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbInsertRequest::set_has_db_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbInsertRequest::clear_has_db_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbInsertRequest::clear_db_handle() {
  db_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_db_handle();
}
inline ::google::protobuf::uint64 DbInsertRequest::db_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbInsertRequest.db_handle)
  return db_handle_;
}
inline void DbInsertRequest::set_db_handle(::google::protobuf::uint64 value) {
  set_has_db_handle();
  db_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbInsertRequest.db_handle)
}

// required uint64 txn_handle = 2;
inline bool DbInsertRequest::has_txn_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbInsertRequest::set_has_txn_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbInsertRequest::clear_has_txn_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbInsertRequest::clear_txn_handle() {
  txn_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_handle();
}
inline ::google::protobuf::uint64 DbInsertRequest::txn_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbInsertRequest.txn_handle)
  return txn_handle_;
}
inline void DbInsertRequest::set_txn_handle(::google::protobuf::uint64 value) {
  set_has_txn_handle();
  txn_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbInsertRequest.txn_handle)
}

// optional .upscaledb.Key key = 3;
inline bool DbInsertRequest::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbInsertRequest::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbInsertRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbInsertRequest::clear_key() {
  if (key_ != NULL) key_->::upscaledb::Key::Clear();
  clear_has_key();
}
inline const ::upscaledb::Key& DbInsertRequest::key() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbInsertRequest.key)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return key_ != NULL ? *key_ : *default_instance().key_;
#else
  return key_ != NULL ? *key_ : *default_instance_->key_;
#endif
}
inline ::upscaledb::Key* DbInsertRequest::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::upscaledb::Key;
  // @@protoc_insertion_point(field_mutable:upscaledb.DbInsertRequest.key)
  return key_;
}
inline ::upscaledb::Key* DbInsertRequest::release_key() {
  clear_has_key();
  ::upscaledb::Key* temp = key_;
  key_ = NULL;
  return temp;
}
inline void DbInsertRequest::set_allocated_key(::upscaledb::Key* key) {
  delete key_;
  key_ = key;
  if (key) {
    set_has_key();
  } else {
    clear_has_key();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.DbInsertRequest.key)
}

// optional .upscaledb.Record record = 4;
inline bool DbInsertRequest::has_record() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DbInsertRequest::set_has_record() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DbInsertRequest::clear_has_record() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DbInsertRequest::clear_record() {
  if (record_ != NULL) record_->::upscaledb::Record::Clear();
  clear_has_record();
}
inline const ::upscaledb::Record& DbInsertRequest::record() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbInsertRequest.record)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return record_ != NULL ? *record_ : *default_instance().record_;
#else
  return record_ != NULL ? *record_ : *default_instance_->record_;
#endif
}
inline ::upscaledb::Record* DbInsertRequest::mutable_record() {
  set_has_record();
  if (record_ == NULL) record_ = new ::upscaledb::Record;
  // @@protoc_insertion_point(field_mutable:upscaledb.DbInsertRequest.record)
  return record_;
}
inline ::upscaledb::Record* DbInsertRequest::release_record() {
  clear_has_record();
  ::upscaledb::Record* temp = record_;
  record_ = NULL;
  return temp;
}
inline void DbInsertRequest::set_allocated_record(::upscaledb::Record* record) {
  delete record_;
  record_ = record;
  if (record) {
    set_has_record();
  } else {
    clear_has_record();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.DbInsertRequest.record)
}

// required uint32 flags = 5;
inline bool DbInsertRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DbInsertRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DbInsertRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DbInsertRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 DbInsertRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbInsertRequest.flags)
  return flags_;
}
inline void DbInsertRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbInsertRequest.flags)
}

// -------------------------------------------------------------------

// DbInsertReply

// required sint32 status = 1;
inline bool DbInsertReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbInsertReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbInsertReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbInsertReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DbInsertReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbInsertReply.status)
  return status_;
}
inline void DbInsertReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbInsertReply.status)
}

// optional .upscaledb.Key key = 2;
inline bool DbInsertReply::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbInsertReply::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbInsertReply::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbInsertReply::clear_key() {
  if (key_ != NULL) key_->::upscaledb::Key::Clear();
  clear_has_key();
}
inline const ::upscaledb::Key& DbInsertReply::key() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbInsertReply.key)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return key_ != NULL ? *key_ : *default_instance().key_;
#else
  return key_ != NULL ? *key_ : *default_instance_->key_;
#endif
}
inline ::upscaledb::Key* DbInsertReply::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::upscaledb::Key;
  // @@protoc_insertion_point(field_mutable:upscaledb.DbInsertReply.key)
  return key_;
}
inline ::upscaledb::Key* DbInsertReply::release_key() {
  clear_has_key();
  ::upscaledb::Key* temp = key_;
  key_ = NULL;
  return temp;
}
inline void DbInsertReply::set_allocated_key(::upscaledb::Key* key) {
  delete key_;
  key_ = key;
  if (key) {
    set_has_key();
  } else {
    clear_has_key();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.DbInsertReply.key)
}

// -------------------------------------------------------------------

// DbEraseRequest

// required uint64 db_handle = 1;
inline bool DbEraseRequest::has_db_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbEraseRequest::set_has_db_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbEraseRequest::clear_has_db_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbEraseRequest::clear_db_handle() {
  db_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_db_handle();
}
inline ::google::protobuf::uint64 DbEraseRequest::db_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbEraseRequest.db_handle)
  return db_handle_;
}
inline void DbEraseRequest::set_db_handle(::google::protobuf::uint64 value) {
  set_has_db_handle();
  db_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbEraseRequest.db_handle)
}

// required uint64 txn_handle = 2;
inline bool DbEraseRequest::has_txn_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbEraseRequest::set_has_txn_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbEraseRequest::clear_has_txn_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbEraseRequest::clear_txn_handle() {
  txn_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_handle();
}
inline ::google::protobuf::uint64 DbEraseRequest::txn_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbEraseRequest.txn_handle)
  return txn_handle_;
}
inline void DbEraseRequest::set_txn_handle(::google::protobuf::uint64 value) {
  set_has_txn_handle();
  txn_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbEraseRequest.txn_handle)
}

// required .upscaledb.Key key = 3;
inline bool DbEraseRequest::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbEraseRequest::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbEraseRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbEraseRequest::clear_key() {
  if (key_ != NULL) key_->::upscaledb::Key::Clear();
  clear_has_key();
}
inline const ::upscaledb::Key& DbEraseRequest::key() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbEraseRequest.key)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return key_ != NULL ? *key_ : *default_instance().key_;
#else
  return key_ != NULL ? *key_ : *default_instance_->key_;
#endif
}
inline ::upscaledb::Key* DbEraseRequest::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::upscaledb::Key;
  // @@protoc_insertion_point(field_mutable:upscaledb.DbEraseRequest.key)
  return key_;
}
inline ::upscaledb::Key* DbEraseRequest::release_key() {
  clear_has_key();
  ::upscaledb::Key* temp = key_;
  key_ = NULL;
  return temp;
}
inline void DbEraseRequest::set_allocated_key(::upscaledb::Key* key) {
  delete key_;
  key_ = key;
  if (key) {
    set_has_key();
  } else {
    clear_has_key();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.DbEraseRequest.key)
}

// required uint32 flags = 4;
inline bool DbEraseRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DbEraseRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DbEraseRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DbEraseRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 DbEraseRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbEraseRequest.flags)
  return flags_;
}
inline void DbEraseRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbEraseRequest.flags)
}

// -------------------------------------------------------------------

// DbEraseReply

// required sint32 status = 1;
inline bool DbEraseReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbEraseReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbEraseReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbEraseReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DbEraseReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbEraseReply.status)
  return status_;
}
inline void DbEraseReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbEraseReply.status)
}

// -------------------------------------------------------------------

// DbFindRequest

// required uint64 db_handle = 1;
inline bool DbFindRequest::has_db_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbFindRequest::set_has_db_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbFindRequest::clear_has_db_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbFindRequest::clear_db_handle() {
  db_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_db_handle();
}
inline ::google::protobuf::uint64 DbFindRequest::db_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbFindRequest.db_handle)
  return db_handle_;
}
inline void DbFindRequest::set_db_handle(::google::protobuf::uint64 value) {
  set_has_db_handle();
  db_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbFindRequest.db_handle)
}

// required uint64 txn_handle = 2;
inline bool DbFindRequest::has_txn_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbFindRequest::set_has_txn_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbFindRequest::clear_has_txn_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbFindRequest::clear_txn_handle() {
  txn_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_handle();
}
inline ::google::protobuf::uint64 DbFindRequest::txn_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbFindRequest.txn_handle)
  return txn_handle_;
}
inline void DbFindRequest::set_txn_handle(::google::protobuf::uint64 value) {
  set_has_txn_handle();
  txn_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbFindRequest.txn_handle)
}

// required uint64 cursor_handle = 3;
inline bool DbFindRequest::has_cursor_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbFindRequest::set_has_cursor_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbFindRequest::clear_has_cursor_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbFindRequest::clear_cursor_handle() {
  cursor_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_cursor_handle();
}
inline ::google::protobuf::uint64 DbFindRequest::cursor_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbFindRequest.cursor_handle)
  return cursor_handle_;
}
inline void DbFindRequest::set_cursor_handle(::google::protobuf::uint64 value) {
  set_has_cursor_handle();
  cursor_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbFindRequest.cursor_handle)
}

// required .upscaledb.Key key = 4;
inline bool DbFindRequest::has_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DbFindRequest::set_has_key() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DbFindRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DbFindRequest::clear_key() {
  if (key_ != NULL) key_->::upscaledb::Key::Clear();
  clear_has_key();
}
inline const ::upscaledb::Key& DbFindRequest::key() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbFindRequest.key)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return key_ != NULL ? *key_ : *default_instance().key_;
#else
  return key_ != NULL ? *key_ : *default_instance_->key_;
#endif
}
inline ::upscaledb::Key* DbFindRequest::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::upscaledb::Key;
  // @@protoc_insertion_point(field_mutable:upscaledb.DbFindRequest.key)
  return key_;
}
inline ::upscaledb::Key* DbFindRequest::release_key() {
  clear_has_key();
  ::upscaledb::Key* temp = key_;
  key_ = NULL;
  return temp;
}
inline void DbFindRequest::set_allocated_key(::upscaledb::Key* key) {
  delete key_;
  key_ = key;
  if (key) {
    set_has_key();
  } else {
    clear_has_key();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.DbFindRequest.key)
}

// optional .upscaledb.Record record = 5;
inline bool DbFindRequest::has_record() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DbFindRequest::set_has_record() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DbFindRequest::clear_has_record() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DbFindRequest::clear_record() {
  if (record_ != NULL) record_->::upscaledb::Record::Clear();
  clear_has_record();
}
inline const ::upscaledb::Record& DbFindRequest::record() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbFindRequest.record)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return record_ != NULL ? *record_ : *default_instance().record_;
#else
  return record_ != NULL ? *record_ : *default_instance_->record_;
#endif
}
inline ::upscaledb::Record* DbFindRequest::mutable_record() {
  set_has_record();
  if (record_ == NULL) record_ = new ::upscaledb::Record;
  // @@protoc_insertion_point(field_mutable:upscaledb.DbFindRequest.record)
  return record_;
}
inline ::upscaledb::Record* DbFindRequest::release_record() {
  clear_has_record();
  ::upscaledb::Record* temp = record_;
  record_ = NULL;
  return temp;
}
inline void DbFindRequest::set_allocated_record(::upscaledb::Record* record) {
  delete record_;
  record_ = record;
  if (record) {
    set_has_record();
  } else {
    clear_has_record();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.DbFindRequest.record)
}

// required uint32 flags = 6;
inline bool DbFindRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DbFindRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DbFindRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DbFindRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 DbFindRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbFindRequest.flags)
  return flags_;
}
inline void DbFindRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbFindRequest.flags)
}

// -------------------------------------------------------------------

// DbFindReply

// required sint32 status = 1;
inline bool DbFindReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DbFindReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DbFindReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DbFindReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DbFindReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbFindReply.status)
  return status_;
}
inline void DbFindReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.DbFindReply.status)
}

// required .upscaledb.Record record = 2;
inline bool DbFindReply::has_record() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DbFindReply::set_has_record() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DbFindReply::clear_has_record() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DbFindReply::clear_record() {
  if (record_ != NULL) record_->::upscaledb::Record::Clear();
  clear_has_record();
}
inline const ::upscaledb::Record& DbFindReply::record() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbFindReply.record)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return record_ != NULL ? *record_ : *default_instance().record_;
#else
  return record_ != NULL ? *record_ : *default_instance_->record_;
#endif
}
inline ::upscaledb::Record* DbFindReply::mutable_record() {
  set_has_record();
  if (record_ == NULL) record_ = new ::upscaledb::Record;
  // @@protoc_insertion_point(field_mutable:upscaledb.DbFindReply.record)
  return record_;
}
inline ::upscaledb::Record* DbFindReply::release_record() {
  clear_has_record();
  ::upscaledb::Record* temp = record_;
  record_ = NULL;
  return temp;
}
inline void DbFindReply::set_allocated_record(::upscaledb::Record* record) {
  delete record_;
  record_ = record;
  if (record) {
    set_has_record();
  } else {
    clear_has_record();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.DbFindReply.record)
}

// optional .upscaledb.Key key = 3;
inline bool DbFindReply::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DbFindReply::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DbFindReply::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DbFindReply::clear_key() {
  if (key_ != NULL) key_->::upscaledb::Key::Clear();
  clear_has_key();
}
inline const ::upscaledb::Key& DbFindReply::key() const {
  // @@protoc_insertion_point(field_get:upscaledb.DbFindReply.key)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return key_ != NULL ? *key_ : *default_instance().key_;
#else
  return key_ != NULL ? *key_ : *default_instance_->key_;
#endif
}
inline ::upscaledb::Key* DbFindReply::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::upscaledb::Key;
  // @@protoc_insertion_point(field_mutable:upscaledb.DbFindReply.key)
  return key_;
}
inline ::upscaledb::Key* DbFindReply::release_key() {
  clear_has_key();
  ::upscaledb::Key* temp = key_;
  key_ = NULL;
  return temp;
}
inline void DbFindReply::set_allocated_key(::upscaledb::Key* key) {
  delete key_;
  key_ = key;
  if (key) {
    set_has_key();
  } else {
    clear_has_key();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.DbFindReply.key)
}

// -------------------------------------------------------------------

// CursorCreateRequest

// required uint64 db_handle = 1;
inline bool CursorCreateRequest::has_db_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorCreateRequest::set_has_db_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorCreateRequest::clear_has_db_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorCreateRequest::clear_db_handle() {
  db_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_db_handle();
}
inline ::google::protobuf::uint64 CursorCreateRequest::db_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorCreateRequest.db_handle)
  return db_handle_;
}
inline void CursorCreateRequest::set_db_handle(::google::protobuf::uint64 value) {
  set_has_db_handle();
  db_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorCreateRequest.db_handle)
}

// required uint64 txn_handle = 2;
inline bool CursorCreateRequest::has_txn_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CursorCreateRequest::set_has_txn_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CursorCreateRequest::clear_has_txn_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CursorCreateRequest::clear_txn_handle() {
  txn_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_handle();
}
inline ::google::protobuf::uint64 CursorCreateRequest::txn_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorCreateRequest.txn_handle)
  return txn_handle_;
}
inline void CursorCreateRequest::set_txn_handle(::google::protobuf::uint64 value) {
  set_has_txn_handle();
  txn_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorCreateRequest.txn_handle)
}

// required uint32 flags = 3;
inline bool CursorCreateRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CursorCreateRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CursorCreateRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CursorCreateRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CursorCreateRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorCreateRequest.flags)
  return flags_;
}
inline void CursorCreateRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorCreateRequest.flags)
}

// -------------------------------------------------------------------

// CursorCreateReply

// required sint32 status = 1;
inline bool CursorCreateReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorCreateReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorCreateReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorCreateReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CursorCreateReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorCreateReply.status)
  return status_;
}
inline void CursorCreateReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorCreateReply.status)
}

// required uint64 cursor_handle = 2;
inline bool CursorCreateReply::has_cursor_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CursorCreateReply::set_has_cursor_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CursorCreateReply::clear_has_cursor_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CursorCreateReply::clear_cursor_handle() {
  cursor_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_cursor_handle();
}
inline ::google::protobuf::uint64 CursorCreateReply::cursor_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorCreateReply.cursor_handle)
  return cursor_handle_;
}
inline void CursorCreateReply::set_cursor_handle(::google::protobuf::uint64 value) {
  set_has_cursor_handle();
  cursor_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorCreateReply.cursor_handle)
}

// -------------------------------------------------------------------

// CursorCloneRequest

// required uint64 cursor_handle = 1;
inline bool CursorCloneRequest::has_cursor_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorCloneRequest::set_has_cursor_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorCloneRequest::clear_has_cursor_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorCloneRequest::clear_cursor_handle() {
  cursor_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_cursor_handle();
}
inline ::google::protobuf::uint64 CursorCloneRequest::cursor_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorCloneRequest.cursor_handle)
  return cursor_handle_;
}
inline void CursorCloneRequest::set_cursor_handle(::google::protobuf::uint64 value) {
  set_has_cursor_handle();
  cursor_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorCloneRequest.cursor_handle)
}

// -------------------------------------------------------------------

// CursorCloneReply

// required sint32 status = 1;
inline bool CursorCloneReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorCloneReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorCloneReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorCloneReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CursorCloneReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorCloneReply.status)
  return status_;
}
inline void CursorCloneReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorCloneReply.status)
}

// required uint64 cursor_handle = 2;
inline bool CursorCloneReply::has_cursor_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CursorCloneReply::set_has_cursor_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CursorCloneReply::clear_has_cursor_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CursorCloneReply::clear_cursor_handle() {
  cursor_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_cursor_handle();
}
inline ::google::protobuf::uint64 CursorCloneReply::cursor_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorCloneReply.cursor_handle)
  return cursor_handle_;
}
inline void CursorCloneReply::set_cursor_handle(::google::protobuf::uint64 value) {
  set_has_cursor_handle();
  cursor_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorCloneReply.cursor_handle)
}

// -------------------------------------------------------------------

// CursorCloseRequest

// required uint64 cursor_handle = 1;
inline bool CursorCloseRequest::has_cursor_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorCloseRequest::set_has_cursor_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorCloseRequest::clear_has_cursor_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorCloseRequest::clear_cursor_handle() {
  cursor_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_cursor_handle();
}
inline ::google::protobuf::uint64 CursorCloseRequest::cursor_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorCloseRequest.cursor_handle)
  return cursor_handle_;
}
inline void CursorCloseRequest::set_cursor_handle(::google::protobuf::uint64 value) {
  set_has_cursor_handle();
  cursor_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorCloseRequest.cursor_handle)
}

// -------------------------------------------------------------------

// CursorCloseReply

// required sint32 status = 1;
inline bool CursorCloseReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorCloseReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorCloseReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorCloseReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CursorCloseReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorCloseReply.status)
  return status_;
}
inline void CursorCloseReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorCloseReply.status)
}

// -------------------------------------------------------------------

// CursorInsertRequest

// required uint64 cursor_handle = 1;
inline bool CursorInsertRequest::has_cursor_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorInsertRequest::set_has_cursor_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorInsertRequest::clear_has_cursor_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorInsertRequest::clear_cursor_handle() {
  cursor_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_cursor_handle();
}
inline ::google::protobuf::uint64 CursorInsertRequest::cursor_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorInsertRequest.cursor_handle)
  return cursor_handle_;
}
inline void CursorInsertRequest::set_cursor_handle(::google::protobuf::uint64 value) {
  set_has_cursor_handle();
  cursor_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorInsertRequest.cursor_handle)
}

// optional .upscaledb.Key key = 2;
inline bool CursorInsertRequest::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CursorInsertRequest::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CursorInsertRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CursorInsertRequest::clear_key() {
  if (key_ != NULL) key_->::upscaledb::Key::Clear();
  clear_has_key();
}
inline const ::upscaledb::Key& CursorInsertRequest::key() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorInsertRequest.key)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return key_ != NULL ? *key_ : *default_instance().key_;
#else
  return key_ != NULL ? *key_ : *default_instance_->key_;
#endif
}
inline ::upscaledb::Key* CursorInsertRequest::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::upscaledb::Key;
  // @@protoc_insertion_point(field_mutable:upscaledb.CursorInsertRequest.key)
  return key_;
}
inline ::upscaledb::Key* CursorInsertRequest::release_key() {
  clear_has_key();
  ::upscaledb::Key* temp = key_;
  key_ = NULL;
  return temp;
}
inline void CursorInsertRequest::set_allocated_key(::upscaledb::Key* key) {
  delete key_;
  key_ = key;
  if (key) {
    set_has_key();
  } else {
    clear_has_key();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.CursorInsertRequest.key)
}

// optional .upscaledb.Record record = 3;
inline bool CursorInsertRequest::has_record() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CursorInsertRequest::set_has_record() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CursorInsertRequest::clear_has_record() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CursorInsertRequest::clear_record() {
  if (record_ != NULL) record_->::upscaledb::Record::Clear();
  clear_has_record();
}
inline const ::upscaledb::Record& CursorInsertRequest::record() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorInsertRequest.record)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return record_ != NULL ? *record_ : *default_instance().record_;
#else
  return record_ != NULL ? *record_ : *default_instance_->record_;
#endif
}
inline ::upscaledb::Record* CursorInsertRequest::mutable_record() {
  set_has_record();
  if (record_ == NULL) record_ = new ::upscaledb::Record;
  // @@protoc_insertion_point(field_mutable:upscaledb.CursorInsertRequest.record)
  return record_;
}
inline ::upscaledb::Record* CursorInsertRequest::release_record() {
  clear_has_record();
  ::upscaledb::Record* temp = record_;
  record_ = NULL;
  return temp;
}
inline void CursorInsertRequest::set_allocated_record(::upscaledb::Record* record) {
  delete record_;
  record_ = record;
  if (record) {
    set_has_record();
  } else {
    clear_has_record();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.CursorInsertRequest.record)
}

// required uint32 flags = 4;
inline bool CursorInsertRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CursorInsertRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CursorInsertRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CursorInsertRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CursorInsertRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorInsertRequest.flags)
  return flags_;
}
inline void CursorInsertRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorInsertRequest.flags)
}

// required bool send_key = 5;
inline bool CursorInsertRequest::has_send_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CursorInsertRequest::set_has_send_key() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CursorInsertRequest::clear_has_send_key() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CursorInsertRequest::clear_send_key() {
  send_key_ = false;
  clear_has_send_key();
}
inline bool CursorInsertRequest::send_key() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorInsertRequest.send_key)
  return send_key_;
}
inline void CursorInsertRequest::set_send_key(bool value) {
  set_has_send_key();
  send_key_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorInsertRequest.send_key)
}

// -------------------------------------------------------------------

// CursorInsertReply

// required sint32 status = 1;
inline bool CursorInsertReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorInsertReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorInsertReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorInsertReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CursorInsertReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorInsertReply.status)
  return status_;
}
inline void CursorInsertReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorInsertReply.status)
}

// optional .upscaledb.Key key = 2;
inline bool CursorInsertReply::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CursorInsertReply::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CursorInsertReply::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CursorInsertReply::clear_key() {
  if (key_ != NULL) key_->::upscaledb::Key::Clear();
  clear_has_key();
}
inline const ::upscaledb::Key& CursorInsertReply::key() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorInsertReply.key)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return key_ != NULL ? *key_ : *default_instance().key_;
#else
  return key_ != NULL ? *key_ : *default_instance_->key_;
#endif
}
inline ::upscaledb::Key* CursorInsertReply::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::upscaledb::Key;
  // @@protoc_insertion_point(field_mutable:upscaledb.CursorInsertReply.key)
  return key_;
}
inline ::upscaledb::Key* CursorInsertReply::release_key() {
  clear_has_key();
  ::upscaledb::Key* temp = key_;
  key_ = NULL;
  return temp;
}
inline void CursorInsertReply::set_allocated_key(::upscaledb::Key* key) {
  delete key_;
  key_ = key;
  if (key) {
    set_has_key();
  } else {
    clear_has_key();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.CursorInsertReply.key)
}

// -------------------------------------------------------------------

// CursorEraseRequest

// required uint64 cursor_handle = 1;
inline bool CursorEraseRequest::has_cursor_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorEraseRequest::set_has_cursor_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorEraseRequest::clear_has_cursor_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorEraseRequest::clear_cursor_handle() {
  cursor_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_cursor_handle();
}
inline ::google::protobuf::uint64 CursorEraseRequest::cursor_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorEraseRequest.cursor_handle)
  return cursor_handle_;
}
inline void CursorEraseRequest::set_cursor_handle(::google::protobuf::uint64 value) {
  set_has_cursor_handle();
  cursor_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorEraseRequest.cursor_handle)
}

// required uint32 flags = 2;
inline bool CursorEraseRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CursorEraseRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CursorEraseRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CursorEraseRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CursorEraseRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorEraseRequest.flags)
  return flags_;
}
inline void CursorEraseRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorEraseRequest.flags)
}

// -------------------------------------------------------------------

// CursorEraseReply

// required sint32 status = 1;
inline bool CursorEraseReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorEraseReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorEraseReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorEraseReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CursorEraseReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorEraseReply.status)
  return status_;
}
inline void CursorEraseReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorEraseReply.status)
}

// -------------------------------------------------------------------

// CursorGetRecordCountRequest

// required uint64 cursor_handle = 1;
inline bool CursorGetRecordCountRequest::has_cursor_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorGetRecordCountRequest::set_has_cursor_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorGetRecordCountRequest::clear_has_cursor_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorGetRecordCountRequest::clear_cursor_handle() {
  cursor_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_cursor_handle();
}
inline ::google::protobuf::uint64 CursorGetRecordCountRequest::cursor_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorGetRecordCountRequest.cursor_handle)
  return cursor_handle_;
}
inline void CursorGetRecordCountRequest::set_cursor_handle(::google::protobuf::uint64 value) {
  set_has_cursor_handle();
  cursor_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorGetRecordCountRequest.cursor_handle)
}

// required uint32 flags = 2;
inline bool CursorGetRecordCountRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CursorGetRecordCountRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CursorGetRecordCountRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CursorGetRecordCountRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CursorGetRecordCountRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorGetRecordCountRequest.flags)
  return flags_;
}
inline void CursorGetRecordCountRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorGetRecordCountRequest.flags)
}

// -------------------------------------------------------------------

// CursorGetRecordCountReply

// required sint32 status = 1;
inline bool CursorGetRecordCountReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorGetRecordCountReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorGetRecordCountReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorGetRecordCountReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CursorGetRecordCountReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorGetRecordCountReply.status)
  return status_;
}
inline void CursorGetRecordCountReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorGetRecordCountReply.status)
}

// required uint32 count = 2;
inline bool CursorGetRecordCountReply::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CursorGetRecordCountReply::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CursorGetRecordCountReply::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CursorGetRecordCountReply::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 CursorGetRecordCountReply::count() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorGetRecordCountReply.count)
  return count_;
}
inline void CursorGetRecordCountReply::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorGetRecordCountReply.count)
}

// -------------------------------------------------------------------

// CursorGetRecordSizeRequest

// required uint64 cursor_handle = 1;
inline bool CursorGetRecordSizeRequest::has_cursor_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorGetRecordSizeRequest::set_has_cursor_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorGetRecordSizeRequest::clear_has_cursor_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorGetRecordSizeRequest::clear_cursor_handle() {
  cursor_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_cursor_handle();
}
inline ::google::protobuf::uint64 CursorGetRecordSizeRequest::cursor_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorGetRecordSizeRequest.cursor_handle)
  return cursor_handle_;
}
inline void CursorGetRecordSizeRequest::set_cursor_handle(::google::protobuf::uint64 value) {
  set_has_cursor_handle();
  cursor_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorGetRecordSizeRequest.cursor_handle)
}

// -------------------------------------------------------------------

// CursorGetRecordSizeReply

// required sint32 status = 1;
inline bool CursorGetRecordSizeReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorGetRecordSizeReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorGetRecordSizeReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorGetRecordSizeReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CursorGetRecordSizeReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorGetRecordSizeReply.status)
  return status_;
}
inline void CursorGetRecordSizeReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorGetRecordSizeReply.status)
}

// required uint64 size = 2;
inline bool CursorGetRecordSizeReply::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CursorGetRecordSizeReply::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CursorGetRecordSizeReply::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CursorGetRecordSizeReply::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::uint64 CursorGetRecordSizeReply::size() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorGetRecordSizeReply.size)
  return size_;
}
inline void CursorGetRecordSizeReply::set_size(::google::protobuf::uint64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorGetRecordSizeReply.size)
}

// -------------------------------------------------------------------

// CursorGetDuplicatePositionRequest

// required uint64 cursor_handle = 1;
inline bool CursorGetDuplicatePositionRequest::has_cursor_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorGetDuplicatePositionRequest::set_has_cursor_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorGetDuplicatePositionRequest::clear_has_cursor_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorGetDuplicatePositionRequest::clear_cursor_handle() {
  cursor_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_cursor_handle();
}
inline ::google::protobuf::uint64 CursorGetDuplicatePositionRequest::cursor_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorGetDuplicatePositionRequest.cursor_handle)
  return cursor_handle_;
}
inline void CursorGetDuplicatePositionRequest::set_cursor_handle(::google::protobuf::uint64 value) {
  set_has_cursor_handle();
  cursor_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorGetDuplicatePositionRequest.cursor_handle)
}

// -------------------------------------------------------------------

// CursorGetDuplicatePositionReply

// required sint32 status = 1;
inline bool CursorGetDuplicatePositionReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorGetDuplicatePositionReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorGetDuplicatePositionReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorGetDuplicatePositionReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CursorGetDuplicatePositionReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorGetDuplicatePositionReply.status)
  return status_;
}
inline void CursorGetDuplicatePositionReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorGetDuplicatePositionReply.status)
}

// required uint32 position = 2;
inline bool CursorGetDuplicatePositionReply::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CursorGetDuplicatePositionReply::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CursorGetDuplicatePositionReply::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CursorGetDuplicatePositionReply::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 CursorGetDuplicatePositionReply::position() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorGetDuplicatePositionReply.position)
  return position_;
}
inline void CursorGetDuplicatePositionReply::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorGetDuplicatePositionReply.position)
}

// -------------------------------------------------------------------

// CursorOverwriteRequest

// required uint64 cursor_handle = 1;
inline bool CursorOverwriteRequest::has_cursor_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorOverwriteRequest::set_has_cursor_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorOverwriteRequest::clear_has_cursor_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorOverwriteRequest::clear_cursor_handle() {
  cursor_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_cursor_handle();
}
inline ::google::protobuf::uint64 CursorOverwriteRequest::cursor_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorOverwriteRequest.cursor_handle)
  return cursor_handle_;
}
inline void CursorOverwriteRequest::set_cursor_handle(::google::protobuf::uint64 value) {
  set_has_cursor_handle();
  cursor_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorOverwriteRequest.cursor_handle)
}

// required .upscaledb.Record record = 2;
inline bool CursorOverwriteRequest::has_record() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CursorOverwriteRequest::set_has_record() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CursorOverwriteRequest::clear_has_record() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CursorOverwriteRequest::clear_record() {
  if (record_ != NULL) record_->::upscaledb::Record::Clear();
  clear_has_record();
}
inline const ::upscaledb::Record& CursorOverwriteRequest::record() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorOverwriteRequest.record)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return record_ != NULL ? *record_ : *default_instance().record_;
#else
  return record_ != NULL ? *record_ : *default_instance_->record_;
#endif
}
inline ::upscaledb::Record* CursorOverwriteRequest::mutable_record() {
  set_has_record();
  if (record_ == NULL) record_ = new ::upscaledb::Record;
  // @@protoc_insertion_point(field_mutable:upscaledb.CursorOverwriteRequest.record)
  return record_;
}
inline ::upscaledb::Record* CursorOverwriteRequest::release_record() {
  clear_has_record();
  ::upscaledb::Record* temp = record_;
  record_ = NULL;
  return temp;
}
inline void CursorOverwriteRequest::set_allocated_record(::upscaledb::Record* record) {
  delete record_;
  record_ = record;
  if (record) {
    set_has_record();
  } else {
    clear_has_record();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.CursorOverwriteRequest.record)
}

// required uint32 flags = 3;
inline bool CursorOverwriteRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CursorOverwriteRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CursorOverwriteRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CursorOverwriteRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CursorOverwriteRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorOverwriteRequest.flags)
  return flags_;
}
inline void CursorOverwriteRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorOverwriteRequest.flags)
}

// -------------------------------------------------------------------

// CursorOverwriteReply

// required sint32 status = 1;
inline bool CursorOverwriteReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorOverwriteReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorOverwriteReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorOverwriteReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CursorOverwriteReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorOverwriteReply.status)
  return status_;
}
inline void CursorOverwriteReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorOverwriteReply.status)
}

// -------------------------------------------------------------------

// CursorMoveRequest

// required uint64 cursor_handle = 1;
inline bool CursorMoveRequest::has_cursor_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorMoveRequest::set_has_cursor_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorMoveRequest::clear_has_cursor_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorMoveRequest::clear_cursor_handle() {
  cursor_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_cursor_handle();
}
inline ::google::protobuf::uint64 CursorMoveRequest::cursor_handle() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorMoveRequest.cursor_handle)
  return cursor_handle_;
}
inline void CursorMoveRequest::set_cursor_handle(::google::protobuf::uint64 value) {
  set_has_cursor_handle();
  cursor_handle_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorMoveRequest.cursor_handle)
}

// optional .upscaledb.Key key = 2;
inline bool CursorMoveRequest::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CursorMoveRequest::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CursorMoveRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CursorMoveRequest::clear_key() {
  if (key_ != NULL) key_->::upscaledb::Key::Clear();
  clear_has_key();
}
inline const ::upscaledb::Key& CursorMoveRequest::key() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorMoveRequest.key)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return key_ != NULL ? *key_ : *default_instance().key_;
#else
  return key_ != NULL ? *key_ : *default_instance_->key_;
#endif
}
inline ::upscaledb::Key* CursorMoveRequest::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::upscaledb::Key;
  // @@protoc_insertion_point(field_mutable:upscaledb.CursorMoveRequest.key)
  return key_;
}
inline ::upscaledb::Key* CursorMoveRequest::release_key() {
  clear_has_key();
  ::upscaledb::Key* temp = key_;
  key_ = NULL;
  return temp;
}
inline void CursorMoveRequest::set_allocated_key(::upscaledb::Key* key) {
  delete key_;
  key_ = key;
  if (key) {
    set_has_key();
  } else {
    clear_has_key();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.CursorMoveRequest.key)
}

// optional .upscaledb.Record record = 3;
inline bool CursorMoveRequest::has_record() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CursorMoveRequest::set_has_record() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CursorMoveRequest::clear_has_record() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CursorMoveRequest::clear_record() {
  if (record_ != NULL) record_->::upscaledb::Record::Clear();
  clear_has_record();
}
inline const ::upscaledb::Record& CursorMoveRequest::record() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorMoveRequest.record)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return record_ != NULL ? *record_ : *default_instance().record_;
#else
  return record_ != NULL ? *record_ : *default_instance_->record_;
#endif
}
inline ::upscaledb::Record* CursorMoveRequest::mutable_record() {
  set_has_record();
  if (record_ == NULL) record_ = new ::upscaledb::Record;
  // @@protoc_insertion_point(field_mutable:upscaledb.CursorMoveRequest.record)
  return record_;
}
inline ::upscaledb::Record* CursorMoveRequest::release_record() {
  clear_has_record();
  ::upscaledb::Record* temp = record_;
  record_ = NULL;
  return temp;
}
inline void CursorMoveRequest::set_allocated_record(::upscaledb::Record* record) {
  delete record_;
  record_ = record;
  if (record) {
    set_has_record();
  } else {
    clear_has_record();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.CursorMoveRequest.record)
}

// required uint32 flags = 4;
inline bool CursorMoveRequest::has_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CursorMoveRequest::set_has_flags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CursorMoveRequest::clear_has_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CursorMoveRequest::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CursorMoveRequest::flags() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorMoveRequest.flags)
  return flags_;
}
inline void CursorMoveRequest::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorMoveRequest.flags)
}

// -------------------------------------------------------------------

// CursorMoveReply

// required sint32 status = 1;
inline bool CursorMoveReply::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CursorMoveReply::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CursorMoveReply::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CursorMoveReply::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CursorMoveReply::status() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorMoveReply.status)
  return status_;
}
inline void CursorMoveReply::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:upscaledb.CursorMoveReply.status)
}

// optional .upscaledb.Key key = 2;
inline bool CursorMoveReply::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CursorMoveReply::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CursorMoveReply::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CursorMoveReply::clear_key() {
  if (key_ != NULL) key_->::upscaledb::Key::Clear();
  clear_has_key();
}
inline const ::upscaledb::Key& CursorMoveReply::key() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorMoveReply.key)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return key_ != NULL ? *key_ : *default_instance().key_;
#else
  return key_ != NULL ? *key_ : *default_instance_->key_;
#endif
}
inline ::upscaledb::Key* CursorMoveReply::mutable_key() {
  set_has_key();
  if (key_ == NULL) key_ = new ::upscaledb::Key;
  // @@protoc_insertion_point(field_mutable:upscaledb.CursorMoveReply.key)
  return key_;
}
inline ::upscaledb::Key* CursorMoveReply::release_key() {
  clear_has_key();
  ::upscaledb::Key* temp = key_;
  key_ = NULL;
  return temp;
}
inline void CursorMoveReply::set_allocated_key(::upscaledb::Key* key) {
  delete key_;
  key_ = key;
  if (key) {
    set_has_key();
  } else {
    clear_has_key();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.CursorMoveReply.key)
}

// optional .upscaledb.Record record = 3;
inline bool CursorMoveReply::has_record() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CursorMoveReply::set_has_record() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CursorMoveReply::clear_has_record() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CursorMoveReply::clear_record() {
  if (record_ != NULL) record_->::upscaledb::Record::Clear();
  clear_has_record();
}
inline const ::upscaledb::Record& CursorMoveReply::record() const {
  // @@protoc_insertion_point(field_get:upscaledb.CursorMoveReply.record)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return record_ != NULL ? *record_ : *default_instance().record_;
#else
  return record_ != NULL ? *record_ : *default_instance_->record_;
#endif
}
inline ::upscaledb::Record* CursorMoveReply::mutable_record() {
  set_has_record();
  if (record_ == NULL) record_ = new ::upscaledb::Record;
  // @@protoc_insertion_point(field_mutable:upscaledb.CursorMoveReply.record)
  return record_;
}
inline ::upscaledb::Record* CursorMoveReply::release_record() {
  clear_has_record();
  ::upscaledb::Record* temp = record_;
  record_ = NULL;
  return temp;
}
inline void CursorMoveReply::set_allocated_record(::upscaledb::Record* record) {
  delete record_;
  record_ = record;
  if (record) {
    set_has_record();
  } else {
    clear_has_record();
  }
  // @@protoc_insertion_point(field_set_allocated:upscaledb.CursorMoveReply.record)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace upscaledb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_2eproto__INCLUDED
