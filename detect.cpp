#include <map>

#include "detect.h"
#include "magic.h"
#include "mime.h"

void Detect::loadMime() {
	this->mimeList["text/plain"] = new Mime("Text File", "text/plain", ".txt");
	this->mimeList["application/vnd.hzn-3d-crossword"] = new Mime("3D Crossword Plugin", "application/vnd.hzn-3d-crossword", ".x3d");
	this->mimeList["video/3gpp"] = new Mime("3GP", "video/3gpp", ".3gp");
	this->mimeList["video/3gpp2"] = new Mime("3GP2", "video/3gpp2", ".3g2");
	this->mimeList["application/vnd.mseq"] = new Mime("3GPP MSEQ File", "application/vnd.mseq", ".mseq");
	this->mimeList["application/vnd.3m.post-it-notes"] = new Mime("3M Post It Notes", "application/vnd.3m.post-it-notes", ".pwn");
	this->mimeList["application/vnd.3gpp.pic-bw-large"] = new Mime("3rd Generation Partnership Project - Pic Large", "application/vnd.3gpp.pic-bw-large", ".plb");
	this->mimeList["application/vnd.3gpp.pic-bw-small"] = new Mime("3rd Generation Partnership Project - Pic Small", "application/vnd.3gpp.pic-bw-small", ".psb");
	this->mimeList["application/vnd.3gpp.pic-bw-var"] = new Mime("3rd Generation Partnership Project - Pic Var", "application/vnd.3gpp.pic-bw-var", ".pvb");
	this->mimeList["application/vnd.3gpp2.tcap"] = new Mime("3rd Generation Partnership Project - Transaction Capabilities Application Part", "application/vnd.3gpp2.tcap", ".tcap");
	this->mimeList["application/x-7z-compressed"] = new Mime("7-Zip", "application/x-7z-compressed", ".7z");
	this->mimeList["application/x-abiword"] = new Mime("AbiWord", "application/x-abiword", ".abw");
	this->mimeList["application/x-ace-compressed"] = new Mime("Ace Archive", "application/x-ace-compressed", ".ace");
	this->mimeList["application/vnd.americandynamics.acc"] = new Mime("Active Content Compression", "application/vnd.americandynamics.acc", ".acc");
	this->mimeList["application/vnd.acucobol"] = new Mime("ACU Cobol", "application/vnd.acucobol", ".acu");
	this->mimeList["application/vnd.acucorp"] = new Mime("ACU Cobol", "application/vnd.acucorp", ".atc");
	this->mimeList["audio/adpcm"] = new Mime("Adaptive differential pulse-code modulation", "audio/adpcm", ".adp");
	this->mimeList["application/x-authorware-bin"] = new Mime("Adobe (Macropedia) Authorware - Binary File", "application/x-authorware-bin", ".aab");
	this->mimeList["application/x-authorware-map"] = new Mime("Adobe (Macropedia) Authorware - Map", "application/x-authorware-map", ".aam");
	this->mimeList["application/x-authorware-seg"] = new Mime("Adobe (Macropedia) Authorware - Segment File", "application/x-authorware-seg", ".aas");
	this->mimeList["application/vnd.adobe.air-application-installer-package+zip"] = new Mime("Adobe AIR Application", "application/vnd.adobe.air-application-installer-package+zip", ".air");
	this->mimeList["application/x-shockwave-flash"] = new Mime("Adobe Flash", "application/x-shockwave-flash", ".swf");
	this->mimeList["application/vnd.adobe.fxp"] = new Mime("Adobe Flex Project", "application/vnd.adobe.fxp", ".fxp");
	this->mimeList["application/pdf"] = new Mime("Adobe Portable Document Format", "application/pdf", ".pdf");
	this->mimeList["application/vnd.cups-ppd"] = new Mime("Adobe PostScript Printer Description File Format", "application/vnd.cups-ppd", ".ppd");
	this->mimeList["application/x-director"] = new Mime("Adobe Shockwave Player", "application/x-director", ".dir");
	this->mimeList["application/vnd.adobe.xdp+xml"] = new Mime("Adobe XML Data Package", "application/vnd.adobe.xdp+xml", ".xdp");
	this->mimeList["application/vnd.adobe.xfdf"] = new Mime("Adobe XML Forms Data Format", "application/vnd.adobe.xfdf", ".xfdf");
	this->mimeList["audio/x-aac"] = new Mime("Advanced Audio Coding (AAC)", "audio/x-aac", ".aac");
	this->mimeList["application/vnd.ahead.space"] = new Mime("Ahead AIR Application", "application/vnd.ahead.space", ".ahead");
	this->mimeList["application/vnd.airzip.filesecure.azf"] = new Mime("AirZip FileSECURE", "application/vnd.airzip.filesecure.azf", ".azf");
	this->mimeList["application/vnd.airzip.filesecure.azs"] = new Mime("AirZip FileSECURE", "application/vnd.airzip.filesecure.azs", ".azs");
	this->mimeList["application/vnd.amazon.ebook"] = new Mime("Amazon Kindle eBook format", "application/vnd.amazon.ebook", ".azw");
	this->mimeList["application/vnd.amiga.ami"] = new Mime("AmigaDE", "application/vnd.amiga.ami", ".ami");
	this->mimeList["application/andrew-inset"] = new Mime("Andrew Toolkit", "application/andrew-inset", "N/A");
	this->mimeList["application/vnd.android.package-archive"] = new Mime("Android Package Archive", "application/vnd.android.package-archive", ".apk");
	this->mimeList["application/vnd.anser-web-certificate-issue-initiation"] = new Mime("ANSER-WEB Terminal Client - Certificate Issue", "application/vnd.anser-web-certificate-issue-initiation", ".cii");
	this->mimeList["application/vnd.anser-web-funds-transfer-initiation"] = new Mime("ANSER-WEB Terminal Client - Web Funds Transfer", "application/vnd.anser-web-funds-transfer-initiation", ".fti");
	this->mimeList["application/vnd.antix.game-component"] = new Mime("Antix Game Player", "application/vnd.antix.game-component", ".atx");
	this->mimeList["application/vnd.apple.installer+xml"] = new Mime("Apple Installer Package", "application/vnd.apple.installer+xml", ".mpkg");
	this->mimeList["application/applixware"] = new Mime("Applixware", "application/applixware", ".aw");
	this->mimeList["application/vnd.hhe.lesson-player"] = new Mime("Archipelago Lesson Player", "application/vnd.hhe.lesson-player", ".les");
	this->mimeList["application/vnd.aristanetworks.swi"] = new Mime("Arista Networks Software Image", "application/vnd.aristanetworks.swi", ".swi");
	this->mimeList["text/x-asm"] = new Mime("Assembler Source File", "text/x-asm", ".s");
	this->mimeList["application/atomcat+xml"] = new Mime("Atom Publishing Protocol", "application/atomcat+xml", ".atomcat");
	this->mimeList["application/atomsvc+xml"] = new Mime("Atom Publishing Protocol Service Document", "application/atomsvc+xml", ".atomsvc");
	this->mimeList["application/atom+xml"] = new Mime("Atom Syndication Format", "application/atom+xml", ".atom, .xml");
	this->mimeList["application/pkix-attr-cert"] = new Mime("Attribute Certificate", "application/pkix-attr-cert", ".ac");
	this->mimeList["audio/x-aiff"] = new Mime("Audio Interchange File Format", "audio/x-aiff", ".aif");
	this->mimeList["video/x-msvideo"] = new Mime("Audio Video Interleave (AVI)", "video/x-msvideo", ".avi");
	this->mimeList["application/vnd.audiograph"] = new Mime("Audiograph", "application/vnd.audiograph", ".aep");
	this->mimeList["image/vnd.dxf"] = new Mime("AutoCAD DXF", "image/vnd.dxf", ".dxf");
	this->mimeList["model/vnd.dwf"] = new Mime("Autodesk Design Web Format (DWF)", "model/vnd.dwf", ".dwf");
	this->mimeList["text/plain-bas"] = new Mime("BAS Partitur Format", "text/plain-bas", ".par");
	this->mimeList["application/x-bcpio"] = new Mime("Binary CPIO Archive", "application/x-bcpio", ".bcpio");
	this->mimeList["application/octet-stream"] = new Mime("Binary Data", "application/octet-stream", ".bin");
	this->mimeList["image/bmp"] = new Mime("Bitmap Image File", "image/bmp", ".bmp");
	this->mimeList["application/x-bittorrent"] = new Mime("BitTorrent", "application/x-bittorrent", ".torrent");
	this->mimeList["application/vnd.rim.cod"] = new Mime("Blackberry COD File", "application/vnd.rim.cod", ".cod");
	this->mimeList["application/vnd.blueice.multipass"] = new Mime("Blueice Research Multipass", "application/vnd.blueice.multipass", ".mpm");
	this->mimeList["application/vnd.bmi"] = new Mime("BMI Drawing Data Interchange", "application/vnd.bmi", ".bmi");
	this->mimeList["application/x-sh"] = new Mime("Bourne Shell Script", "application/x-sh", ".sh");
	this->mimeList["image/prs.btif"] = new Mime("BTIF", "image/prs.btif", ".btif");
	this->mimeList["application/vnd.businessobjects"] = new Mime("BusinessObjects", "application/vnd.businessobjects", ".rep");
	this->mimeList["application/x-bzip"] = new Mime("Bzip Archive", "application/x-bzip", ".bz");
	this->mimeList["application/x-bzip2"] = new Mime("Bzip2 Archive", "application/x-bzip2", ".bz2");
	this->mimeList["application/x-csh"] = new Mime("C Shell Script", "application/x-csh", ".csh");
	this->mimeList["text/x-c"] = new Mime("C Source File", "text/x-c", ".c");
	this->mimeList["application/vnd.chemdraw+xml"] = new Mime("CambridgeSoft Chem Draw", "application/vnd.chemdraw+xml", ".cdxml");
	this->mimeList["text/css"] = new Mime("Cascading Style Sheets (CSS)", "text/css", ".css");
	this->mimeList["chemical/x-cdx"] = new Mime("ChemDraw eXchange file", "chemical/x-cdx", ".cdx");
	this->mimeList["chemical/x-cml"] = new Mime("Chemical Markup Language", "chemical/x-cml", ".cml");
	this->mimeList["chemical/x-csml"] = new Mime("Chemical Style Markup Language", "chemical/x-csml", ".csml");
	this->mimeList["application/vnd.contact.cmsg"] = new Mime("CIM Database", "application/vnd.contact.cmsg", ".cdbcmsg");
	this->mimeList["application/vnd.claymore"] = new Mime("Claymore Data Files", "application/vnd.claymore", ".cla");
	this->mimeList["application/vnd.clonk.c4group"] = new Mime("Clonk Game", "application/vnd.clonk.c4group", ".c4g");
	this->mimeList["image/vnd.dvb.subtitle"] = new Mime("Close Captioning - Subtitle", "image/vnd.dvb.subtitle", ".sub");
	this->mimeList["application/cdmi-capability"] = new Mime("Cloud Data Management Interface (CDMI) - Capability", "application/cdmi-capability", ".cdmia");
	this->mimeList["application/cdmi-container"] = new Mime("Cloud Data Management Interface (CDMI) - Contaimer", "application/cdmi-container", ".cdmic");
	this->mimeList["application/cdmi-domain"] = new Mime("Cloud Data Management Interface (CDMI) - Domain", "application/cdmi-domain", ".cdmid");
	this->mimeList["application/cdmi-object"] = new Mime("Cloud Data Management Interface (CDMI) - Object", "application/cdmi-object", ".cdmio");
	this->mimeList["application/cdmi-queue"] = new Mime("Cloud Data Management Interface (CDMI) - Queue", "application/cdmi-queue", ".cdmiq");
	this->mimeList["application/vnd.cluetrust.cartomobile-config"] = new Mime("ClueTrust CartoMobile - Config", "application/vnd.cluetrust.cartomobile-config", ".c11amc");
	this->mimeList["application/vnd.cluetrust.cartomobile-config-pkg"] = new Mime("ClueTrust CartoMobile - Config Package", "application/vnd.cluetrust.cartomobile-config-pkg", ".c11amz");
	this->mimeList["image/x-cmu-raster"] = new Mime("CMU Image", "image/x-cmu-raster", ".ras");
	this->mimeList["model/vnd.collada+xml"] = new Mime("COLLADA", "model/vnd.collada+xml", ".dae");
	this->mimeList["text/csv"] = new Mime("Comma-Seperated Values", "text/csv", ".csv");
	this->mimeList["application/mac-compactpro"] = new Mime("Compact Pro", "application/mac-compactpro", ".cpt");
	this->mimeList["application/vnd.wap.wmlc"] = new Mime("Compiled Wireless Markup Language (WMLC)", "application/vnd.wap.wmlc", ".wmlc");
	this->mimeList["image/cgm"] = new Mime("Computer Graphics Metafile", "image/cgm", ".cgm");
	this->mimeList["x-conference/x-cooltalk"] = new Mime("CoolTalk", "x-conference/x-cooltalk", ".ice");
	this->mimeList["image/x-cmx"] = new Mime("Corel Metafile Exchange (CMX)", "image/x-cmx", ".cmx");
	this->mimeList["application/vnd.xara"] = new Mime("CorelXARA", "application/vnd.xara", ".xar");
	this->mimeList["application/vnd.cosmocaller"] = new Mime("CosmoCaller", "application/vnd.cosmocaller", ".cmc");
	this->mimeList["application/x-cpio"] = new Mime("CPIO Archive", "application/x-cpio", ".cpio");
	this->mimeList["application/vnd.crick.clicker"] = new Mime("CrickSoftware - Clicker", "application/vnd.crick.clicker", ".clkx");
	this->mimeList["application/vnd.crick.clicker.keyboard"] = new Mime("CrickSoftware - Clicker - Keyboard", "application/vnd.crick.clicker.keyboard", ".clkk");
	this->mimeList["application/vnd.crick.clicker.palette"] = new Mime("CrickSoftware - Clicker - Palette", "application/vnd.crick.clicker.palette", ".clkp");
	this->mimeList["application/vnd.crick.clicker.template"] = new Mime("CrickSoftware - Clicker - Template", "application/vnd.crick.clicker.template", ".clkt");
	this->mimeList["application/vnd.crick.clicker.wordbank"] = new Mime("CrickSoftware - Clicker - Wordbank", "application/vnd.crick.clicker.wordbank", ".clkw");
	this->mimeList["application/vnd.criticaltools.wbs+xml"] = new Mime("Critical Tools - PERT Chart EXPERT", "application/vnd.criticaltools.wbs+xml", ".wbs");
	this->mimeList["application/vnd.rig.cryptonote"] = new Mime("CryptoNote", "application/vnd.rig.cryptonote", ".cryptonote");
	this->mimeList["chemical/x-cif"] = new Mime("Crystallographic Interchange Format", "chemical/x-cif", ".cif");
	this->mimeList["chemical/x-cmdf"] = new Mime("CrystalMaker Data Format", "chemical/x-cmdf", ".cmdf");
	this->mimeList["application/cu-seeme"] = new Mime("CU-SeeMe", "application/cu-seeme", ".cu");
	this->mimeList["application/prs.cww"] = new Mime("CU-Writer", "application/prs.cww", ".cww");
	this->mimeList["text/vnd.curl"] = new Mime("Curl - Applet", "text/vnd.curl", ".curl");
	this->mimeList["text/vnd.curl.dcurl"] = new Mime("Curl - Detached Applet", "text/vnd.curl.dcurl", ".dcurl");
	this->mimeList["text/vnd.curl.mcurl"] = new Mime("Curl - Manifest File", "text/vnd.curl.mcurl", ".mcurl");
	this->mimeList["text/vnd.curl.scurl"] = new Mime("Curl - Source Code", "text/vnd.curl.scurl", ".scurl");
	this->mimeList["application/vnd.curl.car"] = new Mime("CURL Applet", "application/vnd.curl.car", ".car");
	this->mimeList["application/vnd.curl.pcurl"] = new Mime("CURL Applet", "application/vnd.curl.pcurl", ".pcurl");
	this->mimeList["application/vnd.yellowriver-custom-menu"] = new Mime("CustomMenu", "application/vnd.yellowriver-custom-menu", ".cmp");
	this->mimeList["application/dssc+der"] = new Mime("Data Structure for the Security Suitability of Cryptographic Algorithms", "application/dssc+der", ".dssc");
	this->mimeList["application/dssc+xml"] = new Mime("Data Structure for the Security Suitability of Cryptographic Algorithms", "application/dssc+xml", ".xdssc");
	this->mimeList["application/x-debian-package"] = new Mime("Debian Package", "application/x-debian-package", ".deb");
	this->mimeList["audio/vnd.dece.audio"] = new Mime("DECE Audio", "audio/vnd.dece.audio", ".uva");
	this->mimeList["image/vnd.dece.graphic"] = new Mime("DECE Graphic", "image/vnd.dece.graphic", ".uvi");
	this->mimeList["video/vnd.dece.hd"] = new Mime("DECE High Definition Video", "video/vnd.dece.hd", ".uvh");
	this->mimeList["video/vnd.dece.mobile"] = new Mime("DECE Mobile Video", "video/vnd.dece.mobile", ".uvm");
	this->mimeList["video/vnd.uvvu.mp4"] = new Mime("DECE MP4", "video/vnd.uvvu.mp4", ".uvu");
	this->mimeList["video/vnd.dece.pd"] = new Mime("DECE PD Video", "video/vnd.dece.pd", ".uvp");
	this->mimeList["video/vnd.dece.sd"] = new Mime("DECE SD Video", "video/vnd.dece.sd", ".uvs");
	this->mimeList["video/vnd.dece.video"] = new Mime("DECE Video", "video/vnd.dece.video", ".uvv");
	this->mimeList["application/x-dvi"] = new Mime("Device Independent File Format (DVI)", "application/x-dvi", ".dvi");
	this->mimeList["application/vnd.fdsn.seed"] = new Mime("Digital Siesmograph Networks - SEED Datafiles", "application/vnd.fdsn.seed", ".seed");
	this->mimeList["application/x-dtbook+xml"] = new Mime("Digital Talking Book", "application/x-dtbook+xml", ".dtb");
	this->mimeList["application/x-dtbresource+xml"] = new Mime("Digital Talking Book - Resource File", "application/x-dtbresource+xml", ".res");
	this->mimeList["application/vnd.dvb.ait"] = new Mime("Digital Video Broadcasting", "application/vnd.dvb.ait", ".ait");
	this->mimeList["application/vnd.dvb.service"] = new Mime("Digital Video Broadcasting", "application/vnd.dvb.service", ".svc");
	this->mimeList["audio/vnd.digital-winds"] = new Mime("Digital Winds Music", "audio/vnd.digital-winds", ".eol");
	this->mimeList["image/vnd.djvu"] = new Mime("DjVu", "image/vnd.djvu", ".djvu");
	this->mimeList["application/xml-dtd"] = new Mime("Document Type Definition", "application/xml-dtd", ".dtd");
	this->mimeList["application/vnd.dolby.mlp"] = new Mime("Dolby Meridian Lossless Packing", "application/vnd.dolby.mlp", ".mlp");
	this->mimeList["application/x-doom"] = new Mime("Doom Video Game", "application/x-doom", ".wad");
	this->mimeList["application/vnd.dpgraph"] = new Mime("DPGraph", "application/vnd.dpgraph", ".dpg");
	this->mimeList["audio/vnd.dra"] = new Mime("DRA Audio", "audio/vnd.dra", ".dra");
	this->mimeList["application/vnd.dreamfactory"] = new Mime("DreamFactory", "application/vnd.dreamfactory", ".dfac");
	this->mimeList["audio/vnd.dts"] = new Mime("DTS Audio", "audio/vnd.dts", ".dts");
	this->mimeList["audio/vnd.dts.hd"] = new Mime("DTS High Definition Audio", "audio/vnd.dts.hd", ".dtshd");
	this->mimeList["image/vnd.dwg"] = new Mime("DWG Drawing", "image/vnd.dwg", ".dwg");
	this->mimeList["application/vnd.dynageo"] = new Mime("DynaGeo", "application/vnd.dynageo", ".geo");
	this->mimeList["application/ecmascript"] = new Mime("ECMAScript", "application/ecmascript", ".es");
	this->mimeList["application/vnd.ecowin.chart"] = new Mime("EcoWin Chart", "application/vnd.ecowin.chart", ".mag");
	this->mimeList["image/vnd.fujixerox.edmics-mmr"] = new Mime("EDMICS 2000", "image/vnd.fujixerox.edmics-mmr", ".mmr");
	this->mimeList["image/vnd.fujixerox.edmics-rlc"] = new Mime("EDMICS 2000", "image/vnd.fujixerox.edmics-rlc", ".rlc");
	this->mimeList["application/exi"] = new Mime("Efficient XML Interchange", "application/exi", ".exi");
	this->mimeList["application/vnd.proteus.magazine"] = new Mime("EFI Proteus", "application/vnd.proteus.magazine", ".mgz");
	this->mimeList["application/epub+zip"] = new Mime("Electronic Publication", "application/epub+zip", ".epub");
	this->mimeList["message/rfc822"] = new Mime("Email Message", "message/rfc822", ".eml");
	this->mimeList["application/vnd.enliven"] = new Mime("Enliven Viewer", "application/vnd.enliven", ".nml");
	this->mimeList["application/vnd.is-xpr"] = new Mime("Express by Infoseek", "application/vnd.is-xpr", ".xpr");
	this->mimeList["image/vnd.xiff"] = new Mime("eXtended Image File Format (XIFF)", "image/vnd.xiff", ".xif");
	this->mimeList["application/vnd.xfdl"] = new Mime("Extensible Forms Description Language", "application/vnd.xfdl", ".xfdl");
	this->mimeList["application/emma+xml"] = new Mime("Extensible MultiModal Annotation", "application/emma+xml", ".emma");
	this->mimeList["application/vnd.ezpix-album"] = new Mime("EZPix Secure Photo Album", "application/vnd.ezpix-album", ".ez2");
	this->mimeList["application/vnd.ezpix-package"] = new Mime("EZPix Secure Photo Album", "application/vnd.ezpix-package", ".ez3");
	this->mimeList["image/vnd.fst"] = new Mime("FAST Search & Transfer ASA", "image/vnd.fst", ".fst");
	this->mimeList["video/vnd.fvt"] = new Mime("FAST Search & Transfer ASA", "video/vnd.fvt", ".fvt");
	this->mimeList["image/vnd.fastbidsheet"] = new Mime("FastBid Sheet", "image/vnd.fastbidsheet", ".fbs");
	this->mimeList["application/vnd.denovo.fcselayout-link"] = new Mime("FCS Express Layout Link", "application/vnd.denovo.fcselayout-link", ".fe_launch");
	this->mimeList["video/x-f4v"] = new Mime("Flash Video", "video/x-f4v", ".f4v");
	this->mimeList["video/x-flv"] = new Mime("Flash Video", "video/x-flv", ".flv");
	this->mimeList["image/vnd.fpx"] = new Mime("FlashPix", "image/vnd.fpx", ".fpx");
	this->mimeList["image/vnd.net-fpx"] = new Mime("FlashPix", "image/vnd.net-fpx", ".npx");
	this->mimeList["text/vnd.fmi.flexstor"] = new Mime("FLEXSTOR", "text/vnd.fmi.flexstor", ".flx");
	this->mimeList["video/x-fli"] = new Mime("FLI/FLC Animation Format", "video/x-fli", ".fli");
	this->mimeList["application/vnd.fluxtime.clip"] = new Mime("FluxTime Clip", "application/vnd.fluxtime.clip", ".ftc");
	this->mimeList["application/vnd.fdf"] = new Mime("Forms Data Format", "application/vnd.fdf", ".fdf");
	this->mimeList["text/x-fortran"] = new Mime("Fortran Source File", "text/x-fortran", ".f");
	this->mimeList["application/vnd.mif"] = new Mime("FrameMaker Interchange Format", "application/vnd.mif", ".mif");
	this->mimeList["application/vnd.framemaker"] = new Mime("FrameMaker Normal Format", "application/vnd.framemaker", ".fm");
	this->mimeList["image/x-freehand"] = new Mime("FreeHand MX", "image/x-freehand", ".fh");
	this->mimeList["application/vnd.fsc.weblaunch"] = new Mime("Friendly Software Corporation", "application/vnd.fsc.weblaunch", ".fsc");
	this->mimeList["application/vnd.frogans.fnc"] = new Mime("Frogans Player", "application/vnd.frogans.fnc", ".fnc");
	this->mimeList["application/vnd.frogans.ltf"] = new Mime("Frogans Player", "application/vnd.frogans.ltf", ".ltf");
	this->mimeList["application/vnd.fujixerox.ddd"] = new Mime("Fujitsu - Xerox 2D CAD Data", "application/vnd.fujixerox.ddd", ".ddd");
	this->mimeList["application/vnd.fujixerox.docuworks"] = new Mime("Fujitsu - Xerox DocuWorks", "application/vnd.fujixerox.docuworks", ".xdw");
	this->mimeList["application/vnd.fujixerox.docuworks.binder"] = new Mime("Fujitsu - Xerox DocuWorks Binder", "application/vnd.fujixerox.docuworks.binder", ".xbd");
	this->mimeList["application/vnd.fujitsu.oasys"] = new Mime("Fujitsu Oasys", "application/vnd.fujitsu.oasys", ".oas");
	this->mimeList["application/vnd.fujitsu.oasys2"] = new Mime("Fujitsu Oasys", "application/vnd.fujitsu.oasys2", ".oa2");
	this->mimeList["application/vnd.fujitsu.oasys3"] = new Mime("Fujitsu Oasys", "application/vnd.fujitsu.oasys3", ".oa3");
	this->mimeList["application/vnd.fujitsu.oasysgp"] = new Mime("Fujitsu Oasys", "application/vnd.fujitsu.oasysgp", ".fg5");
	this->mimeList["application/vnd.fujitsu.oasysprs"] = new Mime("Fujitsu Oasys", "application/vnd.fujitsu.oasysprs", ".bh2");
	this->mimeList["application/x-futuresplash"] = new Mime("FutureSplash Animator", "application/x-futuresplash", ".spl");
	this->mimeList["application/vnd.fuzzysheet"] = new Mime("FuzzySheet", "application/vnd.fuzzysheet", ".fzs");
	this->mimeList["image/g3fax"] = new Mime("G3 Fax Image", "image/g3fax", ".g3");
	this->mimeList["application/vnd.gmx"] = new Mime("GameMaker ActiveX", "application/vnd.gmx", ".gmx");
	this->mimeList["model/vnd.gtw"] = new Mime("Gen-Trix Studio", "model/vnd.gtw", ".gtw");
	this->mimeList["application/vnd.genomatix.tuxedo"] = new Mime("Genomatix Tuxedo Framework", "application/vnd.genomatix.tuxedo", ".txd");
	this->mimeList["application/vnd.geogebra.file"] = new Mime("GeoGebra", "application/vnd.geogebra.file", ".ggb");
	this->mimeList["application/vnd.geogebra.tool"] = new Mime("GeoGebra", "application/vnd.geogebra.tool", ".ggt");
	this->mimeList["model/vnd.gdl"] = new Mime("Geometric Description Language (GDL)", "model/vnd.gdl", ".gdl");
	this->mimeList["application/vnd.geometry-explorer"] = new Mime("GeoMetry Explorer", "application/vnd.geometry-explorer", ".gex");
	this->mimeList["application/vnd.geonext"] = new Mime("GEONExT and JSXGraph", "application/vnd.geonext", ".gxt");
	this->mimeList["application/vnd.geoplan"] = new Mime("GeoplanW", "application/vnd.geoplan", ".g2w");
	this->mimeList["application/vnd.geospace"] = new Mime("GeospacW", "application/vnd.geospace", ".g3w");
	this->mimeList["application/x-font-ghostscript"] = new Mime("Ghostscript Font", "application/x-font-ghostscript", ".gsf");
	this->mimeList["application/x-font-bdf"] = new Mime("Glyph Bitmap Distribution Format", "application/x-font-bdf", ".bdf");
	this->mimeList["application/x-gtar"] = new Mime("GNU Tar Files", "application/x-gtar", ".gtar");
	this->mimeList["application/x-texinfo"] = new Mime("GNU Texinfo Document", "application/x-texinfo", ".texinfo");
	this->mimeList["application/x-gnumeric"] = new Mime("Gnumeric", "application/x-gnumeric", ".gnumeric");
	this->mimeList["application/vnd.google-earth.kml+xml"] = new Mime("Google Earth - KML", "application/vnd.google-earth.kml+xml", ".kml");
	this->mimeList["application/vnd.google-earth.kmz"] = new Mime("Google Earth - Zipped KML", "application/vnd.google-earth.kmz", ".kmz");
	this->mimeList["application/vnd.grafeq"] = new Mime("GrafEq", "application/vnd.grafeq", ".gqf");
	this->mimeList["image/gif"] = new Mime("Graphics Interchange Format", "image/gif", ".gif");
	this->mimeList["text/vnd.graphviz"] = new Mime("Graphviz", "text/vnd.graphviz", ".gv");
	this->mimeList["application/vnd.groove-account"] = new Mime("Groove - Account", "application/vnd.groove-account", ".gac");
	this->mimeList["application/vnd.groove-help"] = new Mime("Groove - Help", "application/vnd.groove-help", ".ghf");
	this->mimeList["application/vnd.groove-identity-message"] = new Mime("Groove - Identity Message", "application/vnd.groove-identity-message", ".gim");
	this->mimeList["application/vnd.groove-injector"] = new Mime("Groove - Injector", "application/vnd.groove-injector", ".grv");
	this->mimeList["application/vnd.groove-tool-message"] = new Mime("Groove - Tool Message", "application/vnd.groove-tool-message", ".gtm");
	this->mimeList["application/vnd.groove-tool-template"] = new Mime("Groove - Tool Template", "application/vnd.groove-tool-template", ".tpl");
	this->mimeList["application/vnd.groove-vcard"] = new Mime("Groove - Vcard", "application/vnd.groove-vcard", ".vcg");
	this->mimeList["video/h261"] = new Mime("H.261", "video/h261", ".h261");
	this->mimeList["video/h263"] = new Mime("H.263", "video/h263", ".h263");
	this->mimeList["video/h264"] = new Mime("H.264", "video/h264", ".h264");
	this->mimeList["application/vnd.hp-hpid"] = new Mime("Hewlett Packard Instant Delivery", "application/vnd.hp-hpid", ".hpid");
	this->mimeList["application/vnd.hp-hps"] = new Mime("Hewlett-Packard's WebPrintSmart", "application/vnd.hp-hps", ".hps");
	this->mimeList["application/x-hdf"] = new Mime("Hierarchical Data Format", "application/x-hdf", ".hdf");
	this->mimeList["audio/vnd.rip"] = new Mime("Hit'n'Mix", "audio/vnd.rip", ".rip");
	this->mimeList["application/vnd.hbci"] = new Mime("Homebanking Computer Interface (HBCI)", "application/vnd.hbci", ".hbci");
	this->mimeList["application/vnd.hp-jlyt"] = new Mime("HP Indigo Digital Press - Job Layout Languate", "application/vnd.hp-jlyt", ".jlt");
	this->mimeList["application/vnd.hp-pcl"] = new Mime("HP Printer Command Language", "application/vnd.hp-pcl", ".pcl");
	this->mimeList["application/vnd.hp-hpgl"] = new Mime("HP-GL/2 and HP RTL", "application/vnd.hp-hpgl", ".hpgl");
	this->mimeList["application/vnd.yamaha.hv-script"] = new Mime("HV Script", "application/vnd.yamaha.hv-script", ".hvs");
	this->mimeList["application/vnd.yamaha.hv-dic"] = new Mime("HV Voice Dictionary", "application/vnd.yamaha.hv-dic", ".hvd");
	this->mimeList["application/vnd.yamaha.hv-voice"] = new Mime("HV Voice Parameter", "application/vnd.yamaha.hv-voice", ".hvp");
	this->mimeList["application/vnd.hydrostatix.sof-data"] = new Mime("Hydrostatix Master Suite", "application/vnd.hydrostatix.sof-data", ".sfd-hdstx");
	this->mimeList["application/hyperstudio"] = new Mime("Hyperstudio", "application/hyperstudio", ".stk");
	this->mimeList["application/vnd.hal+xml"] = new Mime("Hypertext Application Language", "application/vnd.hal+xml", ".hal");
	this->mimeList["text/html"] = new Mime("HyperText Markup Language (HTML)", "text/html", ".html");
	this->mimeList["application/vnd.ibm.rights-management"] = new Mime("IBM DB2 Rights Manager", "application/vnd.ibm.rights-management", ".irm");
	this->mimeList["application/vnd.ibm.secure-container"] = new Mime("IBM Electronic Media Management System - Secure Container", "application/vnd.ibm.secure-container", ".sc");
	this->mimeList["text/calendar"] = new Mime("iCalendar", "text/calendar", ".ics");
	this->mimeList["application/vnd.iccprofile"] = new Mime("ICC profile", "application/vnd.iccprofile", ".icc");
	this->mimeList["image/x-icon"] = new Mime("Icon Image", "image/x-icon", ".ico");
	this->mimeList["application/vnd.igloader"] = new Mime("igLoader", "application/vnd.igloader", ".igl");
	this->mimeList["image/ief"] = new Mime("Image Exchange Format", "image/ief", ".ief");
	this->mimeList["application/vnd.immervision-ivp"] = new Mime("ImmerVision PURE Players", "application/vnd.immervision-ivp", ".ivp");
	this->mimeList["application/vnd.immervision-ivu"] = new Mime("ImmerVision PURE Players", "application/vnd.immervision-ivu", ".ivu");
	this->mimeList["application/reginfo+xml"] = new Mime("IMS Networks", "application/reginfo+xml", ".rif");
	this->mimeList["text/vnd.in3d.3dml"] = new Mime("In3D - 3DML", "text/vnd.in3d.3dml", ".3dml");
	this->mimeList["text/vnd.in3d.spot"] = new Mime("In3D - 3DML", "text/vnd.in3d.spot", ".spot");
	this->mimeList["model/iges"] = new Mime("Initial Graphics Exchange Specification (IGES)", "model/iges", ".igs");
	this->mimeList["application/vnd.intergeo"] = new Mime("Interactive Geometry Software", "application/vnd.intergeo", ".i2g");
	this->mimeList["application/vnd.cinderella"] = new Mime("Interactive Geometry Software Cinderella", "application/vnd.cinderella", ".cdy");
	this->mimeList["application/vnd.intercon.formnet"] = new Mime("Intercon FormNet", "application/vnd.intercon.formnet", ".xpw");
	this->mimeList["application/vnd.isac.fcs"] = new Mime("International Society for Advancement of Cytometry", "application/vnd.isac.fcs", ".fcs");
	this->mimeList["application/ipfix"] = new Mime("Internet Protocol Flow Information Export", "application/ipfix", ".ipfix");
	this->mimeList["application/pkix-cert"] = new Mime("Internet Public Key Infrastructure - Certificate", "application/pkix-cert", ".cer");
	this->mimeList["application/pkixcmp"] = new Mime("Internet Public Key Infrastructure - Certificate Management Protocole", "application/pkixcmp", ".pki");
	this->mimeList["application/pkix-crl"] = new Mime("Internet Public Key Infrastructure - Certificate Revocation Lists", "application/pkix-crl", ".crl");
	this->mimeList["application/pkix-pkipath"] = new Mime("Internet Public Key Infrastructure - Certification Path", "application/pkix-pkipath", ".pkipath");
	this->mimeList["application/vnd.insors.igm"] = new Mime("IOCOM Visimeet", "application/vnd.insors.igm", ".igm");
	this->mimeList["application/vnd.ipunplugged.rcprofile"] = new Mime("IP Unplugged Roaming Client", "application/vnd.ipunplugged.rcprofile", ".rcprofile");
	this->mimeList["application/vnd.irepository.package+xml"] = new Mime("iRepository / Lucidoc Editor", "application/vnd.irepository.package+xml", ".irp");
	this->mimeList["text/vnd.sun.j2me.app-descriptor"] = new Mime("J2ME App Descriptor", "text/vnd.sun.j2me.app-descriptor", ".jad");
	this->mimeList["application/java-archive"] = new Mime("Java Archive", "application/java-archive", ".jar");
	this->mimeList["application/java-vm"] = new Mime("Java Bytecode File", "application/java-vm", ".class");
	this->mimeList["application/x-java-jnlp-file"] = new Mime("Java Network Launching Protocol", "application/x-java-jnlp-file", ".jnlp");
	this->mimeList["application/java-serialized-object"] = new Mime("Java Serialized Object", "application/java-serialized-object", ".ser");
	this->mimeList["text/x-java-source,java"] = new Mime("Java Source File", "text/x-java-source,java", ".java");
	this->mimeList["application/javascript"] = new Mime("JavaScript", "application/javascript", ".js");
	this->mimeList["application/json"] = new Mime("JavaScript Object Notation (JSON)", "application/json", ".json");
	this->mimeList["application/vnd.joost.joda-archive"] = new Mime("Joda Archive", "application/vnd.joost.joda-archive", ".joda");
	this->mimeList["video/jpm"] = new Mime("JPEG 2000 Compound Image File Format", "video/jpm", ".jpm");
	this->mimeList["image/jpeg"] = new Mime("JPEG Image", "image/jpeg", ".jpeg, .jpg");
	this->mimeList["video/jpeg"] = new Mime("JPGVideo", "video/jpeg", ".jpgv");
	this->mimeList["application/vnd.kahootz"] = new Mime("Kahootz", "application/vnd.kahootz", ".ktz");
	this->mimeList["application/vnd.chipnuts.karaoke-mmd"] = new Mime("Karaoke on Chipnuts Chipsets", "application/vnd.chipnuts.karaoke-mmd", ".mmd");
	this->mimeList["application/vnd.kde.karbon"] = new Mime("KDE KOffice Office Suite - Karbon", "application/vnd.kde.karbon", ".karbon");
	this->mimeList["application/vnd.kde.kchart"] = new Mime("KDE KOffice Office Suite - KChart", "application/vnd.kde.kchart", ".chrt");
	this->mimeList["application/vnd.kde.kformula"] = new Mime("KDE KOffice Office Suite - Kformula", "application/vnd.kde.kformula", ".kfo");
	this->mimeList["application/vnd.kde.kivio"] = new Mime("KDE KOffice Office Suite - Kivio", "application/vnd.kde.kivio", ".flw");
	this->mimeList["application/vnd.kde.kontour"] = new Mime("KDE KOffice Office Suite - Kontour", "application/vnd.kde.kontour", ".kon");
	this->mimeList["application/vnd.kde.kpresenter"] = new Mime("KDE KOffice Office Suite - Kpresenter", "application/vnd.kde.kpresenter", ".kpr");
	this->mimeList["application/vnd.kde.kspread"] = new Mime("KDE KOffice Office Suite - Kspread", "application/vnd.kde.kspread", ".ksp");
	this->mimeList["application/vnd.kde.kword"] = new Mime("KDE KOffice Office Suite - Kword", "application/vnd.kde.kword", ".kwd");
	this->mimeList["application/vnd.kenameaapp"] = new Mime("Kenamea App", "application/vnd.kenameaapp", ".htke");
	this->mimeList["application/vnd.kidspiration"] = new Mime("Kidspiration", "application/vnd.kidspiration", ".kia");
	this->mimeList["application/vnd.kinar"] = new Mime("Kinar Applications", "application/vnd.kinar", ".kne");
	this->mimeList["application/vnd.kodak-descriptor"] = new Mime("Kodak Storyshare", "application/vnd.kodak-descriptor", ".sse");
	this->mimeList["application/vnd.las.las+xml"] = new Mime("Laser App Enterprise", "application/vnd.las.las+xml", ".lasxml");
	this->mimeList["application/x-latex"] = new Mime("LaTeX", "application/x-latex", ".latex");
	this->mimeList["application/vnd.llamagraphics.life-balance.desktop"] = new Mime("Life Balance - Desktop Edition", "application/vnd.llamagraphics.life-balance.desktop", ".lbd");
	this->mimeList["application/vnd.llamagraphics.life-balance.exchange+xml"] = new Mime("Life Balance - Exchange Format", "application/vnd.llamagraphics.life-balance.exchange+xml", ".lbe");
	this->mimeList["application/vnd.jam"] = new Mime("Lightspeed Audio Lab", "application/vnd.jam", ".jam");
	this->mimeList["application/vnd.lotus-1-2-3"] = new Mime("Lotus 1-2-3", "application/vnd.lotus-1-2-3", ".123");
	this->mimeList["application/vnd.lotus-approach"] = new Mime("Lotus Approach", "application/vnd.lotus-approach", ".apr");
	this->mimeList["application/vnd.lotus-freelance"] = new Mime("Lotus Freelance", "application/vnd.lotus-freelance", ".pre");
	this->mimeList["application/vnd.lotus-notes"] = new Mime("Lotus Notes", "application/vnd.lotus-notes", ".nsf");
	this->mimeList["application/vnd.lotus-organizer"] = new Mime("Lotus Organizer", "application/vnd.lotus-organizer", ".org");
	this->mimeList["application/vnd.lotus-screencam"] = new Mime("Lotus Screencam", "application/vnd.lotus-screencam", ".scm");
	this->mimeList["application/vnd.lotus-wordpro"] = new Mime("Lotus Wordpro", "application/vnd.lotus-wordpro", ".lwp");
	this->mimeList["audio/vnd.lucent.voice"] = new Mime("Lucent Voice", "audio/vnd.lucent.voice", ".lvp");
	this->mimeList["audio/x-mpegurl"] = new Mime("M3U (Multimedia Playlist)", "audio/x-mpegurl", ".m3u");
	this->mimeList["video/x-m4v"] = new Mime("M4v", "video/x-m4v", ".m4v");
	this->mimeList["application/mac-binhex40"] = new Mime("Macintosh BinHex 4.0", "application/mac-binhex40", ".hqx");
	this->mimeList["application/vnd.macports.portpkg"] = new Mime("MacPorts Port System", "application/vnd.macports.portpkg", ".portpkg");
	this->mimeList["application/vnd.osgeo.mapguide.package"] = new Mime("MapGuide DBXML", "application/vnd.osgeo.mapguide.package", ".mgp");
	this->mimeList["application/marc"] = new Mime("MARC Formats", "application/marc", ".mrc");
	this->mimeList["application/marcxml+xml"] = new Mime("MARC21 XML Schema", "application/marcxml+xml", ".mrcx");
	this->mimeList["application/mxf"] = new Mime("Material Exchange Format", "application/mxf", ".mxf");
	this->mimeList["application/vnd.wolfram.player"] = new Mime("Mathematica Notebook Player", "application/vnd.wolfram.player", ".nbp");
	this->mimeList["application/mathematica"] = new Mime("Mathematica Notebooks", "application/mathematica", ".ma");
	this->mimeList["application/mathml+xml"] = new Mime("Mathematical Markup Language", "application/mathml+xml", ".mathml");
	this->mimeList["application/mbox"] = new Mime("Mbox database files", "application/mbox", ".mbox");
	this->mimeList["application/vnd.medcalcdata"] = new Mime("MedCalc", "application/vnd.medcalcdata", ".mc1");
	this->mimeList["application/mediaservercontrol+xml"] = new Mime("Media Server Control Markup Language", "application/mediaservercontrol+xml", ".mscml");
	this->mimeList["application/vnd.mediastation.cdkey"] = new Mime("MediaRemote", "application/vnd.mediastation.cdkey", ".cdkey");
	this->mimeList["application/vnd.mfer"] = new Mime("Medical Waveform Encoding Format", "application/vnd.mfer", ".mwf");
	this->mimeList["application/vnd.mfmp"] = new Mime("Melody Format for Mobile Platform", "application/vnd.mfmp", ".mfm");
	this->mimeList["model/mesh"] = new Mime("Mesh Data Type", "model/mesh", ".msh");
	this->mimeList["application/mads+xml"] = new Mime("Metadata Authority Description Schema", "application/mads+xml", ".mads");
	this->mimeList["application/mets+xml"] = new Mime("Metadata Encoding and Transmission Standard", "application/mets+xml", ".mets");
	this->mimeList["application/mods+xml"] = new Mime("Metadata Object Description Schema", "application/mods+xml", ".mods");
	this->mimeList["application/metalink4+xml"] = new Mime("Metalink", "application/metalink4+xml", ".meta4");
	this->mimeList["application/vnd.ms-powerpoint.template.macroenabled.12"] = new Mime("Micosoft PowerPoint - Macro-Enabled Template File", "application/vnd.ms-powerpoint.template.macroenabled.12", ".potm");
	this->mimeList["application/vnd.ms-word.document.macroenabled.12"] = new Mime("Micosoft Word - Macro-Enabled Document", "application/vnd.ms-word.document.macroenabled.12", ".docm");
	this->mimeList["application/vnd.ms-word.template.macroenabled.12"] = new Mime("Micosoft Word - Macro-Enabled Template", "application/vnd.ms-word.template.macroenabled.12", ".dotm");
	this->mimeList["application/vnd.mcd"] = new Mime("Micro CADAM Helix D&D", "application/vnd.mcd", ".mcd");
	this->mimeList["application/vnd.micrografx.flo"] = new Mime("Micrografx", "application/vnd.micrografx.flo", ".flo");
	this->mimeList["application/vnd.micrografx.igx"] = new Mime("Micrografx iGrafx Professional", "application/vnd.micrografx.igx", ".igx");
	this->mimeList["application/vnd.eszigno3+xml"] = new Mime("MICROSEC e-Szign¢", "application/vnd.eszigno3+xml", ".es3");
	this->mimeList["application/x-msaccess"] = new Mime("Microsoft Access", "application/x-msaccess", ".mdb");
	this->mimeList["video/x-ms-asf"] = new Mime("Microsoft Advanced Systems Format (ASF)", "video/x-ms-asf", ".asf");
	this->mimeList["application/x-msdownload"] = new Mime("Microsoft Application", "application/x-msdownload", ".exe");
	this->mimeList["application/vnd.ms-artgalry"] = new Mime("Microsoft Artgalry", "application/vnd.ms-artgalry", ".cil");
	this->mimeList["application/vnd.ms-cab-compressed"] = new Mime("Microsoft Cabinet File", "application/vnd.ms-cab-compressed", ".cab");
	this->mimeList["application/vnd.ms-ims"] = new Mime("Microsoft Class Server", "application/vnd.ms-ims", ".ims");
	this->mimeList["application/x-ms-application"] = new Mime("Microsoft ClickOnce", "application/x-ms-application", ".application");
	this->mimeList["application/x-msclip"] = new Mime("Microsoft Clipboard Clip", "application/x-msclip", ".clp");
	this->mimeList["image/vnd.ms-modi"] = new Mime("Microsoft Document Imaging Format", "image/vnd.ms-modi", ".mdi");
	this->mimeList["application/vnd.ms-fontobject"] = new Mime("Microsoft Embedded OpenType", "application/vnd.ms-fontobject", ".eot");
	this->mimeList["application/vnd.ms-excel"] = new Mime("Microsoft Excel", "application/vnd.ms-excel", ".xls");
	this->mimeList["application/vnd.ms-excel.addin.macroenabled.12"] = new Mime("Microsoft Excel - Add-In File", "application/vnd.ms-excel.addin.macroenabled.12", ".xlam");
	this->mimeList["application/vnd.ms-excel.sheet.binary.macroenabled.12"] = new Mime("Microsoft Excel - Binary Workbook", "application/vnd.ms-excel.sheet.binary.macroenabled.12", ".xlsb");
	this->mimeList["application/vnd.ms-excel.template.macroenabled.12"] = new Mime("Microsoft Excel - Macro-Enabled Template File", "application/vnd.ms-excel.template.macroenabled.12", ".xltm");
	this->mimeList["application/vnd.ms-excel.sheet.macroenabled.12"] = new Mime("Microsoft Excel - Macro-Enabled Workbook", "application/vnd.ms-excel.sheet.macroenabled.12", ".xlsm");
	this->mimeList["application/vnd.ms-htmlhelp"] = new Mime("Microsoft Html Help File", "application/vnd.ms-htmlhelp", ".chm");
	this->mimeList["application/x-mscardfile"] = new Mime("Microsoft Information Card", "application/x-mscardfile", ".crd");
	this->mimeList["application/vnd.ms-lrm"] = new Mime("Microsoft Learning Resource Module", "application/vnd.ms-lrm", ".lrm");
	this->mimeList["application/x-msmediaview"] = new Mime("Microsoft MediaView", "application/x-msmediaview", ".mvb");
	this->mimeList["application/x-msmoney"] = new Mime("Microsoft Money", "application/x-msmoney", ".mny");
	this->mimeList["application/vnd.openxmlformats-officedocument.presentationml.presentation"] = new Mime("Microsoft Office - OOXML - Presentation", "application/vnd.openxmlformats-officedocument.presentationml.presentation", ".pptx");
	this->mimeList["application/vnd.openxmlformats-officedocument.presentationml.slide"] = new Mime("Microsoft Office - OOXML - Presentation (Slide)", "application/vnd.openxmlformats-officedocument.presentationml.slide", ".sldx");
	this->mimeList["application/vnd.openxmlformats-officedocument.presentationml.slideshow"] = new Mime("Microsoft Office - OOXML - Presentation (Slideshow)", "application/vnd.openxmlformats-officedocument.presentationml.slideshow", ".ppsx");
	this->mimeList["application/vnd.openxmlformats-officedocument.presentationml.template"] = new Mime("Microsoft Office - OOXML - Presentation Template", "application/vnd.openxmlformats-officedocument.presentationml.template", ".potx");
	this->mimeList["application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"] = new Mime("Microsoft Office - OOXML - Spreadsheet", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", ".xlsx");
	this->mimeList["application/vnd.openxmlformats-officedocument.spreadsheetml.template"] = new Mime("Microsoft Office - OOXML - Spreadsheet Teplate", "application/vnd.openxmlformats-officedocument.spreadsheetml.template", ".xltx");
	this->mimeList["application/vnd.openxmlformats-officedocument.wordprocessingml.document"] = new Mime("Microsoft Office - OOXML - Word Document", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", ".docx");
	this->mimeList["application/vnd.openxmlformats-officedocument.wordprocessingml.template"] = new Mime("Microsoft Office - OOXML - Word Document Template", "application/vnd.openxmlformats-officedocument.wordprocessingml.template", ".dotx");
	this->mimeList["application/x-msbinder"] = new Mime("Microsoft Office Binder", "application/x-msbinder", ".obd");
	this->mimeList["application/vnd.ms-officetheme"] = new Mime("Microsoft Office System Release Theme", "application/vnd.ms-officetheme", ".thmx");
	this->mimeList["application/onenote"] = new Mime("Microsoft OneNote", "application/onenote", ".onetoc");
	this->mimeList["audio/vnd.ms-playready.media.pya"] = new Mime("Microsoft PlayReady Ecosystem", "audio/vnd.ms-playready.media.pya", ".pya");
	this->mimeList["video/vnd.ms-playready.media.pyv"] = new Mime("Microsoft PlayReady Ecosystem Video", "video/vnd.ms-playready.media.pyv", ".pyv");
	this->mimeList["application/vnd.ms-powerpoint"] = new Mime("Microsoft PowerPoint", "application/vnd.ms-powerpoint", ".ppt");
	this->mimeList["application/vnd.ms-powerpoint.addin.macroenabled.12"] = new Mime("Microsoft PowerPoint - Add-in file", "application/vnd.ms-powerpoint.addin.macroenabled.12", ".ppam");
	this->mimeList["application/vnd.ms-powerpoint.slide.macroenabled.12"] = new Mime("Microsoft PowerPoint - Macro-Enabled Open XML Slide", "application/vnd.ms-powerpoint.slide.macroenabled.12", ".sldm");
	this->mimeList["application/vnd.ms-powerpoint.presentation.macroenabled.12"] = new Mime("Microsoft PowerPoint - Macro-Enabled Presentation File", "application/vnd.ms-powerpoint.presentation.macroenabled.12", ".pptm");
	this->mimeList["application/vnd.ms-powerpoint.slideshow.macroenabled.12"] = new Mime("Microsoft PowerPoint - Macro-Enabled Slide Show File", "application/vnd.ms-powerpoint.slideshow.macroenabled.12", ".ppsm");
	this->mimeList["application/vnd.ms-project"] = new Mime("Microsoft Project", "application/vnd.ms-project", ".mpp");
	this->mimeList["application/x-mspublisher"] = new Mime("Microsoft Publisher", "application/x-mspublisher", ".pub");
	this->mimeList["application/x-msschedule"] = new Mime("Microsoft Schedule+", "application/x-msschedule", ".scd");
	this->mimeList["application/x-silverlight-app"] = new Mime("Microsoft Silverlight", "application/x-silverlight-app", ".xap");
	this->mimeList["application/vnd.ms-pki.stl"] = new Mime("Microsoft Trust UI Provider - Certificate Trust Link", "application/vnd.ms-pki.stl", ".stl");
	this->mimeList["application/vnd.ms-pki.seccat"] = new Mime("Microsoft Trust UI Provider - Security Catalog", "application/vnd.ms-pki.seccat", ".cat");
	this->mimeList["application/vnd.visio"] = new Mime("Microsoft Visio", "application/vnd.visio", ".vsd");
	this->mimeList["video/x-ms-wm"] = new Mime("Microsoft Windows Media", "video/x-ms-wm", ".wm");
	this->mimeList["audio/x-ms-wma"] = new Mime("Microsoft Windows Media Audio", "audio/x-ms-wma", ".wma");
	this->mimeList["audio/x-ms-wax"] = new Mime("Microsoft Windows Media Audio Redirector", "audio/x-ms-wax", ".wax");
	this->mimeList["video/x-ms-wmx"] = new Mime("Microsoft Windows Media Audio/Video Playlist", "video/x-ms-wmx", ".wmx");
	this->mimeList["application/x-ms-wmd"] = new Mime("Microsoft Windows Media Player Download Package", "application/x-ms-wmd", ".wmd");
	this->mimeList["application/vnd.ms-wpl"] = new Mime("Microsoft Windows Media Player Playlist", "application/vnd.ms-wpl", ".wpl");
	this->mimeList["application/x-ms-wmz"] = new Mime("Microsoft Windows Media Player Skin Package", "application/x-ms-wmz", ".wmz");
	this->mimeList["video/x-ms-wmv"] = new Mime("Microsoft Windows Media Video", "video/x-ms-wmv", ".wmv");
	this->mimeList["video/x-ms-wvx"] = new Mime("Microsoft Windows Media Video Playlist", "video/x-ms-wvx", ".wvx");
	this->mimeList["application/x-msmetafile"] = new Mime("Microsoft Windows Metafile", "application/x-msmetafile", ".wmf");
	this->mimeList["application/x-msterminal"] = new Mime("Microsoft Windows Terminal Services", "application/x-msterminal", ".trm");
	this->mimeList["application/msword"] = new Mime("Microsoft Word", "application/msword", ".doc");
	this->mimeList["application/x-mswrite"] = new Mime("Microsoft Wordpad", "application/x-mswrite", ".wri");
	this->mimeList["application/vnd.ms-works"] = new Mime("Microsoft Works", "application/vnd.ms-works", ".wps");
	this->mimeList["application/x-ms-xbap"] = new Mime("Microsoft XAML Browser Application", "application/x-ms-xbap", ".xbap");
	this->mimeList["application/vnd.ms-xpsdocument"] = new Mime("Microsoft XML Paper Specification", "application/vnd.ms-xpsdocument", ".xps");
	this->mimeList["audio/midi"] = new Mime("MIDI - Musical Instrument Digital Interface", "audio/midi", ".mid");
	this->mimeList["application/vnd.ibm.minipay"] = new Mime("MiniPay", "application/vnd.ibm.minipay", ".mpy");
	this->mimeList["application/vnd.ibm.modcap"] = new Mime("MO:DCA-P", "application/vnd.ibm.modcap", ".afp");
	this->mimeList["application/vnd.jcp.javame.midlet-rms"] = new Mime("Mobile Information Device Profile", "application/vnd.jcp.javame.midlet-rms", ".rms");
	this->mimeList["application/vnd.tmobile-livetv"] = new Mime("MobileTV", "application/vnd.tmobile-livetv", ".tmo");
	this->mimeList["application/x-mobipocket-ebook"] = new Mime("Mobipocket", "application/x-mobipocket-ebook", ".prc");
	this->mimeList["application/vnd.mobius.mbk"] = new Mime("Mobius Management Systems - Basket file", "application/vnd.mobius.mbk", ".mbk");
	this->mimeList["application/vnd.mobius.dis"] = new Mime("Mobius Management Systems - Distribution Database", "application/vnd.mobius.dis", ".dis");
	this->mimeList["application/vnd.mobius.plc"] = new Mime("Mobius Management Systems - Policy Definition Language File", "application/vnd.mobius.plc", ".plc");
	this->mimeList["application/vnd.mobius.mqy"] = new Mime("Mobius Management Systems - Query File", "application/vnd.mobius.mqy", ".mqy");
	this->mimeList["application/vnd.mobius.msl"] = new Mime("Mobius Management Systems - Script Language", "application/vnd.mobius.msl", ".msl");
	this->mimeList["application/vnd.mobius.txf"] = new Mime("Mobius Management Systems - Topic Index File", "application/vnd.mobius.txf", ".txf");
	this->mimeList["application/vnd.mobius.daf"] = new Mime("Mobius Management Systems - UniversalArchive", "application/vnd.mobius.daf", ".daf");
	this->mimeList["text/vnd.fly"] = new Mime("mod_fly / fly.cgi", "text/vnd.fly", ".fly");
	this->mimeList["application/vnd.mophun.certificate"] = new Mime("Mophun Certificate", "application/vnd.mophun.certificate", ".mpc");
	this->mimeList["application/vnd.mophun.application"] = new Mime("Mophun VM", "application/vnd.mophun.application", ".mpn");
	this->mimeList["video/mj2"] = new Mime("Motion JPEG 2000", "video/mj2", ".mj2");
	this->mimeList["audio/mpeg"] = new Mime("MPEG Audio", "audio/mpeg", ".mpga");
	this->mimeList["video/vnd.mpegurl"] = new Mime("MPEG Url", "video/vnd.mpegurl", ".mxu");
	this->mimeList["video/mpeg"] = new Mime("MPEG Video", "video/mpeg", ".mpeg");
	this->mimeList["application/mp21"] = new Mime("MPEG-21", "application/mp21", ".m21");
	this->mimeList["audio/mp4"] = new Mime("MPEG-4 Audio", "audio/mp4", ".mp4a");
	this->mimeList["video/mp4"] = new Mime("MPEG-4 Video", "video/mp4", ".mp4");
	this->mimeList["application/mp4"] = new Mime("MPEG4", "application/mp4", ".mp4");
	this->mimeList["application/vnd.apple.mpegurl"] = new Mime("Multimedia Playlist Unicode", "application/vnd.apple.mpegurl", ".m3u8");
	this->mimeList["application/vnd.musician"] = new Mime("MUsical Score Interpreted Code Invented for the ASCII designation of Notation", "application/vnd.musician", ".mus");
	this->mimeList["application/vnd.muvee.style"] = new Mime("Muvee Automatic Video Editing", "application/vnd.muvee.style", ".msty");
	this->mimeList["application/xv+xml"] = new Mime("MXML", "application/xv+xml", ".mxml");
	this->mimeList["application/vnd.nokia.n-gage.data"] = new Mime("N-Gage Game Data", "application/vnd.nokia.n-gage.data", ".ngdat");
	this->mimeList["application/vnd.nokia.n-gage.symbian.install"] = new Mime("N-Gage Game Installer", "application/vnd.nokia.n-gage.symbian.install", ".n-gage");
	this->mimeList["application/x-dtbncx+xml"] = new Mime("Navigation Control file for XML (for ePub)", "application/x-dtbncx+xml", ".ncx");
	this->mimeList["application/x-netcdf"] = new Mime("Network Common Data Form (NetCDF)", "application/x-netcdf", ".nc");
	this->mimeList["application/vnd.neurolanguage.nlu"] = new Mime("neuroLanguage", "application/vnd.neurolanguage.nlu", ".nlu");
	this->mimeList["application/vnd.dna"] = new Mime("New Moon Liftoff/DNA", "application/vnd.dna", ".dna");
	this->mimeList["application/vnd.noblenet-directory"] = new Mime("NobleNet Directory", "application/vnd.noblenet-directory", ".nnd");
	this->mimeList["application/vnd.noblenet-sealer"] = new Mime("NobleNet Sealer", "application/vnd.noblenet-sealer", ".nns");
	this->mimeList["application/vnd.noblenet-web"] = new Mime("NobleNet Web", "application/vnd.noblenet-web", ".nnw");
	this->mimeList["application/vnd.nokia.radio-preset"] = new Mime("Nokia Radio Application - Preset", "application/vnd.nokia.radio-preset", ".rpst");
	this->mimeList["application/vnd.nokia.radio-presets"] = new Mime("Nokia Radio Application - Preset", "application/vnd.nokia.radio-presets", ".rpss");
	this->mimeList["text/n3"] = new Mime("Notation3", "text/n3", ".n3");
	this->mimeList["application/vnd.novadigm.edm"] = new Mime("Novadigm's RADIA and EDM products", "application/vnd.novadigm.edm", ".edm");
	this->mimeList["application/vnd.novadigm.edx"] = new Mime("Novadigm's RADIA and EDM products", "application/vnd.novadigm.edx", ".edx");
	this->mimeList["application/vnd.novadigm.ext"] = new Mime("Novadigm's RADIA and EDM products", "application/vnd.novadigm.ext", ".ext");
	this->mimeList["application/vnd.flographit"] = new Mime("NpGraphIt", "application/vnd.flographit", ".gph");
	this->mimeList["audio/vnd.nuera.ecelp4800"] = new Mime("Nuera ECELP 4800", "audio/vnd.nuera.ecelp4800", ".ecelp4800");
	this->mimeList["audio/vnd.nuera.ecelp7470"] = new Mime("Nuera ECELP 7470", "audio/vnd.nuera.ecelp7470", ".ecelp7470");
	this->mimeList["audio/vnd.nuera.ecelp9600"] = new Mime("Nuera ECELP 9600", "audio/vnd.nuera.ecelp9600", ".ecelp9600");
	this->mimeList["application/oda"] = new Mime("Office Document Architecture", "application/oda", ".oda");
	this->mimeList["application/ogg"] = new Mime("Ogg", "application/ogg", ".ogx");
	this->mimeList["audio/ogg"] = new Mime("Ogg Audio", "audio/ogg", ".oga");
	this->mimeList["video/ogg"] = new Mime("Ogg Video", "video/ogg", ".ogv");
	this->mimeList["application/vnd.oma.dd2+xml"] = new Mime("OMA Download Agents", "application/vnd.oma.dd2+xml", ".dd2");
	this->mimeList["application/vnd.oasis.opendocument.text-web"] = new Mime("Open Document Text Web", "application/vnd.oasis.opendocument.text-web", ".oth");
	this->mimeList["application/oebps-package+xml"] = new Mime("Open eBook Publication Structure", "application/oebps-package+xml", ".opf");
	this->mimeList["application/vnd.intu.qbo"] = new Mime("Open Financial Exchange", "application/vnd.intu.qbo", ".qbo");
	this->mimeList["application/vnd.openofficeorg.extension"] = new Mime("Open Office Extension", "application/vnd.openofficeorg.extension", ".oxt");
	this->mimeList["application/vnd.yamaha.openscoreformat"] = new Mime("Open Score Format", "application/vnd.yamaha.openscoreformat", ".osf");
	this->mimeList["audio/webm"] = new Mime("Open Web Media Project - Audio", "audio/webm", ".weba");
	this->mimeList["video/webm"] = new Mime("Open Web Media Project - Video", "video/webm", ".webm");
	this->mimeList["application/vnd.oasis.opendocument.chart"] = new Mime("OpenDocument Chart", "application/vnd.oasis.opendocument.chart", ".odc");
	this->mimeList["application/vnd.oasis.opendocument.chart-template"] = new Mime("OpenDocument Chart Template", "application/vnd.oasis.opendocument.chart-template", ".otc");
	this->mimeList["application/vnd.oasis.opendocument.database"] = new Mime("OpenDocument Database", "application/vnd.oasis.opendocument.database", ".odb");
	this->mimeList["application/vnd.oasis.opendocument.formula"] = new Mime("OpenDocument Formula", "application/vnd.oasis.opendocument.formula", ".odf");
	this->mimeList["application/vnd.oasis.opendocument.formula-template"] = new Mime("OpenDocument Formula Template", "application/vnd.oasis.opendocument.formula-template", ".odft");
	this->mimeList["application/vnd.oasis.opendocument.graphics"] = new Mime("OpenDocument Graphics", "application/vnd.oasis.opendocument.graphics", ".odg");
	this->mimeList["application/vnd.oasis.opendocument.graphics-template"] = new Mime("OpenDocument Graphics Template", "application/vnd.oasis.opendocument.graphics-template", ".otg");
	this->mimeList["application/vnd.oasis.opendocument.image"] = new Mime("OpenDocument Image", "application/vnd.oasis.opendocument.image", ".odi");
	this->mimeList["application/vnd.oasis.opendocument.image-template"] = new Mime("OpenDocument Image Template", "application/vnd.oasis.opendocument.image-template", ".oti");
	this->mimeList["application/vnd.oasis.opendocument.presentation"] = new Mime("OpenDocument Presentation", "application/vnd.oasis.opendocument.presentation", ".odp");
	this->mimeList["application/vnd.oasis.opendocument.presentation-template"] = new Mime("OpenDocument Presentation Template", "application/vnd.oasis.opendocument.presentation-template", ".otp");
	this->mimeList["application/vnd.oasis.opendocument.spreadsheet"] = new Mime("OpenDocument Spreadsheet", "application/vnd.oasis.opendocument.spreadsheet", ".ods");
	this->mimeList["application/vnd.oasis.opendocument.spreadsheet-template"] = new Mime("OpenDocument Spreadsheet Template", "application/vnd.oasis.opendocument.spreadsheet-template", ".ots");
	this->mimeList["application/vnd.oasis.opendocument.text"] = new Mime("OpenDocument Text", "application/vnd.oasis.opendocument.text", ".odt");
	this->mimeList["application/vnd.oasis.opendocument.text-master"] = new Mime("OpenDocument Text Master", "application/vnd.oasis.opendocument.text-master", ".odm");
	this->mimeList["application/vnd.oasis.opendocument.text-template"] = new Mime("OpenDocument Text Template", "application/vnd.oasis.opendocument.text-template", ".ott");
	this->mimeList["image/ktx"] = new Mime("OpenGL Textures (KTX)", "image/ktx", ".ktx");
	this->mimeList["application/vnd.sun.xml.calc"] = new Mime("OpenOffice - Calc (Spreadsheet)", "application/vnd.sun.xml.calc", ".sxc");
	this->mimeList["application/vnd.sun.xml.calc.template"] = new Mime("OpenOffice - Calc Template (Spreadsheet)", "application/vnd.sun.xml.calc.template", ".stc");
	this->mimeList["application/vnd.sun.xml.draw"] = new Mime("OpenOffice - Draw (Graphics)", "application/vnd.sun.xml.draw", ".sxd");
	this->mimeList["application/vnd.sun.xml.draw.template"] = new Mime("OpenOffice - Draw Template (Graphics)", "application/vnd.sun.xml.draw.template", ".std");
	this->mimeList["application/vnd.sun.xml.impress"] = new Mime("OpenOffice - Impress (Presentation)", "application/vnd.sun.xml.impress", ".sxi");
	this->mimeList["application/vnd.sun.xml.impress.template"] = new Mime("OpenOffice - Impress Template (Presentation)", "application/vnd.sun.xml.impress.template", ".sti");
	this->mimeList["application/vnd.sun.xml.math"] = new Mime("OpenOffice - Math (Formula)", "application/vnd.sun.xml.math", ".sxm");
	this->mimeList["application/vnd.sun.xml.writer"] = new Mime("OpenOffice - Writer (Text - HTML)", "application/vnd.sun.xml.writer", ".sxw");
	this->mimeList["application/vnd.sun.xml.writer.global"] = new Mime("OpenOffice - Writer (Text - HTML)", "application/vnd.sun.xml.writer.global", ".sxg");
	this->mimeList["application/vnd.sun.xml.writer.template"] = new Mime("OpenOffice - Writer Template (Text - HTML)", "application/vnd.sun.xml.writer.template", ".stw");
	this->mimeList["application/x-font-otf"] = new Mime("OpenType Font File", "application/x-font-otf", ".otf");
	this->mimeList["application/vnd.yamaha.openscoreformat.osfpvg+xml"] = new Mime("OSFPVG", "application/vnd.yamaha.openscoreformat.osfpvg+xml", ".osfpvg");
	this->mimeList["application/vnd.osgi.dp"] = new Mime("OSGi Deployment Package", "application/vnd.osgi.dp", ".dp");
	this->mimeList["application/vnd.palm"] = new Mime("PalmOS Data", "application/vnd.palm", ".pdb");
	this->mimeList["text/x-pascal"] = new Mime("Pascal Source File", "text/x-pascal", ".p");
	this->mimeList["application/vnd.pawaafile"] = new Mime("PawaaFILE", "application/vnd.pawaafile", ".paw");
	this->mimeList["application/vnd.hp-pclxl"] = new Mime("PCL 6 Enhanced (Formely PCL XL)", "application/vnd.hp-pclxl", ".pclxl");
	this->mimeList["application/vnd.picsel"] = new Mime("Pcsel eFIF File", "application/vnd.picsel", ".efif");
	this->mimeList["image/x-pcx"] = new Mime("PCX Image", "image/x-pcx", ".pcx");
	this->mimeList["image/vnd.adobe.photoshop"] = new Mime("Photoshop Document", "image/vnd.adobe.photoshop", ".psd");
	this->mimeList["application/pics-rules"] = new Mime("PICSRules", "application/pics-rules", ".prf");
	this->mimeList["image/x-pict"] = new Mime("PICT Image", "image/x-pict", ".pic");
	this->mimeList["application/x-chat"] = new Mime("pIRCh", "application/x-chat", ".chat");
	this->mimeList["application/pkcs10"] = new Mime("PKCS #10 - Certification Request Standard", "application/pkcs10", ".p10");
	this->mimeList["application/x-pkcs12"] = new Mime("PKCS #12 - Personal Information Exchange Syntax Standard", "application/x-pkcs12", ".p12");
	this->mimeList["application/pkcs7-mime"] = new Mime("PKCS #7 - Cryptographic Message Syntax Standard", "application/pkcs7-mime", ".p7m");
	this->mimeList["application/pkcs7-signature"] = new Mime("PKCS #7 - Cryptographic Message Syntax Standard", "application/pkcs7-signature", ".p7s");
	this->mimeList["application/x-pkcs7-certreqresp"] = new Mime("PKCS #7 - Cryptographic Message Syntax Standard (Certificate Request Response)", "application/x-pkcs7-certreqresp", ".p7r");
	this->mimeList["application/x-pkcs7-certificates"] = new Mime("PKCS #7 - Cryptographic Message Syntax Standard (Certificates)", "application/x-pkcs7-certificates", ".p7b");
	this->mimeList["application/pkcs8"] = new Mime("PKCS #8 - Private-Key Information Syntax Standard", "application/pkcs8", ".p8");
	this->mimeList["application/vnd.pocketlearn"] = new Mime("PocketLearn Viewers", "application/vnd.pocketlearn", ".plf");
	this->mimeList["image/x-portable-anymap"] = new Mime("Portable Anymap Image", "image/x-portable-anymap", ".pnm");
	this->mimeList["image/x-portable-bitmap"] = new Mime("Portable Bitmap Format", "image/x-portable-bitmap", ".pbm");
	this->mimeList["application/x-font-pcf"] = new Mime("Portable Compiled Format", "application/x-font-pcf", ".pcf");
	this->mimeList["application/font-tdpfr"] = new Mime("Portable Font Resource", "application/font-tdpfr", ".pfr");
	this->mimeList["application/x-chess-pgn"] = new Mime("Portable Game Notation (Chess Games)", "application/x-chess-pgn", ".pgn");
	this->mimeList["image/x-portable-graymap"] = new Mime("Portable Graymap Format", "image/x-portable-graymap", ".pgm");
	this->mimeList["image/png"] = new Mime("Portable Network Graphics (PNG)", "image/png", ".png");
	this->mimeList["image/x-portable-pixmap"] = new Mime("Portable Pixmap Format", "image/x-portable-pixmap", ".ppm");
	this->mimeList["application/pskc+xml"] = new Mime("Portable Symmetric Key Container", "application/pskc+xml", ".pskcxml");
	this->mimeList["application/vnd.ctc-posml"] = new Mime("PosML", "application/vnd.ctc-posml", ".pml");
	this->mimeList["application/postscript"] = new Mime("PostScript", "application/postscript", ".ai");
	this->mimeList["application/x-font-type1"] = new Mime("PostScript Fonts", "application/x-font-type1", ".pfa");
	this->mimeList["application/vnd.powerbuilder6"] = new Mime("PowerBuilder", "application/vnd.powerbuilder6", ".pbd");
	this->mimeList["application/pgp-encrypted"] = new Mime("Pretty Good Privacy", "application/pgp-encrypted", "");
	this->mimeList["application/pgp-signature"] = new Mime("Pretty Good Privacy - Signature", "application/pgp-signature", ".pgp");
	this->mimeList["application/vnd.previewsystems.box"] = new Mime("Preview Systems ZipLock/VBox", "application/vnd.previewsystems.box", ".box");
	this->mimeList["application/vnd.pvi.ptid1"] = new Mime("Princeton Video Image", "application/vnd.pvi.ptid1", ".ptid");
	this->mimeList["application/pls+xml"] = new Mime("Pronunciation Lexicon Specification", "application/pls+xml", ".pls");
	this->mimeList["application/vnd.pg.format"] = new Mime("Proprietary P&G Standard Reporting System", "application/vnd.pg.format", ".str");
	this->mimeList["application/vnd.pg.osasli"] = new Mime("Proprietary P&G Standard Reporting System", "application/vnd.pg.osasli", ".ei6");
	this->mimeList["text/prs.lines.tag"] = new Mime("PRS Lines Tag", "text/prs.lines.tag", ".dsc");
	this->mimeList["application/x-font-linux-psf"] = new Mime("PSF Fonts", "application/x-font-linux-psf", ".psf");
	this->mimeList["application/vnd.publishare-delta-tree"] = new Mime("PubliShare Objects", "application/vnd.publishare-delta-tree", ".qps");
	this->mimeList["application/vnd.pmi.widget"] = new Mime("Qualcomm's Plaza Mobile Internet", "application/vnd.pmi.widget", ".wg");
	this->mimeList["application/vnd.quark.quarkxpress"] = new Mime("QuarkXpress", "application/vnd.quark.quarkxpress", ".qxd");
	this->mimeList["application/vnd.epson.esf"] = new Mime("QUASS Stream Player", "application/vnd.epson.esf", ".esf");
	this->mimeList["application/vnd.epson.msf"] = new Mime("QUASS Stream Player", "application/vnd.epson.msf", ".msf");
	this->mimeList["application/vnd.epson.ssf"] = new Mime("QUASS Stream Player", "application/vnd.epson.ssf", ".ssf");
	this->mimeList["application/vnd.epson.quickanime"] = new Mime("QuickAnime Player", "application/vnd.epson.quickanime", ".qam");
	this->mimeList["application/vnd.intu.qfx"] = new Mime("Quicken", "application/vnd.intu.qfx", ".qfx");
	this->mimeList["video/quicktime"] = new Mime("Quicktime Video", "video/quicktime", ".qt");
	this->mimeList["application/x-rar-compressed"] = new Mime("RAR Archive", "application/x-rar-compressed", ".rar");
	this->mimeList["audio/x-pn-realaudio"] = new Mime("Real Audio Sound", "audio/x-pn-realaudio", ".ram");
	this->mimeList["audio/x-pn-realaudio-plugin"] = new Mime("Real Audio Sound", "audio/x-pn-realaudio-plugin", ".rmp");
	this->mimeList["application/rsd+xml"] = new Mime("Really Simple Discovery", "application/rsd+xml", ".rsd");
	this->mimeList["application/vnd.rn-realmedia"] = new Mime("RealMedia", "application/vnd.rn-realmedia", ".rm");
	this->mimeList["application/vnd.realvnc.bed"] = new Mime("RealVNC", "application/vnd.realvnc.bed", ".bed");
	this->mimeList["application/vnd.recordare.musicxml"] = new Mime("Recordare Applications", "application/vnd.recordare.musicxml", ".mxl");
	this->mimeList["application/vnd.recordare.musicxml+xml"] = new Mime("Recordare Applications", "application/vnd.recordare.musicxml+xml", ".musicxml");
	this->mimeList["application/relax-ng-compact-syntax"] = new Mime("Relax NG Compact Syntax", "application/relax-ng-compact-syntax", ".rnc");
	this->mimeList["application/vnd.data-vision.rdz"] = new Mime("RemoteDocs R-Viewer", "application/vnd.data-vision.rdz", ".rdz");
	this->mimeList["application/rdf+xml"] = new Mime("Resource Description Framework", "application/rdf+xml", ".rdf");
	this->mimeList["application/vnd.cloanto.rp9"] = new Mime("RetroPlatform Player", "application/vnd.cloanto.rp9", ".rp9");
	this->mimeList["application/vnd.jisp"] = new Mime("RhymBox", "application/vnd.jisp", ".jisp");
	this->mimeList["application/rtf"] = new Mime("Rich Text Format", "application/rtf", ".rtf");
	this->mimeList["text/richtext"] = new Mime("Rich Text Format (RTF)", "text/richtext", ".rtx");
	this->mimeList["application/vnd.route66.link66+xml"] = new Mime("ROUTE 66 Location Based Services", "application/vnd.route66.link66+xml", ".link66");
	this->mimeList["application/rss+xml"] = new Mime("RSS - Really Simple Syndication", "application/rss+xml", ".rss, .xml");
	this->mimeList["application/shf+xml"] = new Mime("S Hexdump Format", "application/shf+xml", ".shf");
	this->mimeList["application/vnd.sailingtracker.track"] = new Mime("SailingTracker", "application/vnd.sailingtracker.track", ".st");
	this->mimeList["image/svg+xml"] = new Mime("Scalable Vector Graphics (SVG)", "image/svg+xml", ".svg");
	this->mimeList["application/vnd.sus-calendar"] = new Mime("ScheduleUs", "application/vnd.sus-calendar", ".sus");
	this->mimeList["application/sru+xml"] = new Mime("Search/Retrieve via URL Response Format", "application/sru+xml", ".sru");
	this->mimeList["application/set-payment-initiation"] = new Mime("Secure Electronic Transaction - Payment", "application/set-payment-initiation", ".setpay");
	this->mimeList["application/set-registration-initiation"] = new Mime("Secure Electronic Transaction - Registration", "application/set-registration-initiation", ".setreg");
	this->mimeList["application/vnd.sema"] = new Mime("Secured eMail", "application/vnd.sema", ".sema");
	this->mimeList["application/vnd.semd"] = new Mime("Secured eMail", "application/vnd.semd", ".semd");
	this->mimeList["application/vnd.semf"] = new Mime("Secured eMail", "application/vnd.semf", ".semf");
	this->mimeList["application/vnd.seemail"] = new Mime("SeeMail", "application/vnd.seemail", ".see");
	this->mimeList["application/x-font-snf"] = new Mime("Server Normal Format", "application/x-font-snf", ".snf");
	this->mimeList["application/scvp-vp-request"] = new Mime("Server-Based Certificate Validation Protocol - Validation Policies - Request", "application/scvp-vp-request", ".spq");
	this->mimeList["application/scvp-vp-response"] = new Mime("Server-Based Certificate Validation Protocol - Validation Policies - Response", "application/scvp-vp-response", ".spp");
	this->mimeList["application/scvp-cv-request"] = new Mime("Server-Based Certificate Validation Protocol - Validation Request", "application/scvp-cv-request", ".scq");
	this->mimeList["application/scvp-cv-response"] = new Mime("Server-Based Certificate Validation Protocol - Validation Response", "application/scvp-cv-response", ".scs");
	this->mimeList["application/sdp"] = new Mime("Session Description Protocol", "application/sdp", ".sdp");
	this->mimeList["text/x-setext"] = new Mime("Setext", "text/x-setext", ".etx");
	this->mimeList["video/x-sgi-movie"] = new Mime("SGI Movie", "video/x-sgi-movie", ".movie");
	this->mimeList["application/vnd.shana.informed.formdata"] = new Mime("Shana Informed Filler", "application/vnd.shana.informed.formdata", ".ifm");
	this->mimeList["application/vnd.shana.informed.formtemplate"] = new Mime("Shana Informed Filler", "application/vnd.shana.informed.formtemplate", ".itp");
	this->mimeList["application/vnd.shana.informed.interchange"] = new Mime("Shana Informed Filler", "application/vnd.shana.informed.interchange", ".iif");
	this->mimeList["application/vnd.shana.informed.package"] = new Mime("Shana Informed Filler", "application/vnd.shana.informed.package", ".ipk");
	this->mimeList["application/thraud+xml"] = new Mime("Sharing Transaction Fraud Data", "application/thraud+xml", ".tfi");
	this->mimeList["application/x-shar"] = new Mime("Shell Archive", "application/x-shar", ".shar");
	this->mimeList["image/x-rgb"] = new Mime("Silicon Graphics RGB Bitmap", "image/x-rgb", ".rgb");
	this->mimeList["application/vnd.epson.salt"] = new Mime("SimpleAnimeLite Player", "application/vnd.epson.salt", ".slt");
	this->mimeList["application/vnd.accpac.simply.aso"] = new Mime("Simply Accounting", "application/vnd.accpac.simply.aso", ".aso");
	this->mimeList["application/vnd.accpac.simply.imp"] = new Mime("Simply Accounting - Data Import", "application/vnd.accpac.simply.imp", ".imp");
	this->mimeList["application/vnd.simtech-mindmapper"] = new Mime("SimTech MindMapper", "application/vnd.simtech-mindmapper", ".twd");
	this->mimeList["application/vnd.commonspace"] = new Mime("Sixth Floor Media - CommonSpace", "application/vnd.commonspace", ".csp");
	this->mimeList["application/vnd.yamaha.smaf-audio"] = new Mime("SMAF Audio", "application/vnd.yamaha.smaf-audio", ".saf");
	this->mimeList["application/vnd.smaf"] = new Mime("SMAF File", "application/vnd.smaf", ".mmf");
	this->mimeList["application/vnd.yamaha.smaf-phrase"] = new Mime("SMAF Phrase", "application/vnd.yamaha.smaf-phrase", ".spf");
	this->mimeList["application/vnd.smart.teacher"] = new Mime("SMART Technologies Apps", "application/vnd.smart.teacher", ".teacher");
	this->mimeList["application/vnd.svd"] = new Mime("SourceView Document", "application/vnd.svd", ".svd");
	this->mimeList["application/sparql-query"] = new Mime("SPARQL - Query", "application/sparql-query", ".rq");
	this->mimeList["application/sparql-results+xml"] = new Mime("SPARQL - Results", "application/sparql-results+xml", ".srx");
	this->mimeList["application/srgs"] = new Mime("Speech Recognition Grammar Specification", "application/srgs", ".gram");
	this->mimeList["application/srgs+xml"] = new Mime("Speech Recognition Grammar Specification - XML", "application/srgs+xml", ".grxml");
	this->mimeList["application/ssml+xml"] = new Mime("Speech Synthesis Markup Language", "application/ssml+xml", ".ssml");
	this->mimeList["application/vnd.koan"] = new Mime("SSEYO Koan Play File", "application/vnd.koan", ".skp");
	this->mimeList["text/sgml"] = new Mime("Standard Generalized Markup Language (SGML)", "text/sgml", ".sgml");
	this->mimeList["application/vnd.stardivision.calc"] = new Mime("StarOffice - Calc", "application/vnd.stardivision.calc", ".sdc");
	this->mimeList["application/vnd.stardivision.draw"] = new Mime("StarOffice - Draw", "application/vnd.stardivision.draw", ".sda");
	this->mimeList["application/vnd.stardivision.impress"] = new Mime("StarOffice - Impress", "application/vnd.stardivision.impress", ".sdd");
	this->mimeList["application/vnd.stardivision.math"] = new Mime("StarOffice - Math", "application/vnd.stardivision.math", ".smf");
	this->mimeList["application/vnd.stardivision.writer"] = new Mime("StarOffice - Writer", "application/vnd.stardivision.writer", ".sdw");
	this->mimeList["application/vnd.stardivision.writer-global"] = new Mime("StarOffice - Writer (Global)", "application/vnd.stardivision.writer-global", ".sgl");
	this->mimeList["application/vnd.stepmania.stepchart"] = new Mime("StepMania", "application/vnd.stepmania.stepchart", ".sm");
	this->mimeList["application/x-stuffit"] = new Mime("Stuffit Archive", "application/x-stuffit", ".sit");
	this->mimeList["application/x-stuffitx"] = new Mime("Stuffit Archive", "application/x-stuffitx", ".sitx");
	this->mimeList["application/vnd.solent.sdkm+xml"] = new Mime("SudokuMagic", "application/vnd.solent.sdkm+xml", ".sdkm");
	this->mimeList["application/vnd.olpc-sugar"] = new Mime("Sugar Linux Application Bundle", "application/vnd.olpc-sugar", ".xo");
	this->mimeList["audio/basic"] = new Mime("Sun Audio - Au file format", "audio/basic", ".au");
	this->mimeList["application/vnd.wqd"] = new Mime("SundaHus WQ", "application/vnd.wqd", ".wqd");
	this->mimeList["application/vnd.symbian.install"] = new Mime("Symbian Install Package", "application/vnd.symbian.install", ".sis");
	this->mimeList["application/smil+xml"] = new Mime("Synchronized Multimedia Integration Language", "application/smil+xml", ".smi");
	this->mimeList["application/vnd.syncml+xml"] = new Mime("SyncML", "application/vnd.syncml+xml", ".xsm");
	this->mimeList["application/vnd.syncml.dm+wbxml"] = new Mime("SyncML - Device Management", "application/vnd.syncml.dm+wbxml", ".bdm");
	this->mimeList["application/vnd.syncml.dm+xml"] = new Mime("SyncML - Device Management", "application/vnd.syncml.dm+xml", ".xdm");
	this->mimeList["application/x-sv4cpio"] = new Mime("System V Release 4 CPIO Archive", "application/x-sv4cpio", ".sv4cpio");
	this->mimeList["application/x-sv4crc"] = new Mime("System V Release 4 CPIO Checksum Data", "application/x-sv4crc", ".sv4crc");
	this->mimeList["application/sbml+xml"] = new Mime("Systems Biology Markup Language", "application/sbml+xml", ".sbml");
	this->mimeList["text/tab-separated-values"] = new Mime("Tab Seperated Values", "text/tab-separated-values", ".tsv");
	this->mimeList["image/tiff"] = new Mime("Tagged Image File Format", "image/tiff", ".tiff");
	this->mimeList["application/vnd.tao.intent-module-archive"] = new Mime("Tao Intent", "application/vnd.tao.intent-module-archive", ".tao");
	this->mimeList["application/x-tar"] = new Mime("Tar File (Tape Archive)", "application/x-tar", ".tar");
	this->mimeList["application/x-tcl"] = new Mime("Tcl Script", "application/x-tcl", ".tcl");
	this->mimeList["application/x-tex"] = new Mime("TeX", "application/x-tex", ".tex");
	this->mimeList["application/x-tex-tfm"] = new Mime("TeX Font Metric", "application/x-tex-tfm", ".tfm");
	this->mimeList["application/tei+xml"] = new Mime("Text Encoding and Interchange", "application/tei+xml", ".tei");
	this->mimeList["application/vnd.spotfire.dxp"] = new Mime("TIBCO Spotfire", "application/vnd.spotfire.dxp", ".dxp");
	this->mimeList["application/vnd.spotfire.sfs"] = new Mime("TIBCO Spotfire", "application/vnd.spotfire.sfs", ".sfs");
	this->mimeList["application/timestamped-data"] = new Mime("Time Stamped Data Envelope", "application/timestamped-data", ".tsd");
	this->mimeList["application/vnd.trid.tpt"] = new Mime("TRI Systems Config", "application/vnd.trid.tpt", ".tpt");
	this->mimeList["application/vnd.triscape.mxs"] = new Mime("Triscape Map Explorer", "application/vnd.triscape.mxs", ".mxs");
	this->mimeList["text/troff"] = new Mime("troff", "text/troff", ".t");
	this->mimeList["application/vnd.trueapp"] = new Mime("True BASIC", "application/vnd.trueapp", ".tra");
	this->mimeList["application/x-font-ttf"] = new Mime("TrueType Font", "application/x-font-ttf", ".ttf");
	this->mimeList["text/turtle"] = new Mime("Turtle (Terse RDF Triple Language)", "text/turtle", ".ttl");
	this->mimeList["application/vnd.umajin"] = new Mime("UMAJIN", "application/vnd.umajin", ".umj");
	this->mimeList["application/vnd.uoml+xml"] = new Mime("Unique Object Markup Language", "application/vnd.uoml+xml", ".uoml");
	this->mimeList["application/vnd.unity"] = new Mime("Unity 3d", "application/vnd.unity", ".unityweb");
	this->mimeList["application/vnd.ufdl"] = new Mime("Universal Forms Description Language", "application/vnd.ufdl", ".ufd");
	this->mimeList["text/uri-list"] = new Mime("URI Resolution Services", "text/uri-list", ".uri");
	this->mimeList["application/vnd.uiq.theme"] = new Mime("User Interface Quartz - Theme (Symbian)", "application/vnd.uiq.theme", ".utz");
	this->mimeList["application/x-ustar"] = new Mime("Ustar (Uniform Standard Tape Archive)", "application/x-ustar", ".ustar");
	this->mimeList["text/x-uuencode"] = new Mime("UUEncode", "text/x-uuencode", ".uu");
	this->mimeList["text/x-vcalendar"] = new Mime("vCalendar", "text/x-vcalendar", ".vcs");
	this->mimeList["text/x-vcard"] = new Mime("vCard", "text/x-vcard", ".vcf");
	this->mimeList["application/x-cdlink"] = new Mime("Video CD", "application/x-cdlink", ".vcd");
	this->mimeList["application/vnd.vsf"] = new Mime("Viewport+", "application/vnd.vsf", ".vsf");
	this->mimeList["model/vrml"] = new Mime("Virtual Reality Modeling Language", "model/vrml", ".wrl");
	this->mimeList["application/vnd.vcx"] = new Mime("VirtualCatalog", "application/vnd.vcx", ".vcx");
	this->mimeList["model/vnd.mts"] = new Mime("Virtue MTS", "model/vnd.mts", ".mts");
	this->mimeList["model/vnd.vtu"] = new Mime("Virtue VTU", "model/vnd.vtu", ".vtu");
	this->mimeList["application/vnd.visionary"] = new Mime("Visionary", "application/vnd.visionary", ".vis");
	this->mimeList["video/vnd.vivo"] = new Mime("Vivo", "video/vnd.vivo", ".viv");
	this->mimeList["application/ccxml+xml,"] = new Mime("Voice Browser Call Control", "application/ccxml+xml,", ".ccxml");
	this->mimeList["application/voicexml+xml"] = new Mime("VoiceXML", "application/voicexml+xml", ".vxml");
	this->mimeList["application/x-wais-source"] = new Mime("WAIS Source", "application/x-wais-source", ".src");
	this->mimeList["application/vnd.wap.wbxml"] = new Mime("WAP Binary XML (WBXML)", "application/vnd.wap.wbxml", ".wbxml");
	this->mimeList["image/vnd.wap.wbmp"] = new Mime("WAP Bitamp (WBMP)", "image/vnd.wap.wbmp", ".wbmp");
	this->mimeList["audio/x-wav"] = new Mime("Waveform Audio File Format (WAV)", "audio/x-wav", ".wav");
	this->mimeList["application/davmount+xml"] = new Mime("Web Distributed Authoring and Versioning", "application/davmount+xml", ".davmount");
	this->mimeList["application/x-font-woff"] = new Mime("Web Open Font Format", "application/x-font-woff", ".woff");
	this->mimeList["application/wspolicy+xml"] = new Mime("Web Services Policy", "application/wspolicy+xml", ".wspolicy");
	this->mimeList["image/webp"] = new Mime("WebP Image", "image/webp", ".webp");
	this->mimeList["application/vnd.webturbo"] = new Mime("WebTurbo", "application/vnd.webturbo", ".wtb");
	this->mimeList["application/widget"] = new Mime("Widget Packaging and XML Configuration", "application/widget", ".wgt");
	this->mimeList["application/winhlp"] = new Mime("WinHelp", "application/winhlp", ".hlp");
	this->mimeList["text/vnd.wap.wml"] = new Mime("Wireless Markup Language (WML)", "text/vnd.wap.wml", ".wml");
	this->mimeList["text/vnd.wap.wmlscript"] = new Mime("Wireless Markup Language Script (WMLScript)", "text/vnd.wap.wmlscript", ".wmls");
	this->mimeList["application/vnd.wap.wmlscriptc"] = new Mime("WMLScript", "application/vnd.wap.wmlscriptc", ".wmlsc");
	this->mimeList["application/vnd.wordperfect"] = new Mime("Wordperfect", "application/vnd.wordperfect", ".wpd");
	this->mimeList["application/vnd.wt.stf"] = new Mime("Worldtalk", "application/vnd.wt.stf", ".stf");
	this->mimeList["application/wsdl+xml"] = new Mime("WSDL - Web Services Description Language", "application/wsdl+xml", ".wsdl");
	this->mimeList["image/x-xbitmap"] = new Mime("X BitMap", "image/x-xbitmap", ".xbm");
	this->mimeList["image/x-xpixmap"] = new Mime("X PixMap", "image/x-xpixmap", ".xpm");
	this->mimeList["image/x-xwindowdump"] = new Mime("X Window Dump", "image/x-xwindowdump", ".xwd");
	this->mimeList["application/x-x509-ca-cert"] = new Mime("X.509 Certificate", "application/x-x509-ca-cert", ".der");
	this->mimeList["application/x-xfig"] = new Mime("Xfig", "application/x-xfig", ".fig");
	this->mimeList["application/xhtml+xml"] = new Mime("XHTML - The Extensible HyperText Markup Language", "application/xhtml+xml", ".xhtml");
	this->mimeList["application/xml"] = new Mime("XML - Extensible Markup Language", "application/xml", ".xml");
	this->mimeList["application/xcap-diff+xml"] = new Mime("XML Configuration Access Protocol - XCAP Diff", "application/xcap-diff+xml", ".xdf");
	this->mimeList["application/xenc+xml"] = new Mime("XML Encryption Syntax and Processing", "application/xenc+xml", ".xenc");
	this->mimeList["application/patch-ops-error+xml"] = new Mime("XML Patch Framework", "application/patch-ops-error+xml", ".xer");
	this->mimeList["application/resource-lists+xml"] = new Mime("XML Resource Lists", "application/resource-lists+xml", ".rl");
	this->mimeList["application/rls-services+xml"] = new Mime("XML Resource Lists", "application/rls-services+xml", ".rs");
	this->mimeList["application/resource-lists-diff+xml"] = new Mime("XML Resource Lists Diff", "application/resource-lists-diff+xml", ".rld");
	this->mimeList["application/xslt+xml"] = new Mime("XML Transformations", "application/xslt+xml", ".xslt");
	this->mimeList["application/xop+xml"] = new Mime("XML-Binary Optimized Packaging", "application/xop+xml", ".xop");
	this->mimeList["application/x-xpinstall"] = new Mime("XPInstall - Mozilla", "application/x-xpinstall", ".xpi");
	this->mimeList["application/xspf+xml"] = new Mime("XSPF - XML Shareable Playlist Format", "application/xspf+xml", ".xspf");
	this->mimeList["application/vnd.mozilla.xul+xml"] = new Mime("XUL - XML User Interface Language", "application/vnd.mozilla.xul+xml", ".xul");
	this->mimeList["chemical/x-xyz"] = new Mime("XYZ File Format", "chemical/x-xyz", ".xyz");
	this->mimeList["text/yaml"] = new Mime("YAML Ain't Markup Language / Yet Another Markup Language", "text/yaml", ".yaml");
	this->mimeList["application/yang"] = new Mime("YANG Data Modeling Language", "application/yang", ".yang");
	this->mimeList["application/yin+xml"] = new Mime("YIN (YANG - XML)", "application/yin+xml", ".yin");
	this->mimeList["application/vnd.zul"] = new Mime("Z.U.L. Geometry", "application/vnd.zul", ".zir");
	this->mimeList["application/zip"] = new Mime("Zip Archive", "application/zip", ".zip");
	this->mimeList["application/vnd.handheld-entertainment+xml"] = new Mime("ZVUE Media Manager", "application/vnd.handheld-entertainment+xml", ".zmm");
	this->mimeList["application/vnd.zzazz.deck+xml"] = new Mime("Zzazz Deck", "application/vnd.zzazz.deck+xml", ".zaz");
	this->mimeList["application/x-empty"] = new Mime("Empty", "application/x-empty");
}

Detect::~Detect() {
	for (auto const &item : this->mimeList) {
		delete item.second;
	}
}

void Detect::parseMagic(const char *magicrs) {
	std::string str(magicrs);
	std::size_t pos = str.find(';');

	if (pos != std::string::npos) {

		/* Can we match this to any known mime types */
		this->mimeMatch = this->mimeList[str.substr(0, pos)];
		if (!this->mimeMatch)
			return;

		if (str.at(pos + 1) == ' ') {
			++pos;
		}

		this->m_Charset = str.substr(pos + 1);
	}

}

void Detect::mimeFromBuffer(const char *buffer, std::size_t sz) {
	magic_t myt = magic_open(MAGIC_CONTINUE | MAGIC_ERROR | MAGIC_MIME);

	magic_load(myt, NULL);
	const char *rs = magic_buffer(myt, buffer, sz);
	if (rs)
		parseMagic(rs);

	magic_close(myt);
}

void Detect::mimeFromExtension(const std::string& extension) {
	for (auto const &item : this->mimeList) {
		if (extension == item.second->extension()) {
			this->mimeMatch = item.second;
		}
	}
}
